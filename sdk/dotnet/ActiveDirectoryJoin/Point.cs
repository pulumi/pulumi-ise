// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ise.ActiveDirectoryJoin
{
    /// <summary>
    /// This resource can manage an Active Directory Join Point.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import ise:ActiveDirectoryJoin/point:Point example "76d24097-41c4-4558-a4d0-a8c07ac08470"
    /// ```
    /// </summary>
    [IseResourceType("ise:ActiveDirectoryJoin/point:Point")]
    public partial class Point : global::Pulumi.CustomResource
    {
        /// <summary>
        /// String that contains the names of the scopes that the active directory belongs to. Names are separated by comma. -
        /// Default value: `Default_Scope`
        /// </summary>
        [Output("adScopesNames")]
        public Output<string> AdScopesNames { get; private set; } = null!;

        /// <summary>
        /// Aging Time - Default value: `5`
        /// </summary>
        [Output("agingTime")]
        public Output<int> AgingTime { get; private set; } = null!;

        /// <summary>
        /// List of AD attributes
        /// </summary>
        [Output("attributes")]
        public Output<ImmutableArray<Outputs.PointAttribute>> Attributes { get; private set; } = null!;

        /// <summary>
        /// Enable prevent AD account lockout for WIRELESS/WIRED/BOTH - Choices: `WIRELESS`, `WIRED`, `BOTH`
        /// </summary>
        [Output("authProtectionType")]
        public Output<string?> AuthProtectionType { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("country")]
        public Output<string?> Country { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("department")]
        public Output<string?> Department { get; private set; } = null!;

        /// <summary>
        /// Join point description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// AD domain associated with the join point
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("email")]
        public Output<string?> Email { get; private set; } = null!;

        /// <summary>
        /// Enable Callback For Dial In Client - Default value: `false`
        /// </summary>
        [Output("enableCallbackForDialinClient")]
        public Output<bool> EnableCallbackForDialinClient { get; private set; } = null!;

        /// <summary>
        /// Enable Dial In Permission Check - Default value: `false`
        /// </summary>
        [Output("enableDialinPermissionCheck")]
        public Output<bool> EnableDialinPermissionCheck { get; private set; } = null!;

        /// <summary>
        /// - Default value: `true`
        /// </summary>
        [Output("enableDomainAllowedList")]
        public Output<bool> EnableDomainAllowedList { get; private set; } = null!;

        /// <summary>
        /// Enable prevent AD account lockout due to too many bad password attempts - Default value: `false`
        /// </summary>
        [Output("enableFailedAuthProtection")]
        public Output<bool> EnableFailedAuthProtection { get; private set; } = null!;

        /// <summary>
        /// Enable Machine Access - Default value: `true`
        /// </summary>
        [Output("enableMachineAccess")]
        public Output<bool> EnableMachineAccess { get; private set; } = null!;

        /// <summary>
        /// Enable Machine Authentication - Default value: `true`
        /// </summary>
        [Output("enableMachineAuth")]
        public Output<bool> EnableMachineAuth { get; private set; } = null!;

        /// <summary>
        /// Enable Password Change - Default value: `true`
        /// </summary>
        [Output("enablePassChange")]
        public Output<bool> EnablePassChange { get; private set; } = null!;

        /// <summary>
        /// Enable Rewrites - Default value: `false`
        /// </summary>
        [Output("enableRewrites")]
        public Output<bool> EnableRewrites { get; private set; } = null!;

        /// <summary>
        /// Number of bad password attempts - Default value: `5`
        /// </summary>
        [Output("failedAuthThreshold")]
        public Output<int> FailedAuthThreshold { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("firstName")]
        public Output<string?> FirstName { get; private set; } = null!;

        /// <summary>
        /// List of AD Groups
        /// </summary>
        [Output("groups")]
        public Output<ImmutableArray<Outputs.PointGroup>> Groups { get; private set; } = null!;

        /// <summary>
        /// Identity Not In AD Behaviour - Choices: `REJECT`, `SEARCH_JOINED_FOREST`, `SEARCH_ALL`
        /// </summary>
        [Output("identityNotInAdBehaviour")]
        public Output<string?> IdentityNotInAdBehaviour { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("jobTitle")]
        public Output<string?> JobTitle { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("lastName")]
        public Output<string?> LastName { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("locality")]
        public Output<string?> Locality { get; private set; } = null!;

        /// <summary>
        /// The name of the active directory join point
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("organizationalUnit")]
        public Output<string?> OrganizationalUnit { get; private set; } = null!;

        /// <summary>
        /// Plain Text Authentication - Default value: `false`
        /// </summary>
        [Output("plaintextAuth")]
        public Output<bool> PlaintextAuth { get; private set; } = null!;

        /// <summary>
        /// List of Rewrite rules
        /// </summary>
        [Output("rewriteRules")]
        public Output<ImmutableArray<Outputs.PointRewriteRule>> RewriteRules { get; private set; } = null!;

        /// <summary>
        /// Schema - Choices: `ACTIVE_DIRECTORY`, `CUSTOM`
        /// </summary>
        [Output("schema")]
        public Output<string?> Schema { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("stateOrProvince")]
        public Output<string?> StateOrProvince { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("streetAddress")]
        public Output<string?> StreetAddress { get; private set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Output("telephone")]
        public Output<string?> Telephone { get; private set; } = null!;

        /// <summary>
        /// Unreachable Domains Behaviour - Choices: `PROCEED`, `DROP`
        /// </summary>
        [Output("unreachableDomainsBehaviour")]
        public Output<string?> UnreachableDomainsBehaviour { get; private set; } = null!;


        /// <summary>
        /// Create a Point resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Point(string name, PointArgs args, CustomResourceOptions? options = null)
            : base("ise:ActiveDirectoryJoin/point:Point", name, args ?? new PointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Point(string name, Input<string> id, PointState? state = null, CustomResourceOptions? options = null)
            : base("ise:ActiveDirectoryJoin/point:Point", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Point resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Point Get(string name, Input<string> id, PointState? state = null, CustomResourceOptions? options = null)
        {
            return new Point(name, id, state, options);
        }
    }

    public sealed class PointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// String that contains the names of the scopes that the active directory belongs to. Names are separated by comma. -
        /// Default value: `Default_Scope`
        /// </summary>
        [Input("adScopesNames")]
        public Input<string>? AdScopesNames { get; set; }

        /// <summary>
        /// Aging Time - Default value: `5`
        /// </summary>
        [Input("agingTime")]
        public Input<int>? AgingTime { get; set; }

        [Input("attributes")]
        private InputList<Inputs.PointAttributeArgs>? _attributes;

        /// <summary>
        /// List of AD attributes
        /// </summary>
        public InputList<Inputs.PointAttributeArgs> Attributes
        {
            get => _attributes ?? (_attributes = new InputList<Inputs.PointAttributeArgs>());
            set => _attributes = value;
        }

        /// <summary>
        /// Enable prevent AD account lockout for WIRELESS/WIRED/BOTH - Choices: `WIRELESS`, `WIRED`, `BOTH`
        /// </summary>
        [Input("authProtectionType")]
        public Input<string>? AuthProtectionType { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("country")]
        public Input<string>? Country { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("department")]
        public Input<string>? Department { get; set; }

        /// <summary>
        /// Join point description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// AD domain associated with the join point
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Enable Callback For Dial In Client - Default value: `false`
        /// </summary>
        [Input("enableCallbackForDialinClient")]
        public Input<bool>? EnableCallbackForDialinClient { get; set; }

        /// <summary>
        /// Enable Dial In Permission Check - Default value: `false`
        /// </summary>
        [Input("enableDialinPermissionCheck")]
        public Input<bool>? EnableDialinPermissionCheck { get; set; }

        /// <summary>
        /// - Default value: `true`
        /// </summary>
        [Input("enableDomainAllowedList")]
        public Input<bool>? EnableDomainAllowedList { get; set; }

        /// <summary>
        /// Enable prevent AD account lockout due to too many bad password attempts - Default value: `false`
        /// </summary>
        [Input("enableFailedAuthProtection")]
        public Input<bool>? EnableFailedAuthProtection { get; set; }

        /// <summary>
        /// Enable Machine Access - Default value: `true`
        /// </summary>
        [Input("enableMachineAccess")]
        public Input<bool>? EnableMachineAccess { get; set; }

        /// <summary>
        /// Enable Machine Authentication - Default value: `true`
        /// </summary>
        [Input("enableMachineAuth")]
        public Input<bool>? EnableMachineAuth { get; set; }

        /// <summary>
        /// Enable Password Change - Default value: `true`
        /// </summary>
        [Input("enablePassChange")]
        public Input<bool>? EnablePassChange { get; set; }

        /// <summary>
        /// Enable Rewrites - Default value: `false`
        /// </summary>
        [Input("enableRewrites")]
        public Input<bool>? EnableRewrites { get; set; }

        /// <summary>
        /// Number of bad password attempts - Default value: `5`
        /// </summary>
        [Input("failedAuthThreshold")]
        public Input<int>? FailedAuthThreshold { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        [Input("groups")]
        private InputList<Inputs.PointGroupArgs>? _groups;

        /// <summary>
        /// List of AD Groups
        /// </summary>
        public InputList<Inputs.PointGroupArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.PointGroupArgs>());
            set => _groups = value;
        }

        /// <summary>
        /// Identity Not In AD Behaviour - Choices: `REJECT`, `SEARCH_JOINED_FOREST`, `SEARCH_ALL`
        /// </summary>
        [Input("identityNotInAdBehaviour")]
        public Input<string>? IdentityNotInAdBehaviour { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("jobTitle")]
        public Input<string>? JobTitle { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("lastName")]
        public Input<string>? LastName { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("locality")]
        public Input<string>? Locality { get; set; }

        /// <summary>
        /// The name of the active directory join point
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("organizationalUnit")]
        public Input<string>? OrganizationalUnit { get; set; }

        /// <summary>
        /// Plain Text Authentication - Default value: `false`
        /// </summary>
        [Input("plaintextAuth")]
        public Input<bool>? PlaintextAuth { get; set; }

        [Input("rewriteRules")]
        private InputList<Inputs.PointRewriteRuleArgs>? _rewriteRules;

        /// <summary>
        /// List of Rewrite rules
        /// </summary>
        public InputList<Inputs.PointRewriteRuleArgs> RewriteRules
        {
            get => _rewriteRules ?? (_rewriteRules = new InputList<Inputs.PointRewriteRuleArgs>());
            set => _rewriteRules = value;
        }

        /// <summary>
        /// Schema - Choices: `ACTIVE_DIRECTORY`, `CUSTOM`
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("stateOrProvince")]
        public Input<string>? StateOrProvince { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("streetAddress")]
        public Input<string>? StreetAddress { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("telephone")]
        public Input<string>? Telephone { get; set; }

        /// <summary>
        /// Unreachable Domains Behaviour - Choices: `PROCEED`, `DROP`
        /// </summary>
        [Input("unreachableDomainsBehaviour")]
        public Input<string>? UnreachableDomainsBehaviour { get; set; }

        public PointArgs()
        {
        }
        public static new PointArgs Empty => new PointArgs();
    }

    public sealed class PointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// String that contains the names of the scopes that the active directory belongs to. Names are separated by comma. -
        /// Default value: `Default_Scope`
        /// </summary>
        [Input("adScopesNames")]
        public Input<string>? AdScopesNames { get; set; }

        /// <summary>
        /// Aging Time - Default value: `5`
        /// </summary>
        [Input("agingTime")]
        public Input<int>? AgingTime { get; set; }

        [Input("attributes")]
        private InputList<Inputs.PointAttributeGetArgs>? _attributes;

        /// <summary>
        /// List of AD attributes
        /// </summary>
        public InputList<Inputs.PointAttributeGetArgs> Attributes
        {
            get => _attributes ?? (_attributes = new InputList<Inputs.PointAttributeGetArgs>());
            set => _attributes = value;
        }

        /// <summary>
        /// Enable prevent AD account lockout for WIRELESS/WIRED/BOTH - Choices: `WIRELESS`, `WIRED`, `BOTH`
        /// </summary>
        [Input("authProtectionType")]
        public Input<string>? AuthProtectionType { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("country")]
        public Input<string>? Country { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("department")]
        public Input<string>? Department { get; set; }

        /// <summary>
        /// Join point description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// AD domain associated with the join point
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Enable Callback For Dial In Client - Default value: `false`
        /// </summary>
        [Input("enableCallbackForDialinClient")]
        public Input<bool>? EnableCallbackForDialinClient { get; set; }

        /// <summary>
        /// Enable Dial In Permission Check - Default value: `false`
        /// </summary>
        [Input("enableDialinPermissionCheck")]
        public Input<bool>? EnableDialinPermissionCheck { get; set; }

        /// <summary>
        /// - Default value: `true`
        /// </summary>
        [Input("enableDomainAllowedList")]
        public Input<bool>? EnableDomainAllowedList { get; set; }

        /// <summary>
        /// Enable prevent AD account lockout due to too many bad password attempts - Default value: `false`
        /// </summary>
        [Input("enableFailedAuthProtection")]
        public Input<bool>? EnableFailedAuthProtection { get; set; }

        /// <summary>
        /// Enable Machine Access - Default value: `true`
        /// </summary>
        [Input("enableMachineAccess")]
        public Input<bool>? EnableMachineAccess { get; set; }

        /// <summary>
        /// Enable Machine Authentication - Default value: `true`
        /// </summary>
        [Input("enableMachineAuth")]
        public Input<bool>? EnableMachineAuth { get; set; }

        /// <summary>
        /// Enable Password Change - Default value: `true`
        /// </summary>
        [Input("enablePassChange")]
        public Input<bool>? EnablePassChange { get; set; }

        /// <summary>
        /// Enable Rewrites - Default value: `false`
        /// </summary>
        [Input("enableRewrites")]
        public Input<bool>? EnableRewrites { get; set; }

        /// <summary>
        /// Number of bad password attempts - Default value: `5`
        /// </summary>
        [Input("failedAuthThreshold")]
        public Input<int>? FailedAuthThreshold { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        [Input("groups")]
        private InputList<Inputs.PointGroupGetArgs>? _groups;

        /// <summary>
        /// List of AD Groups
        /// </summary>
        public InputList<Inputs.PointGroupGetArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.PointGroupGetArgs>());
            set => _groups = value;
        }

        /// <summary>
        /// Identity Not In AD Behaviour - Choices: `REJECT`, `SEARCH_JOINED_FOREST`, `SEARCH_ALL`
        /// </summary>
        [Input("identityNotInAdBehaviour")]
        public Input<string>? IdentityNotInAdBehaviour { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("jobTitle")]
        public Input<string>? JobTitle { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("lastName")]
        public Input<string>? LastName { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("locality")]
        public Input<string>? Locality { get; set; }

        /// <summary>
        /// The name of the active directory join point
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("organizationalUnit")]
        public Input<string>? OrganizationalUnit { get; set; }

        /// <summary>
        /// Plain Text Authentication - Default value: `false`
        /// </summary>
        [Input("plaintextAuth")]
        public Input<bool>? PlaintextAuth { get; set; }

        [Input("rewriteRules")]
        private InputList<Inputs.PointRewriteRuleGetArgs>? _rewriteRules;

        /// <summary>
        /// List of Rewrite rules
        /// </summary>
        public InputList<Inputs.PointRewriteRuleGetArgs> RewriteRules
        {
            get => _rewriteRules ?? (_rewriteRules = new InputList<Inputs.PointRewriteRuleGetArgs>());
            set => _rewriteRules = value;
        }

        /// <summary>
        /// Schema - Choices: `ACTIVE_DIRECTORY`, `CUSTOM`
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("stateOrProvince")]
        public Input<string>? StateOrProvince { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("streetAddress")]
        public Input<string>? StreetAddress { get; set; }

        /// <summary>
        /// User info attribute
        /// </summary>
        [Input("telephone")]
        public Input<string>? Telephone { get; set; }

        /// <summary>
        /// Unreachable Domains Behaviour - Choices: `PROCEED`, `DROP`
        /// </summary>
        [Input("unreachableDomainsBehaviour")]
        public Input<string>? UnreachableDomainsBehaviour { get; set; }

        public PointState()
        {
        }
        public static new PointState Empty => new PointState();
    }
}
