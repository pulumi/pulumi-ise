// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ise.TrustSec
{
    /// <summary>
    /// Allows modifications to the default egress policy matrix rule
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ise = Pulumi.Ise;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ise.TrustSec.EgressMatrixCellDefault("example", new()
    ///     {
    ///         Description = "Default egress rule",
    ///         DefaultRule = "PERMIT_IP",
    ///         MatrixCellStatus = "ENABLED",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import ise:trustsec/egressMatrixCellDefault:EgressMatrixCellDefault example "92c1a900-8c01-11e6-996c-525400b48521"
    /// ```
    /// </summary>
    [IseResourceType("ise:trustsec/egressMatrixCellDefault:EgressMatrixCellDefault")]
    public partial class EgressMatrixCellDefault : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Can be used only if sgacls not specified. Final Catch All Rule - Choices: `NONE`, `DENY_IP`, `PERMIT_IP`
        /// </summary>
        [Output("defaultRule")]
        public Output<string?> DefaultRule { get; private set; } = null!;

        /// <summary>
        /// Description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
        /// </summary>
        [Output("matrixCellStatus")]
        public Output<string> MatrixCellStatus { get; private set; } = null!;

        /// <summary>
        /// List of TrustSec Security Groups ACLs
        /// </summary>
        [Output("sgacls")]
        public Output<ImmutableArray<string>> Sgacls { get; private set; } = null!;


        /// <summary>
        /// Create a EgressMatrixCellDefault resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EgressMatrixCellDefault(string name, EgressMatrixCellDefaultArgs? args = null, CustomResourceOptions? options = null)
            : base("ise:trustsec/egressMatrixCellDefault:EgressMatrixCellDefault", name, args ?? new EgressMatrixCellDefaultArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EgressMatrixCellDefault(string name, Input<string> id, EgressMatrixCellDefaultState? state = null, CustomResourceOptions? options = null)
            : base("ise:trustsec/egressMatrixCellDefault:EgressMatrixCellDefault", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EgressMatrixCellDefault resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EgressMatrixCellDefault Get(string name, Input<string> id, EgressMatrixCellDefaultState? state = null, CustomResourceOptions? options = null)
        {
            return new EgressMatrixCellDefault(name, id, state, options);
        }
    }

    public sealed class EgressMatrixCellDefaultArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Can be used only if sgacls not specified. Final Catch All Rule - Choices: `NONE`, `DENY_IP`, `PERMIT_IP`
        /// </summary>
        [Input("defaultRule")]
        public Input<string>? DefaultRule { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
        /// </summary>
        [Input("matrixCellStatus")]
        public Input<string>? MatrixCellStatus { get; set; }

        [Input("sgacls")]
        private InputList<string>? _sgacls;

        /// <summary>
        /// List of TrustSec Security Groups ACLs
        /// </summary>
        public InputList<string> Sgacls
        {
            get => _sgacls ?? (_sgacls = new InputList<string>());
            set => _sgacls = value;
        }

        public EgressMatrixCellDefaultArgs()
        {
        }
        public static new EgressMatrixCellDefaultArgs Empty => new EgressMatrixCellDefaultArgs();
    }

    public sealed class EgressMatrixCellDefaultState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Can be used only if sgacls not specified. Final Catch All Rule - Choices: `NONE`, `DENY_IP`, `PERMIT_IP`
        /// </summary>
        [Input("defaultRule")]
        public Input<string>? DefaultRule { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
        /// </summary>
        [Input("matrixCellStatus")]
        public Input<string>? MatrixCellStatus { get; set; }

        [Input("sgacls")]
        private InputList<string>? _sgacls;

        /// <summary>
        /// List of TrustSec Security Groups ACLs
        /// </summary>
        public InputList<string> Sgacls
        {
            get => _sgacls ?? (_sgacls = new InputList<string>());
            set => _sgacls = value;
        }

        public EgressMatrixCellDefaultState()
        {
        }
        public static new EgressMatrixCellDefaultState Empty => new EgressMatrixCellDefaultState();
    }
}
