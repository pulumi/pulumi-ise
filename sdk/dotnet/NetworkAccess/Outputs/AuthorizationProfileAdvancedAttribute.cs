// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ise.NetworkAccess.Outputs
{

    [OutputType]
    public sealed class AuthorizationProfileAdvancedAttribute
    {
        /// <summary>
        /// Dictionary name
        /// </summary>
        public readonly string? AttributeLeftDictionaryName;
        /// <summary>
        /// Attribute name
        /// </summary>
        public readonly string? AttributeLeftName;
        /// <summary>
        /// Dictionary name, only required when `AttributeRightValueType` is `AdvancedDictionaryAttribute`
        /// </summary>
        public readonly string? AttributeRightDictionaryName;
        /// <summary>
        /// Attribute name, only required when `AttributeRightValueType` is `AdvancedDictionaryAttribute`
        /// </summary>
        public readonly string? AttributeRightName;
        /// <summary>
        /// Attribute value, only required when `AttributeRightValueType` is `AttributeValue`
        /// </summary>
        public readonly string? AttributeRightValue;
        /// <summary>
        /// Advanced attribute value type
        ///   - Choices: `AdvancedDictionaryAttribute`, `AttributeValue`
        /// </summary>
        public readonly string? AttributeRightValueType;

        [OutputConstructor]
        private AuthorizationProfileAdvancedAttribute(
            string? attributeLeftDictionaryName,

            string? attributeLeftName,

            string? attributeRightDictionaryName,

            string? attributeRightName,

            string? attributeRightValue,

            string? attributeRightValueType)
        {
            AttributeLeftDictionaryName = attributeLeftDictionaryName;
            AttributeLeftName = attributeLeftName;
            AttributeRightDictionaryName = attributeRightDictionaryName;
            AttributeRightName = attributeRightName;
            AttributeRightValue = attributeRightValue;
            AttributeRightValueType = attributeRightValueType;
        }
    }
}
