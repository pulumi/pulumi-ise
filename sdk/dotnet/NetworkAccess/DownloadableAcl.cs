// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ise.NetworkAccess
{
    /// <summary>
    /// This resource can manage a Downloadable ACL.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ise = Pulumi.Ise;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ise.NetworkAccess.DownloadableAcl("example", new()
    ///     {
    ///         Name = "MyACL",
    ///         Description = "My first downloadable ACL",
    ///         Dacl = "permit ip any any",
    ///         DaclType = "IPV4",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import ise:networkaccess/downloadableAcl:DownloadableAcl example "76d24097-41c4-4558-a4d0-a8c07ac08470"
    /// ```
    /// </summary>
    [IseResourceType("ise:networkaccess/downloadableAcl:DownloadableAcl")]
    public partial class DownloadableAcl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The DACL content
        /// </summary>
        [Output("dacl")]
        public Output<string> Dacl { get; private set; } = null!;

        /// <summary>
        /// The type of ACL - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC` - Default value: `IPV4`
        /// </summary>
        [Output("daclType")]
        public Output<string> DaclType { get; private set; } = null!;

        /// <summary>
        /// Description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the downloadable ACL
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a DownloadableAcl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DownloadableAcl(string name, DownloadableAclArgs args, CustomResourceOptions? options = null)
            : base("ise:networkaccess/downloadableAcl:DownloadableAcl", name, args ?? new DownloadableAclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DownloadableAcl(string name, Input<string> id, DownloadableAclState? state = null, CustomResourceOptions? options = null)
            : base("ise:networkaccess/downloadableAcl:DownloadableAcl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DownloadableAcl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DownloadableAcl Get(string name, Input<string> id, DownloadableAclState? state = null, CustomResourceOptions? options = null)
        {
            return new DownloadableAcl(name, id, state, options);
        }
    }

    public sealed class DownloadableAclArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DACL content
        /// </summary>
        [Input("dacl", required: true)]
        public Input<string> Dacl { get; set; } = null!;

        /// <summary>
        /// The type of ACL - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC` - Default value: `IPV4`
        /// </summary>
        [Input("daclType")]
        public Input<string>? DaclType { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the downloadable ACL
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public DownloadableAclArgs()
        {
        }
        public static new DownloadableAclArgs Empty => new DownloadableAclArgs();
    }

    public sealed class DownloadableAclState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DACL content
        /// </summary>
        [Input("dacl")]
        public Input<string>? Dacl { get; set; }

        /// <summary>
        /// The type of ACL - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC` - Default value: `IPV4`
        /// </summary>
        [Input("daclType")]
        public Input<string>? DaclType { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the downloadable ACL
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public DownloadableAclState()
        {
        }
        public static new DownloadableAclState Empty => new DownloadableAclState();
    }
}
