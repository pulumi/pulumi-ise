// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ise.DeviceAdmin
{
    /// <summary>
    /// This resource is used to bulk update rank field in device admin Authorization exception rule. It serves as a workaround for the ISE API/Backend limitation which restricts rank assignments to a strictly incremental sequence. By utilizing this resource and device_admin_authorization_exception_rule resource, you can bypass the APIs limitation. Creation of this resource is performing PUT operation (Update) and it only tracks rank field. When this resource is destroyed, no action is performed on ISE and resource is just removed from state.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ise = Pulumi.Ise;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ise.DeviceAdmin.AuthorizationExceptionRuleUpdateRanks("example", new()
    ///     {
    ///         PolicySetId = "d82952cb-b901-4b09-b363-5ebf39bdbaf9",
    ///         Rules = new[]
    ///         {
    ///             new Ise.DeviceAdmin.Inputs.AuthorizationExceptionRuleUpdateRanksRuleArgs
    ///             {
    ///                 Id = "3741aca3-db08-4899-af73-2e3f65ec31e1",
    ///                 Rank = 0,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [IseResourceType("ise:deviceadmin/authorizationExceptionRuleUpdateRanks:AuthorizationExceptionRuleUpdateRanks")]
    public partial class AuthorizationExceptionRuleUpdateRanks : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Policy set ID
        /// </summary>
        [Output("policySetId")]
        public Output<string> PolicySetId { get; private set; } = null!;

        [Output("rules")]
        public Output<ImmutableArray<Outputs.AuthorizationExceptionRuleUpdateRanksRule>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a AuthorizationExceptionRuleUpdateRanks resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthorizationExceptionRuleUpdateRanks(string name, AuthorizationExceptionRuleUpdateRanksArgs args, CustomResourceOptions? options = null)
            : base("ise:deviceadmin/authorizationExceptionRuleUpdateRanks:AuthorizationExceptionRuleUpdateRanks", name, args ?? new AuthorizationExceptionRuleUpdateRanksArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthorizationExceptionRuleUpdateRanks(string name, Input<string> id, AuthorizationExceptionRuleUpdateRanksState? state = null, CustomResourceOptions? options = null)
            : base("ise:deviceadmin/authorizationExceptionRuleUpdateRanks:AuthorizationExceptionRuleUpdateRanks", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthorizationExceptionRuleUpdateRanks resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthorizationExceptionRuleUpdateRanks Get(string name, Input<string> id, AuthorizationExceptionRuleUpdateRanksState? state = null, CustomResourceOptions? options = null)
        {
            return new AuthorizationExceptionRuleUpdateRanks(name, id, state, options);
        }
    }

    public sealed class AuthorizationExceptionRuleUpdateRanksArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Policy set ID
        /// </summary>
        [Input("policySetId", required: true)]
        public Input<string> PolicySetId { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.AuthorizationExceptionRuleUpdateRanksRuleArgs>? _rules;
        public InputList<Inputs.AuthorizationExceptionRuleUpdateRanksRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.AuthorizationExceptionRuleUpdateRanksRuleArgs>());
            set => _rules = value;
        }

        public AuthorizationExceptionRuleUpdateRanksArgs()
        {
        }
        public static new AuthorizationExceptionRuleUpdateRanksArgs Empty => new AuthorizationExceptionRuleUpdateRanksArgs();
    }

    public sealed class AuthorizationExceptionRuleUpdateRanksState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Policy set ID
        /// </summary>
        [Input("policySetId")]
        public Input<string>? PolicySetId { get; set; }

        [Input("rules")]
        private InputList<Inputs.AuthorizationExceptionRuleUpdateRanksRuleGetArgs>? _rules;
        public InputList<Inputs.AuthorizationExceptionRuleUpdateRanksRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.AuthorizationExceptionRuleUpdateRanksRuleGetArgs>());
            set => _rules = value;
        }

        public AuthorizationExceptionRuleUpdateRanksState()
        {
        }
        public static new AuthorizationExceptionRuleUpdateRanksState Empty => new AuthorizationExceptionRuleUpdateRanksState();
    }
}
