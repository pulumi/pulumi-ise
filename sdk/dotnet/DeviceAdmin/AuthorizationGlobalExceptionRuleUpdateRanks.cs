// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ise.DeviceAdmin
{
    /// <summary>
    /// This resource is used to bulk update rank field in device admin authorization global exception rule. It serves as a workaround for the ISE API/Backend limitation which restricts rank assignments to a strictly incremental sequence. By utilizing this resource and DeviceAdminAuthorizationGlobalExceptionRule resource, you can bypass the APIs limitation. Creation of this resource is performing PUT operation (Update) and it only tracks rank field. When this resource is destroyed, no action is performed on ISE and resource is just removed from state.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ise = Pulumi.Ise;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ise.DeviceAdmin.AuthorizationGlobalExceptionRuleUpdateRanks("example", new()
    ///     {
    ///         Rules = new[]
    ///         {
    ///             new Ise.DeviceAdmin.Inputs.AuthorizationGlobalExceptionRuleUpdateRanksRuleArgs
    ///             {
    ///                 Id = "3741aca3-db08-4899-af73-2e3f65ec31e1",
    ///                 Rank = 0,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [IseResourceType("ise:deviceadmin/authorizationGlobalExceptionRuleUpdateRanks:AuthorizationGlobalExceptionRuleUpdateRanks")]
    public partial class AuthorizationGlobalExceptionRuleUpdateRanks : global::Pulumi.CustomResource
    {
        [Output("rules")]
        public Output<ImmutableArray<Outputs.AuthorizationGlobalExceptionRuleUpdateRanksRule>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a AuthorizationGlobalExceptionRuleUpdateRanks resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthorizationGlobalExceptionRuleUpdateRanks(string name, AuthorizationGlobalExceptionRuleUpdateRanksArgs? args = null, CustomResourceOptions? options = null)
            : base("ise:deviceadmin/authorizationGlobalExceptionRuleUpdateRanks:AuthorizationGlobalExceptionRuleUpdateRanks", name, args ?? new AuthorizationGlobalExceptionRuleUpdateRanksArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthorizationGlobalExceptionRuleUpdateRanks(string name, Input<string> id, AuthorizationGlobalExceptionRuleUpdateRanksState? state = null, CustomResourceOptions? options = null)
            : base("ise:deviceadmin/authorizationGlobalExceptionRuleUpdateRanks:AuthorizationGlobalExceptionRuleUpdateRanks", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthorizationGlobalExceptionRuleUpdateRanks resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthorizationGlobalExceptionRuleUpdateRanks Get(string name, Input<string> id, AuthorizationGlobalExceptionRuleUpdateRanksState? state = null, CustomResourceOptions? options = null)
        {
            return new AuthorizationGlobalExceptionRuleUpdateRanks(name, id, state, options);
        }
    }

    public sealed class AuthorizationGlobalExceptionRuleUpdateRanksArgs : global::Pulumi.ResourceArgs
    {
        [Input("rules")]
        private InputList<Inputs.AuthorizationGlobalExceptionRuleUpdateRanksRuleArgs>? _rules;
        public InputList<Inputs.AuthorizationGlobalExceptionRuleUpdateRanksRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.AuthorizationGlobalExceptionRuleUpdateRanksRuleArgs>());
            set => _rules = value;
        }

        public AuthorizationGlobalExceptionRuleUpdateRanksArgs()
        {
        }
        public static new AuthorizationGlobalExceptionRuleUpdateRanksArgs Empty => new AuthorizationGlobalExceptionRuleUpdateRanksArgs();
    }

    public sealed class AuthorizationGlobalExceptionRuleUpdateRanksState : global::Pulumi.ResourceArgs
    {
        [Input("rules")]
        private InputList<Inputs.AuthorizationGlobalExceptionRuleUpdateRanksRuleGetArgs>? _rules;
        public InputList<Inputs.AuthorizationGlobalExceptionRuleUpdateRanksRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.AuthorizationGlobalExceptionRuleUpdateRanksRuleGetArgs>());
            set => _rules = value;
        }

        public AuthorizationGlobalExceptionRuleUpdateRanksState()
        {
        }
        public static new AuthorizationGlobalExceptionRuleUpdateRanksState Empty => new AuthorizationGlobalExceptionRuleUpdateRanksState();
    }
}
