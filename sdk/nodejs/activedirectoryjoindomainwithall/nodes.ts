// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource can manage an Active Directory Join Domain with All Nodes.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ise from "@pulumi/ise";
 *
 * const example = new ise.activedirectoryjoindomainwithall.Nodes("example", {
 *     joinPointId: "73808580-b6e6-11ee-8960-de6d7692bc40",
 *     additionalDatas: [{
 *         name: "username",
 *         value: "administrator",
 *     }],
 * });
 * ```
 */
export class Nodes extends pulumi.CustomResource {
    /**
     * Get an existing Nodes resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NodesState, opts?: pulumi.CustomResourceOptions): Nodes {
        return new Nodes(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ise:ActiveDirectoryJoinDomainWithAll/nodes:Nodes';

    /**
     * Returns true if the given object is an instance of Nodes.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Nodes {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Nodes.__pulumiType;
    }

    public readonly additionalDatas!: pulumi.Output<outputs.ActiveDirectoryJoinDomainWithAll.NodesAdditionalData[]>;
    /**
     * Active Directory Join Point ID
     */
    public readonly joinPointId!: pulumi.Output<string>;

    /**
     * Create a Nodes resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NodesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NodesArgs | NodesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NodesState | undefined;
            resourceInputs["additionalDatas"] = state ? state.additionalDatas : undefined;
            resourceInputs["joinPointId"] = state ? state.joinPointId : undefined;
        } else {
            const args = argsOrState as NodesArgs | undefined;
            if ((!args || args.additionalDatas === undefined) && !opts.urn) {
                throw new Error("Missing required property 'additionalDatas'");
            }
            if ((!args || args.joinPointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'joinPointId'");
            }
            resourceInputs["additionalDatas"] = args ? args.additionalDatas : undefined;
            resourceInputs["joinPointId"] = args ? args.joinPointId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Nodes.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Nodes resources.
 */
export interface NodesState {
    additionalDatas?: pulumi.Input<pulumi.Input<inputs.ActiveDirectoryJoinDomainWithAll.NodesAdditionalData>[]>;
    /**
     * Active Directory Join Point ID
     */
    joinPointId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Nodes resource.
 */
export interface NodesArgs {
    additionalDatas: pulumi.Input<pulumi.Input<inputs.ActiveDirectoryJoinDomainWithAll.NodesAdditionalData>[]>;
    /**
     * Active Directory Join Point ID
     */
    joinPointId: pulumi.Input<string>;
}
