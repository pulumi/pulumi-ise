// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource can manage an authorization profiles policy element.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ise from "@pulumi/ise";
 *
 * const example = new ise.networkaccess.AuthorizationProfile("example", {
 *     name: "AuthzProfile1",
 *     description: "My Authorization Profile",
 *     vlanNameId: "VLAN10",
 *     vlanTagId: 0,
 *     webRedirectionType: "CentralizedWebAuth",
 *     webRedirectionAcl: "TEST_ACL",
 *     webRedirectionPortalName: "Sponsored Guest Portal (default)",
 *     webRedirectionStaticIpHostNameFqdn: "1.2.3.4",
 *     webRedirectionDisplayCertificatesRenewalMessages: true,
 *     agentlessPosture: false,
 *     accessType: "ACCESS_ACCEPT",
 *     profileName: "Cisco",
 *     airespaceAcl: "ACL1",
 *     acl: "ACL1",
 *     autoSmartPort: "PROFILE1",
 *     interfaceTemplate: "TEMP1",
 *     ipv6AclFilter: "ACL1",
 *     avcProfile: "PROF1",
 *     asaVpn: "1",
 *     uniqueIdentifier: "ID1234",
 *     trackMovement: false,
 *     serviceTemplate: false,
 *     easywiredSessionCandidate: false,
 *     voiceDomainPermission: false,
 *     neat: false,
 *     webAuth: false,
 *     macSecPolicy: "MUST_SECURE",
 *     reauthenticationConnectivity: "DEFAULT",
 *     reauthenticationTimer: 1,
 *     advancedAttributes: [{
 *         attribute_left_dictionary_name: "Cisco",
 *         attribute_left_name: "cisco-av-pair",
 *         attribute_right_value_type: "AttributeValue",
 *         attribute_right_value: "set_nadprofile_vlan=true,vlan=TEST,tag=1",
 *     }],
 *     airespaceIpv6Acl: "ACL1",
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import ise:networkaccess/authorizationProfile:AuthorizationProfile example "76d24097-41c4-4558-a4d0-a8c07ac08470"
 * ```
 */
export class AuthorizationProfile extends pulumi.CustomResource {
    /**
     * Get an existing AuthorizationProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthorizationProfileState, opts?: pulumi.CustomResourceOptions): AuthorizationProfile {
        return new AuthorizationProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ise:networkaccess/authorizationProfile:AuthorizationProfile';

    /**
     * Returns true if the given object is an instance of AuthorizationProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthorizationProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthorizationProfile.__pulumiType;
    }

    /**
     * Access type
     *   - Choices: `ACCESS_ACCEPT`, `ACCESS_REJECT`
     *   - Default value: `ACCESS_ACCEPT`
     */
    declare public readonly accessType: pulumi.Output<string>;
    /**
     * ACL
     */
    declare public readonly acl: pulumi.Output<string | undefined>;
    /**
     * List of advanced attributes
     */
    declare public readonly advancedAttributes: pulumi.Output<outputs.networkaccess.AuthorizationProfileAdvancedAttribute[] | undefined>;
    /**
     * Agentless Posture.
     */
    declare public readonly agentlessPosture: pulumi.Output<boolean | undefined>;
    /**
     * Airespace ACL
     */
    declare public readonly airespaceAcl: pulumi.Output<string | undefined>;
    /**
     * Airespace IPv6 ACL
     */
    declare public readonly airespaceIpv6Acl: pulumi.Output<string | undefined>;
    /**
     * ASA VPN
     */
    declare public readonly asaVpn: pulumi.Output<string | undefined>;
    /**
     * Auto smart port
     */
    declare public readonly autoSmartPort: pulumi.Output<string | undefined>;
    /**
     * AVC profile
     */
    declare public readonly avcProfile: pulumi.Output<string | undefined>;
    /**
     * DACL name
     */
    declare public readonly daclName: pulumi.Output<string | undefined>;
    /**
     * Description
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Easy wired session candidate
     *   - Default value: `false`
     */
    declare public readonly easywiredSessionCandidate: pulumi.Output<boolean>;
    /**
     * Interface template
     */
    declare public readonly interfaceTemplate: pulumi.Output<string | undefined>;
    /**
     * IPv6 ACL
     */
    declare public readonly ipv6AclFilter: pulumi.Output<string | undefined>;
    /**
     * IPv6 DACL name
     */
    declare public readonly ipv6DaclName: pulumi.Output<string | undefined>;
    /**
     * MacSec policy
     *   - Choices: `MUST_SECURE`, `MUST_NOT_SECURE`, `SHOULD_SECURE`
     */
    declare public readonly macSecPolicy: pulumi.Output<string | undefined>;
    /**
     * The name of the authorization profile
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * NEAT
     *   - Default value: `false`
     */
    declare public readonly neat: pulumi.Output<boolean>;
    /**
     * Value needs to be an existing Network Device Profile
     *   - Default value: `Cisco`
     */
    declare public readonly profileName: pulumi.Output<string>;
    /**
     * Maintain Connectivity During Reauthentication
     *   - Choices: `DEFAULT`, `RADIUS_REQUEST`
     */
    declare public readonly reauthenticationConnectivity: pulumi.Output<string | undefined>;
    /**
     * Reauthentication timer
     *   - Range: `1`-`65535`
     */
    declare public readonly reauthenticationTimer: pulumi.Output<number | undefined>;
    /**
     * Service template
     *   - Default value: `false`
     */
    declare public readonly serviceTemplate: pulumi.Output<boolean>;
    /**
     * Track movement
     *   - Default value: `false`
     */
    declare public readonly trackMovement: pulumi.Output<boolean>;
    /**
     * Unique identifier
     */
    declare public readonly uniqueIdentifier: pulumi.Output<string | undefined>;
    /**
     * Vlan name or ID
     */
    declare public readonly vlanNameId: pulumi.Output<string | undefined>;
    /**
     * Vlan tag ID
     *   - Range: `0`-`31`
     */
    declare public readonly vlanTagId: pulumi.Output<number | undefined>;
    /**
     * Voice domain permission
     *   - Default value: `false`
     */
    declare public readonly voiceDomainPermission: pulumi.Output<boolean>;
    /**
     * Web authentication (local)
     *   - Default value: `false`
     */
    declare public readonly webAuth: pulumi.Output<boolean>;
    /**
     * Web redirection ACL
     */
    declare public readonly webRedirectionAcl: pulumi.Output<string | undefined>;
    /**
     * This attribute is mandatory when `webRedirectionType` value is `CentralizedWebAuth`. For all other `webRedirectionType` values the field must be ignored.
     */
    declare public readonly webRedirectionDisplayCertificatesRenewalMessages: pulumi.Output<boolean | undefined>;
    /**
     * A portal that exist in the DB and fits the `webRedirectionType`
     */
    declare public readonly webRedirectionPortalName: pulumi.Output<string | undefined>;
    /**
     * IP, hostname or FQDN
     */
    declare public readonly webRedirectionStaticIpHostNameFqdn: pulumi.Output<string | undefined>;
    /**
     * This type must fit the `webRedirectionPortalName`
     *   - Choices: `CentralizedWebAuth`, `HotSpot`, `NativeSupplicanProvisioning`, `ClientProvisioning`
     */
    declare public readonly webRedirectionType: pulumi.Output<string | undefined>;

    /**
     * Create a AuthorizationProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AuthorizationProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthorizationProfileArgs | AuthorizationProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthorizationProfileState | undefined;
            resourceInputs["accessType"] = state?.accessType;
            resourceInputs["acl"] = state?.acl;
            resourceInputs["advancedAttributes"] = state?.advancedAttributes;
            resourceInputs["agentlessPosture"] = state?.agentlessPosture;
            resourceInputs["airespaceAcl"] = state?.airespaceAcl;
            resourceInputs["airespaceIpv6Acl"] = state?.airespaceIpv6Acl;
            resourceInputs["asaVpn"] = state?.asaVpn;
            resourceInputs["autoSmartPort"] = state?.autoSmartPort;
            resourceInputs["avcProfile"] = state?.avcProfile;
            resourceInputs["daclName"] = state?.daclName;
            resourceInputs["description"] = state?.description;
            resourceInputs["easywiredSessionCandidate"] = state?.easywiredSessionCandidate;
            resourceInputs["interfaceTemplate"] = state?.interfaceTemplate;
            resourceInputs["ipv6AclFilter"] = state?.ipv6AclFilter;
            resourceInputs["ipv6DaclName"] = state?.ipv6DaclName;
            resourceInputs["macSecPolicy"] = state?.macSecPolicy;
            resourceInputs["name"] = state?.name;
            resourceInputs["neat"] = state?.neat;
            resourceInputs["profileName"] = state?.profileName;
            resourceInputs["reauthenticationConnectivity"] = state?.reauthenticationConnectivity;
            resourceInputs["reauthenticationTimer"] = state?.reauthenticationTimer;
            resourceInputs["serviceTemplate"] = state?.serviceTemplate;
            resourceInputs["trackMovement"] = state?.trackMovement;
            resourceInputs["uniqueIdentifier"] = state?.uniqueIdentifier;
            resourceInputs["vlanNameId"] = state?.vlanNameId;
            resourceInputs["vlanTagId"] = state?.vlanTagId;
            resourceInputs["voiceDomainPermission"] = state?.voiceDomainPermission;
            resourceInputs["webAuth"] = state?.webAuth;
            resourceInputs["webRedirectionAcl"] = state?.webRedirectionAcl;
            resourceInputs["webRedirectionDisplayCertificatesRenewalMessages"] = state?.webRedirectionDisplayCertificatesRenewalMessages;
            resourceInputs["webRedirectionPortalName"] = state?.webRedirectionPortalName;
            resourceInputs["webRedirectionStaticIpHostNameFqdn"] = state?.webRedirectionStaticIpHostNameFqdn;
            resourceInputs["webRedirectionType"] = state?.webRedirectionType;
        } else {
            const args = argsOrState as AuthorizationProfileArgs | undefined;
            resourceInputs["accessType"] = args?.accessType;
            resourceInputs["acl"] = args?.acl;
            resourceInputs["advancedAttributes"] = args?.advancedAttributes;
            resourceInputs["agentlessPosture"] = args?.agentlessPosture;
            resourceInputs["airespaceAcl"] = args?.airespaceAcl;
            resourceInputs["airespaceIpv6Acl"] = args?.airespaceIpv6Acl;
            resourceInputs["asaVpn"] = args?.asaVpn;
            resourceInputs["autoSmartPort"] = args?.autoSmartPort;
            resourceInputs["avcProfile"] = args?.avcProfile;
            resourceInputs["daclName"] = args?.daclName;
            resourceInputs["description"] = args?.description;
            resourceInputs["easywiredSessionCandidate"] = args?.easywiredSessionCandidate;
            resourceInputs["interfaceTemplate"] = args?.interfaceTemplate;
            resourceInputs["ipv6AclFilter"] = args?.ipv6AclFilter;
            resourceInputs["ipv6DaclName"] = args?.ipv6DaclName;
            resourceInputs["macSecPolicy"] = args?.macSecPolicy;
            resourceInputs["name"] = args?.name;
            resourceInputs["neat"] = args?.neat;
            resourceInputs["profileName"] = args?.profileName;
            resourceInputs["reauthenticationConnectivity"] = args?.reauthenticationConnectivity;
            resourceInputs["reauthenticationTimer"] = args?.reauthenticationTimer;
            resourceInputs["serviceTemplate"] = args?.serviceTemplate;
            resourceInputs["trackMovement"] = args?.trackMovement;
            resourceInputs["uniqueIdentifier"] = args?.uniqueIdentifier;
            resourceInputs["vlanNameId"] = args?.vlanNameId;
            resourceInputs["vlanTagId"] = args?.vlanTagId;
            resourceInputs["voiceDomainPermission"] = args?.voiceDomainPermission;
            resourceInputs["webAuth"] = args?.webAuth;
            resourceInputs["webRedirectionAcl"] = args?.webRedirectionAcl;
            resourceInputs["webRedirectionDisplayCertificatesRenewalMessages"] = args?.webRedirectionDisplayCertificatesRenewalMessages;
            resourceInputs["webRedirectionPortalName"] = args?.webRedirectionPortalName;
            resourceInputs["webRedirectionStaticIpHostNameFqdn"] = args?.webRedirectionStaticIpHostNameFqdn;
            resourceInputs["webRedirectionType"] = args?.webRedirectionType;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthorizationProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthorizationProfile resources.
 */
export interface AuthorizationProfileState {
    /**
     * Access type
     *   - Choices: `ACCESS_ACCEPT`, `ACCESS_REJECT`
     *   - Default value: `ACCESS_ACCEPT`
     */
    accessType?: pulumi.Input<string>;
    /**
     * ACL
     */
    acl?: pulumi.Input<string>;
    /**
     * List of advanced attributes
     */
    advancedAttributes?: pulumi.Input<pulumi.Input<inputs.networkaccess.AuthorizationProfileAdvancedAttribute>[]>;
    /**
     * Agentless Posture.
     */
    agentlessPosture?: pulumi.Input<boolean>;
    /**
     * Airespace ACL
     */
    airespaceAcl?: pulumi.Input<string>;
    /**
     * Airespace IPv6 ACL
     */
    airespaceIpv6Acl?: pulumi.Input<string>;
    /**
     * ASA VPN
     */
    asaVpn?: pulumi.Input<string>;
    /**
     * Auto smart port
     */
    autoSmartPort?: pulumi.Input<string>;
    /**
     * AVC profile
     */
    avcProfile?: pulumi.Input<string>;
    /**
     * DACL name
     */
    daclName?: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Easy wired session candidate
     *   - Default value: `false`
     */
    easywiredSessionCandidate?: pulumi.Input<boolean>;
    /**
     * Interface template
     */
    interfaceTemplate?: pulumi.Input<string>;
    /**
     * IPv6 ACL
     */
    ipv6AclFilter?: pulumi.Input<string>;
    /**
     * IPv6 DACL name
     */
    ipv6DaclName?: pulumi.Input<string>;
    /**
     * MacSec policy
     *   - Choices: `MUST_SECURE`, `MUST_NOT_SECURE`, `SHOULD_SECURE`
     */
    macSecPolicy?: pulumi.Input<string>;
    /**
     * The name of the authorization profile
     */
    name?: pulumi.Input<string>;
    /**
     * NEAT
     *   - Default value: `false`
     */
    neat?: pulumi.Input<boolean>;
    /**
     * Value needs to be an existing Network Device Profile
     *   - Default value: `Cisco`
     */
    profileName?: pulumi.Input<string>;
    /**
     * Maintain Connectivity During Reauthentication
     *   - Choices: `DEFAULT`, `RADIUS_REQUEST`
     */
    reauthenticationConnectivity?: pulumi.Input<string>;
    /**
     * Reauthentication timer
     *   - Range: `1`-`65535`
     */
    reauthenticationTimer?: pulumi.Input<number>;
    /**
     * Service template
     *   - Default value: `false`
     */
    serviceTemplate?: pulumi.Input<boolean>;
    /**
     * Track movement
     *   - Default value: `false`
     */
    trackMovement?: pulumi.Input<boolean>;
    /**
     * Unique identifier
     */
    uniqueIdentifier?: pulumi.Input<string>;
    /**
     * Vlan name or ID
     */
    vlanNameId?: pulumi.Input<string>;
    /**
     * Vlan tag ID
     *   - Range: `0`-`31`
     */
    vlanTagId?: pulumi.Input<number>;
    /**
     * Voice domain permission
     *   - Default value: `false`
     */
    voiceDomainPermission?: pulumi.Input<boolean>;
    /**
     * Web authentication (local)
     *   - Default value: `false`
     */
    webAuth?: pulumi.Input<boolean>;
    /**
     * Web redirection ACL
     */
    webRedirectionAcl?: pulumi.Input<string>;
    /**
     * This attribute is mandatory when `webRedirectionType` value is `CentralizedWebAuth`. For all other `webRedirectionType` values the field must be ignored.
     */
    webRedirectionDisplayCertificatesRenewalMessages?: pulumi.Input<boolean>;
    /**
     * A portal that exist in the DB and fits the `webRedirectionType`
     */
    webRedirectionPortalName?: pulumi.Input<string>;
    /**
     * IP, hostname or FQDN
     */
    webRedirectionStaticIpHostNameFqdn?: pulumi.Input<string>;
    /**
     * This type must fit the `webRedirectionPortalName`
     *   - Choices: `CentralizedWebAuth`, `HotSpot`, `NativeSupplicanProvisioning`, `ClientProvisioning`
     */
    webRedirectionType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthorizationProfile resource.
 */
export interface AuthorizationProfileArgs {
    /**
     * Access type
     *   - Choices: `ACCESS_ACCEPT`, `ACCESS_REJECT`
     *   - Default value: `ACCESS_ACCEPT`
     */
    accessType?: pulumi.Input<string>;
    /**
     * ACL
     */
    acl?: pulumi.Input<string>;
    /**
     * List of advanced attributes
     */
    advancedAttributes?: pulumi.Input<pulumi.Input<inputs.networkaccess.AuthorizationProfileAdvancedAttribute>[]>;
    /**
     * Agentless Posture.
     */
    agentlessPosture?: pulumi.Input<boolean>;
    /**
     * Airespace ACL
     */
    airespaceAcl?: pulumi.Input<string>;
    /**
     * Airespace IPv6 ACL
     */
    airespaceIpv6Acl?: pulumi.Input<string>;
    /**
     * ASA VPN
     */
    asaVpn?: pulumi.Input<string>;
    /**
     * Auto smart port
     */
    autoSmartPort?: pulumi.Input<string>;
    /**
     * AVC profile
     */
    avcProfile?: pulumi.Input<string>;
    /**
     * DACL name
     */
    daclName?: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Easy wired session candidate
     *   - Default value: `false`
     */
    easywiredSessionCandidate?: pulumi.Input<boolean>;
    /**
     * Interface template
     */
    interfaceTemplate?: pulumi.Input<string>;
    /**
     * IPv6 ACL
     */
    ipv6AclFilter?: pulumi.Input<string>;
    /**
     * IPv6 DACL name
     */
    ipv6DaclName?: pulumi.Input<string>;
    /**
     * MacSec policy
     *   - Choices: `MUST_SECURE`, `MUST_NOT_SECURE`, `SHOULD_SECURE`
     */
    macSecPolicy?: pulumi.Input<string>;
    /**
     * The name of the authorization profile
     */
    name?: pulumi.Input<string>;
    /**
     * NEAT
     *   - Default value: `false`
     */
    neat?: pulumi.Input<boolean>;
    /**
     * Value needs to be an existing Network Device Profile
     *   - Default value: `Cisco`
     */
    profileName?: pulumi.Input<string>;
    /**
     * Maintain Connectivity During Reauthentication
     *   - Choices: `DEFAULT`, `RADIUS_REQUEST`
     */
    reauthenticationConnectivity?: pulumi.Input<string>;
    /**
     * Reauthentication timer
     *   - Range: `1`-`65535`
     */
    reauthenticationTimer?: pulumi.Input<number>;
    /**
     * Service template
     *   - Default value: `false`
     */
    serviceTemplate?: pulumi.Input<boolean>;
    /**
     * Track movement
     *   - Default value: `false`
     */
    trackMovement?: pulumi.Input<boolean>;
    /**
     * Unique identifier
     */
    uniqueIdentifier?: pulumi.Input<string>;
    /**
     * Vlan name or ID
     */
    vlanNameId?: pulumi.Input<string>;
    /**
     * Vlan tag ID
     *   - Range: `0`-`31`
     */
    vlanTagId?: pulumi.Input<number>;
    /**
     * Voice domain permission
     *   - Default value: `false`
     */
    voiceDomainPermission?: pulumi.Input<boolean>;
    /**
     * Web authentication (local)
     *   - Default value: `false`
     */
    webAuth?: pulumi.Input<boolean>;
    /**
     * Web redirection ACL
     */
    webRedirectionAcl?: pulumi.Input<string>;
    /**
     * This attribute is mandatory when `webRedirectionType` value is `CentralizedWebAuth`. For all other `webRedirectionType` values the field must be ignored.
     */
    webRedirectionDisplayCertificatesRenewalMessages?: pulumi.Input<boolean>;
    /**
     * A portal that exist in the DB and fits the `webRedirectionType`
     */
    webRedirectionPortalName?: pulumi.Input<string>;
    /**
     * IP, hostname or FQDN
     */
    webRedirectionStaticIpHostNameFqdn?: pulumi.Input<string>;
    /**
     * This type must fit the `webRedirectionPortalName`
     *   - Choices: `CentralizedWebAuth`, `HotSpot`, `NativeSupplicanProvisioning`, `ClientProvisioning`
     */
    webRedirectionType?: pulumi.Input<string>;
}
