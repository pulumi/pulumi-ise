// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource is used to bulk update rank field in network access authentication rule. It serves as a workaround for the ISE API/Backend limitation which restricts rank assignments to a strictly incremental sequence. By utilizing this resource and networkAccessAuthenticationRule resource, you can bypass the APIs limitation. Creation of this resource is performing PUT operation (Update) and it only tracks rank field. When this resource is destroyed, no action is performed on ISE and resource is just removed from state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ise from "@pulumi/ise";
 *
 * const example = new ise.networkaccess.AuthenticationRuleUpdateRanks("example", {
 *     policySetId: "d82952cb-b901-4b09-b363-5ebf39bdbaf9",
 *     rules: [{
 *         id: "3741aca3-db08-4899-af73-2e3f65ec31e1",
 *         rank: 0,
 *     }],
 * });
 * ```
 */
export class AuthenticationRuleUpdateRanks extends pulumi.CustomResource {
    /**
     * Get an existing AuthenticationRuleUpdateRanks resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthenticationRuleUpdateRanksState, opts?: pulumi.CustomResourceOptions): AuthenticationRuleUpdateRanks {
        return new AuthenticationRuleUpdateRanks(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ise:networkaccess/authenticationRuleUpdateRanks:AuthenticationRuleUpdateRanks';

    /**
     * Returns true if the given object is an instance of AuthenticationRuleUpdateRanks.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthenticationRuleUpdateRanks {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthenticationRuleUpdateRanks.__pulumiType;
    }

    /**
     * Policy set ID
     */
    public readonly policySetId!: pulumi.Output<string>;
    public readonly rules!: pulumi.Output<outputs.networkaccess.AuthenticationRuleUpdateRanksRule[] | undefined>;

    /**
     * Create a AuthenticationRuleUpdateRanks resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthenticationRuleUpdateRanksArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthenticationRuleUpdateRanksArgs | AuthenticationRuleUpdateRanksState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthenticationRuleUpdateRanksState | undefined;
            resourceInputs["policySetId"] = state ? state.policySetId : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
        } else {
            const args = argsOrState as AuthenticationRuleUpdateRanksArgs | undefined;
            if ((!args || args.policySetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policySetId'");
            }
            resourceInputs["policySetId"] = args ? args.policySetId : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthenticationRuleUpdateRanks.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthenticationRuleUpdateRanks resources.
 */
export interface AuthenticationRuleUpdateRanksState {
    /**
     * Policy set ID
     */
    policySetId?: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.networkaccess.AuthenticationRuleUpdateRanksRule>[]>;
}

/**
 * The set of arguments for constructing a AuthenticationRuleUpdateRanks resource.
 */
export interface AuthenticationRuleUpdateRanksArgs {
    /**
     * Policy set ID
     */
    policySetId: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.networkaccess.AuthenticationRuleUpdateRanksRule>[]>;
}
