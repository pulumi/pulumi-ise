// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource is used to update rank field in network access authorization exception rule. It serves as a workaround for the ISE API/Backend limitation which restricts rank assignments to a strictly incremental sequence. By utilizing this resource and networkAccessAuthorizationExceptionRule resource, you can bypass the APIs limitation. Creation of this resource is performing PUT operation (Update) and it only tracks rank field. When this resource is destroyed, no action is performed on ISE and resource is just removed from state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ise from "@pulumi/ise";
 *
 * const example = new ise.networkaccess.AuthorizationExceptionRuleUpdateRank("example", {
 *     ruleId: "9b3680da-0165-44f6-9cff-88e778d98020",
 *     policySetId: "d82952cb-b901-4b09-b363-5ebf39bdbaf9",
 *     rank: 0,
 * });
 * ```
 */
export class AuthorizationExceptionRuleUpdateRank extends pulumi.CustomResource {
    /**
     * Get an existing AuthorizationExceptionRuleUpdateRank resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthorizationExceptionRuleUpdateRankState, opts?: pulumi.CustomResourceOptions): AuthorizationExceptionRuleUpdateRank {
        return new AuthorizationExceptionRuleUpdateRank(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ise:networkaccess/authorizationExceptionRuleUpdateRank:AuthorizationExceptionRuleUpdateRank';

    /**
     * Returns true if the given object is an instance of AuthorizationExceptionRuleUpdateRank.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthorizationExceptionRuleUpdateRank {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthorizationExceptionRuleUpdateRank.__pulumiType;
    }

    /**
     * Policy set ID
     */
    declare public readonly policySetId: pulumi.Output<string>;
    /**
     * The rank (priority) in relation to other rules. Lower rank is higher priority.
     */
    declare public readonly rank: pulumi.Output<number>;
    /**
     * Authorization exception rule ID
     */
    declare public readonly ruleId: pulumi.Output<string>;

    /**
     * Create a AuthorizationExceptionRuleUpdateRank resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthorizationExceptionRuleUpdateRankArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthorizationExceptionRuleUpdateRankArgs | AuthorizationExceptionRuleUpdateRankState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthorizationExceptionRuleUpdateRankState | undefined;
            resourceInputs["policySetId"] = state?.policySetId;
            resourceInputs["rank"] = state?.rank;
            resourceInputs["ruleId"] = state?.ruleId;
        } else {
            const args = argsOrState as AuthorizationExceptionRuleUpdateRankArgs | undefined;
            if (args?.policySetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'policySetId'");
            }
            if (args?.rank === undefined && !opts.urn) {
                throw new Error("Missing required property 'rank'");
            }
            if (args?.ruleId === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleId'");
            }
            resourceInputs["policySetId"] = args?.policySetId;
            resourceInputs["rank"] = args?.rank;
            resourceInputs["ruleId"] = args?.ruleId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthorizationExceptionRuleUpdateRank.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthorizationExceptionRuleUpdateRank resources.
 */
export interface AuthorizationExceptionRuleUpdateRankState {
    /**
     * Policy set ID
     */
    policySetId?: pulumi.Input<string>;
    /**
     * The rank (priority) in relation to other rules. Lower rank is higher priority.
     */
    rank?: pulumi.Input<number>;
    /**
     * Authorization exception rule ID
     */
    ruleId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthorizationExceptionRuleUpdateRank resource.
 */
export interface AuthorizationExceptionRuleUpdateRankArgs {
    /**
     * Policy set ID
     */
    policySetId: pulumi.Input<string>;
    /**
     * The rank (priority) in relation to other rules. Lower rank is higher priority.
     */
    rank: pulumi.Input<number>;
    /**
     * Authorization exception rule ID
     */
    ruleId: pulumi.Input<string>;
}
