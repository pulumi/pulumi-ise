// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetProtocolsArgs, GetProtocolsResult, GetProtocolsOutputArgs } from "./getProtocols";
export const getProtocols: typeof import("./getProtocols").getProtocols = null as any;
export const getProtocolsOutput: typeof import("./getProtocols").getProtocolsOutput = null as any;
utilities.lazyLoad(exports, ["getProtocols","getProtocolsOutput"], () => require("./getProtocols"));

export { ProtocolsArgs, ProtocolsState } from "./protocols";
export type Protocols = import("./protocols").Protocols;
export const Protocols: typeof import("./protocols").Protocols = null as any;
utilities.lazyLoad(exports, ["Protocols"], () => require("./protocols"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ise:Allowed/protocols:Protocols":
                return new Protocols(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ise", "Allowed/protocols", _module)
