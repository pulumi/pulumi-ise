// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as activedirectory from "./activedirectory";
import * as config from "./config";
import * as deviceadmin from "./deviceadmin";
import * as identity from "./identity";
import * as network from "./network";
import * as system from "./system";
import * as tacacs from "./tacacs";
import * as trustsec from "./trustsec";
import * as types from "./types";

export {
    activedirectory,
    config,
    deviceadmin,
    identity,
    network,
    system,
    tacacs,
    trustsec,
    types,
};
pulumi.runtime.registerResourcePackage("ise", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:ise") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
