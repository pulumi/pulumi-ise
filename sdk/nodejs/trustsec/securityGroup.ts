// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource can manage a TrustSec Security Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ise from "@pulumi/ise";
 *
 * const example = new ise.trustsec.SecurityGroup("example", {
 *     name: "SGT1234",
 *     description: "My SGT",
 *     value: 1234,
 *     propogateToApic: true,
 *     isReadOnly: false,
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import ise:trustsec/securityGroup:SecurityGroup example "76d24097-41c4-4558-a4d0-a8c07ac08470"
 * ```
 */
export class SecurityGroup extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityGroupState, opts?: pulumi.CustomResourceOptions): SecurityGroup {
        return new SecurityGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ise:trustsec/securityGroup:SecurityGroup';

    /**
     * Returns true if the given object is an instance of SecurityGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityGroup.__pulumiType;
    }

    /**
     * Description
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Read-only
     */
    declare public readonly isReadOnly: pulumi.Output<boolean | undefined>;
    /**
     * The name of the security group
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Propagate to APIC (ACI)
     */
    declare public readonly propogateToApic: pulumi.Output<boolean | undefined>;
    /**
     * `-1` to auto-generate
     *   - Range: `-1`-`65519`
     */
    declare public readonly value: pulumi.Output<number>;

    /**
     * Create a SecurityGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityGroupArgs | SecurityGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityGroupState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["isReadOnly"] = state?.isReadOnly;
            resourceInputs["name"] = state?.name;
            resourceInputs["propogateToApic"] = state?.propogateToApic;
            resourceInputs["value"] = state?.value;
        } else {
            const args = argsOrState as SecurityGroupArgs | undefined;
            if (args?.value === undefined && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["isReadOnly"] = args?.isReadOnly;
            resourceInputs["name"] = args?.name;
            resourceInputs["propogateToApic"] = args?.propogateToApic;
            resourceInputs["value"] = args?.value;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurityGroup resources.
 */
export interface SecurityGroupState {
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Read-only
     */
    isReadOnly?: pulumi.Input<boolean>;
    /**
     * The name of the security group
     */
    name?: pulumi.Input<string>;
    /**
     * Propagate to APIC (ACI)
     */
    propogateToApic?: pulumi.Input<boolean>;
    /**
     * `-1` to auto-generate
     *   - Range: `-1`-`65519`
     */
    value?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SecurityGroup resource.
 */
export interface SecurityGroupArgs {
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Read-only
     */
    isReadOnly?: pulumi.Input<boolean>;
    /**
     * The name of the security group
     */
    name?: pulumi.Input<string>;
    /**
     * Propagate to APIC (ACI)
     */
    propogateToApic?: pulumi.Input<boolean>;
    /**
     * `-1` to auto-generate
     *   - Range: `-1`-`65519`
     */
    value: pulumi.Input<number>;
}
