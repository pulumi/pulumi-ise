{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "config/index.ts",
        "config/vars.ts",
        "deviceadmin/allowedProtocolsTacacs.ts",
        "deviceadmin/authenticationRule.ts",
        "deviceadmin/authenticationRuleUpdateRank.ts",
        "deviceadmin/authenticationRuleUpdateRanks.ts",
        "deviceadmin/authorizationExceptionRule.ts",
        "deviceadmin/authorizationExceptionRuleUpdateRank.ts",
        "deviceadmin/authorizationExceptionRuleUpdateRanks.ts",
        "deviceadmin/authorizationGlobalExceptionRule.ts",
        "deviceadmin/authorizationGlobalExceptionRuleUpdateRank.ts",
        "deviceadmin/authorizationGlobalExceptionRuleUpdateRanks.ts",
        "deviceadmin/authorizationRule.ts",
        "deviceadmin/authorizationRuleUpdateRank.ts",
        "deviceadmin/authorizationRuleUpdateRanks.ts",
        "deviceadmin/condition.ts",
        "deviceadmin/getAllowedProtocolsTacacs.ts",
        "deviceadmin/getAuthenticationRule.ts",
        "deviceadmin/getAuthorizationExceptionRule.ts",
        "deviceadmin/getAuthorizationGlobalExceptionRule.ts",
        "deviceadmin/getAuthorizationRule.ts",
        "deviceadmin/getCondition.ts",
        "deviceadmin/getPolicySet.ts",
        "deviceadmin/getTacacsCommandSet.ts",
        "deviceadmin/getTacacsProfile.ts",
        "deviceadmin/getTimeAndDateCondition.ts",
        "deviceadmin/index.ts",
        "deviceadmin/policySet.ts",
        "deviceadmin/policySetUpdateRank.ts",
        "deviceadmin/policySetUpdateRanks.ts",
        "deviceadmin/tacacsCommandSet.ts",
        "deviceadmin/tacacsProfile.ts",
        "deviceadmin/timeAndDateCondition.ts",
        "identitymanagement/activeDirectoryAddGroups.ts",
        "identitymanagement/activeDirectoryJoinDomainWithAllNodes.ts",
        "identitymanagement/activeDirectoryJoinPoint.ts",
        "identitymanagement/certificateAuthenticationProfile.ts",
        "identitymanagement/endpoint.ts",
        "identitymanagement/endpointIdentityGroup.ts",
        "identitymanagement/getActiveDirectoryGroupsByDomain.ts",
        "identitymanagement/getActiveDirectoryJoinPoint.ts",
        "identitymanagement/getCertificateAuthenticationProfile.ts",
        "identitymanagement/getEndpoint.ts",
        "identitymanagement/getEndpointIdentityGroup.ts",
        "identitymanagement/getIdentitySourceSequence.ts",
        "identitymanagement/getInternalUser.ts",
        "identitymanagement/getUserIdentityGroup.ts",
        "identitymanagement/identitySourceSequence.ts",
        "identitymanagement/index.ts",
        "identitymanagement/internalUser.ts",
        "identitymanagement/userIdentityGroup.ts",
        "index.ts",
        "network/device.ts",
        "network/deviceGroup.ts",
        "network/getDevice.ts",
        "network/getDeviceGroup.ts",
        "network/index.ts",
        "networkaccess/allowedProtocols.ts",
        "networkaccess/authenticationRule.ts",
        "networkaccess/authenticationRuleUpdateRank.ts",
        "networkaccess/authenticationRuleUpdateRanks.ts",
        "networkaccess/authorizationExceptionRule.ts",
        "networkaccess/authorizationExceptionRuleUpdateRank.ts",
        "networkaccess/authorizationExceptionRuleUpdateRanks.ts",
        "networkaccess/authorizationGlobalExceptionRule.ts",
        "networkaccess/authorizationGlobalExceptionRuleUpdateRank.ts",
        "networkaccess/authorizationGlobalExceptionRuleUpdateRanks.ts",
        "networkaccess/authorizationProfile.ts",
        "networkaccess/authorizationRule.ts",
        "networkaccess/authorizationRuleUpdateRank.ts",
        "networkaccess/authorizationRuleUpdateRanks.ts",
        "networkaccess/condition.ts",
        "networkaccess/dictionary.ts",
        "networkaccess/downloadableAcl.ts",
        "networkaccess/getAllowedProtocols.ts",
        "networkaccess/getAuthenticationRule.ts",
        "networkaccess/getAuthorizationExceptionRule.ts",
        "networkaccess/getAuthorizationGlobalExceptionRule.ts",
        "networkaccess/getAuthorizationProfile.ts",
        "networkaccess/getAuthorizationRule.ts",
        "networkaccess/getCondition.ts",
        "networkaccess/getDictionary.ts",
        "networkaccess/getDownloadableAcl.ts",
        "networkaccess/getPolicySet.ts",
        "networkaccess/getTimeAndDateCondition.ts",
        "networkaccess/index.ts",
        "networkaccess/policySet.ts",
        "networkaccess/policySetUpdateRank.ts",
        "networkaccess/policySetUpdateRanks.ts",
        "networkaccess/timeAndDateCondition.ts",
        "provider.ts",
        "system/getLicenseTierState.ts",
        "system/getRepository.ts",
        "system/index.ts",
        "system/licenseTierState.ts",
        "system/repository.ts",
        "trustsec/egressMatrixCell.ts",
        "trustsec/egressMatrixCellDefault.ts",
        "trustsec/getEgressMatrixCell.ts",
        "trustsec/getEgressMatrixCellDefault.ts",
        "trustsec/getIpToSgtMapping.ts",
        "trustsec/getIpToSgtMappingGroup.ts",
        "trustsec/getSecurityGroup.ts",
        "trustsec/getSecurityGroupAcl.ts",
        "trustsec/getSxpDomainFilter.ts",
        "trustsec/index.ts",
        "trustsec/ipToSgtMapping.ts",
        "trustsec/ipToSgtMappingGroup.ts",
        "trustsec/securityGroup.ts",
        "trustsec/securityGroupAcl.ts",
        "trustsec/sxpDomainFilter.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}
