{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "activedirectoryadd/groups.ts",
        "activedirectoryadd/index.ts",
        "activedirectorygroupsby/getDomain.ts",
        "activedirectorygroupsby/index.ts",
        "activedirectoryjoin/getPoint.ts",
        "activedirectoryjoin/index.ts",
        "activedirectoryjoin/point.ts",
        "activedirectoryjoindomainwithall/index.ts",
        "activedirectoryjoindomainwithall/nodes.ts",
        "allowed/getProtocols.ts",
        "allowed/index.ts",
        "allowed/protocols.ts",
        "allowedprotocols/getTacacs.ts",
        "allowedprotocols/index.ts",
        "allowedprotocols/tacacs.ts",
        "authorization/getProfile.ts",
        "authorization/index.ts",
        "authorization/profile.ts",
        "certificateauthentication/getProfile.ts",
        "certificateauthentication/index.ts",
        "certificateauthentication/profile.ts",
        "config/index.ts",
        "config/vars.ts",
        "deviceadmin/condition.ts",
        "deviceadmin/getCondition.ts",
        "deviceadmin/index.ts",
        "deviceadminauthentication/getRule.ts",
        "deviceadminauthentication/index.ts",
        "deviceadminauthentication/rule.ts",
        "deviceadminauthorization/getRule.ts",
        "deviceadminauthorization/index.ts",
        "deviceadminauthorization/rule.ts",
        "deviceadminauthorizationexception/getRule.ts",
        "deviceadminauthorizationexception/index.ts",
        "deviceadminauthorizationexception/rule.ts",
        "deviceadminauthorizationglobalexception/getRule.ts",
        "deviceadminauthorizationglobalexception/index.ts",
        "deviceadminauthorizationglobalexception/rule.ts",
        "deviceadminpolicy/getSet.ts",
        "deviceadminpolicy/index.ts",
        "deviceadminpolicy/set.ts",
        "deviceadmintimeanddate/condition.ts",
        "deviceadmintimeanddate/getCondition.ts",
        "deviceadmintimeanddate/index.ts",
        "downloadable/acl.ts",
        "downloadable/getAcl.ts",
        "downloadable/index.ts",
        "endpoint.ts",
        "endpointidentity/getGroup.ts",
        "endpointidentity/group.ts",
        "endpointidentity/index.ts",
        "getEndpoint.ts",
        "getRepository.ts",
        "identitysource/getSequence.ts",
        "identitysource/index.ts",
        "identitysource/sequence.ts",
        "index.ts",
        "internal/getUser.ts",
        "internal/index.ts",
        "internal/user.ts",
        "licensetier/getState.ts",
        "licensetier/index.ts",
        "licensetier/state.ts",
        "network/device.ts",
        "network/getDevice.ts",
        "network/index.ts",
        "networkaccess/condition.ts",
        "networkaccess/dictionary.ts",
        "networkaccess/getCondition.ts",
        "networkaccess/getDictionary.ts",
        "networkaccess/index.ts",
        "networkaccessauthentication/getRule.ts",
        "networkaccessauthentication/index.ts",
        "networkaccessauthentication/rule.ts",
        "networkaccessauthorization/getRule.ts",
        "networkaccessauthorization/index.ts",
        "networkaccessauthorization/rule.ts",
        "networkaccessauthorizationexception/getRule.ts",
        "networkaccessauthorizationexception/index.ts",
        "networkaccessauthorizationexception/rule.ts",
        "networkaccessauthorizationglobalexception/getRule.ts",
        "networkaccessauthorizationglobalexception/index.ts",
        "networkaccessauthorizationglobalexception/rule.ts",
        "networkaccesspolicy/getSet.ts",
        "networkaccesspolicy/index.ts",
        "networkaccesspolicy/set.ts",
        "networkaccesstimeanddate/condition.ts",
        "networkaccesstimeanddate/getCondition.ts",
        "networkaccesstimeanddate/index.ts",
        "networkdevice/getGroup.ts",
        "networkdevice/group.ts",
        "networkdevice/index.ts",
        "provider.ts",
        "repository.ts",
        "tacacs/getProfile.ts",
        "tacacs/index.ts",
        "tacacs/profile.ts",
        "tacacscommand/getSet.ts",
        "tacacscommand/index.ts",
        "tacacscommand/set.ts",
        "trustsecegressmatrix/cell.ts",
        "trustsecegressmatrix/getCell.ts",
        "trustsecegressmatrix/index.ts",
        "trustseciptosgt/getMapping.ts",
        "trustseciptosgt/index.ts",
        "trustseciptosgt/mapping.ts",
        "trustseciptosgtmapping/getGroup.ts",
        "trustseciptosgtmapping/group.ts",
        "trustseciptosgtmapping/index.ts",
        "trustsecsecurity/getGroup.ts",
        "trustsecsecurity/group.ts",
        "trustsecsecurity/index.ts",
        "trustsecsecuritygroup/acl.ts",
        "trustsecsecuritygroup/getAcl.ts",
        "trustsecsecuritygroup/index.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "useridentity/getGroup.ts",
        "useridentity/group.ts",
        "useridentity/index.ts",
        "utilities.ts"
    ]
}
