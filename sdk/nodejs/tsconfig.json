{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "activedirectory/addGroups.ts",
        "activedirectory/getGroupsByDomain.ts",
        "activedirectory/getJoinPoint.ts",
        "activedirectory/index.ts",
        "activedirectory/joinDomainWithAllNodes.ts",
        "activedirectory/joinPoint.ts",
        "config/index.ts",
        "config/vars.ts",
        "deviceadmin/authenticationRule.ts",
        "deviceadmin/authorizationExceptionRule.ts",
        "deviceadmin/authorizationGlobalExceptionRule.ts",
        "deviceadmin/authorizationRule.ts",
        "deviceadmin/condition.ts",
        "deviceadmin/getAuthenticationRule.ts",
        "deviceadmin/getAuthorizationExceptionRule.ts",
        "deviceadmin/getAuthorizationGlobalExceptionRule.ts",
        "deviceadmin/getAuthorizationRule.ts",
        "deviceadmin/getCondition.ts",
        "deviceadmin/getPolicySet.ts",
        "deviceadmin/getTimeAndDateCondition.ts",
        "deviceadmin/index.ts",
        "deviceadmin/policySet.ts",
        "deviceadmin/timeAndDateCondition.ts",
        "identity/certificateAuthenticationProfile.ts",
        "identity/endpoint.ts",
        "identity/endpointIdentityGroup.ts",
        "identity/getCertificateAuthenticationProfile.ts",
        "identity/getEndpoint.ts",
        "identity/getEndpointIdentityGroup.ts",
        "identity/getIdentitySourceSequence.ts",
        "identity/getInternalUser.ts",
        "identity/getUserIdentityGroup.ts",
        "identity/identitySourceSequence.ts",
        "identity/index.ts",
        "identity/internalUser.ts",
        "identity/userIdentityGroup.ts",
        "index.ts",
        "network/accessAuthenticationRule.ts",
        "network/accessAuthorizationExceptionRule.ts",
        "network/accessAuthorizationGlobalExceptionRule.ts",
        "network/accessAuthorizationRule.ts",
        "network/accessCondition.ts",
        "network/accessDictionary.ts",
        "network/accessPolicySet.ts",
        "network/accessTimeAndDateCondition.ts",
        "network/allowedProtocols.ts",
        "network/authorizationProfile.ts",
        "network/device.ts",
        "network/deviceGroup.ts",
        "network/downloadableAcl.ts",
        "network/getAccessAuthenticationRule.ts",
        "network/getAccessAuthorizationExceptionRule.ts",
        "network/getAccessAuthorizationGlobalExceptionRule.ts",
        "network/getAccessAuthorizationRule.ts",
        "network/getAccessCondition.ts",
        "network/getAccessDictionary.ts",
        "network/getAccessPolicySet.ts",
        "network/getAccessTimeAndDateCondition.ts",
        "network/getAllowedProtocols.ts",
        "network/getAuthorizationProfile.ts",
        "network/getDevice.ts",
        "network/getDeviceGroup.ts",
        "network/getDownloadableAcl.ts",
        "network/index.ts",
        "provider.ts",
        "system/getLicenseTierState.ts",
        "system/getRepository.ts",
        "system/index.ts",
        "system/licenseTierState.ts",
        "system/repository.ts",
        "tacacs/allowedProtocols.ts",
        "tacacs/commandSet.ts",
        "tacacs/getAllowedProtocols.ts",
        "tacacs/getCommandSet.ts",
        "tacacs/getProfile.ts",
        "tacacs/index.ts",
        "tacacs/profile.ts",
        "trustsec/egressMatrixCell.ts",
        "trustsec/getEgressMatrixCell.ts",
        "trustsec/getIpToSgtMapping.ts",
        "trustsec/getIpToSgtMappingGroup.ts",
        "trustsec/getSecurityGroup.ts",
        "trustsec/getSecurityGroupAcl.ts",
        "trustsec/index.ts",
        "trustsec/ipToSgtMapping.ts",
        "trustsec/ipToSgtMappingGroup.ts",
        "trustsec/securityGroup.ts",
        "trustsec/securityGroupAcl.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}
