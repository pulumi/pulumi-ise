// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource can manage an Active Directory Add Groups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ise from "@pulumi/ise";
 *
 * const example = new ise.identitymanagement.ActiveDirectoryAddGroups("example", {
 *     joinPointId: "73808580-b6e6-11ee-8960-de6d7692bc40",
 *     name: "cisco.local",
 *     description: "My AD join point",
 *     domain: "cisco.local",
 *     adScopesNames: "Default_Scope",
 *     enableDomainAllowedList: true,
 *     groups: [{
 *         name: "cisco.local/operators",
 *         sid: "S-1-5-32-548",
 *         type: "GLOBAL",
 *     }],
 * });
 * ```
 */
export class ActiveDirectoryAddGroups extends pulumi.CustomResource {
    /**
     * Get an existing ActiveDirectoryAddGroups resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ActiveDirectoryAddGroupsState, opts?: pulumi.CustomResourceOptions): ActiveDirectoryAddGroups {
        return new ActiveDirectoryAddGroups(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ise:identitymanagement/activeDirectoryAddGroups:ActiveDirectoryAddGroups';

    /**
     * Returns true if the given object is an instance of ActiveDirectoryAddGroups.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ActiveDirectoryAddGroups {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ActiveDirectoryAddGroups.__pulumiType;
    }

    /**
     * String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
     * value: `Default_Scope`
     */
    public readonly adScopesNames!: pulumi.Output<string>;
    /**
     * Join point Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * AD domain associated with the join point
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * - Default value: `true`
     */
    public readonly enableDomainAllowedList!: pulumi.Output<boolean>;
    /**
     * List of AD Groups
     */
    public readonly groups!: pulumi.Output<outputs.identitymanagement.ActiveDirectoryAddGroupsGroup[] | undefined>;
    /**
     * Active Directory Join Point ID
     */
    public readonly joinPointId!: pulumi.Output<string>;
    /**
     * The name of the active directory join point
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a ActiveDirectoryAddGroups resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ActiveDirectoryAddGroupsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ActiveDirectoryAddGroupsArgs | ActiveDirectoryAddGroupsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ActiveDirectoryAddGroupsState | undefined;
            resourceInputs["adScopesNames"] = state ? state.adScopesNames : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["enableDomainAllowedList"] = state ? state.enableDomainAllowedList : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["joinPointId"] = state ? state.joinPointId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as ActiveDirectoryAddGroupsArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.joinPointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'joinPointId'");
            }
            resourceInputs["adScopesNames"] = args ? args.adScopesNames : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["enableDomainAllowedList"] = args ? args.enableDomainAllowedList : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["joinPointId"] = args ? args.joinPointId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ActiveDirectoryAddGroups.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ActiveDirectoryAddGroups resources.
 */
export interface ActiveDirectoryAddGroupsState {
    /**
     * String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
     * value: `Default_Scope`
     */
    adScopesNames?: pulumi.Input<string>;
    /**
     * Join point Description
     */
    description?: pulumi.Input<string>;
    /**
     * AD domain associated with the join point
     */
    domain?: pulumi.Input<string>;
    /**
     * - Default value: `true`
     */
    enableDomainAllowedList?: pulumi.Input<boolean>;
    /**
     * List of AD Groups
     */
    groups?: pulumi.Input<pulumi.Input<inputs.identitymanagement.ActiveDirectoryAddGroupsGroup>[]>;
    /**
     * Active Directory Join Point ID
     */
    joinPointId?: pulumi.Input<string>;
    /**
     * The name of the active directory join point
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ActiveDirectoryAddGroups resource.
 */
export interface ActiveDirectoryAddGroupsArgs {
    /**
     * String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
     * value: `Default_Scope`
     */
    adScopesNames?: pulumi.Input<string>;
    /**
     * Join point Description
     */
    description?: pulumi.Input<string>;
    /**
     * AD domain associated with the join point
     */
    domain: pulumi.Input<string>;
    /**
     * - Default value: `true`
     */
    enableDomainAllowedList?: pulumi.Input<boolean>;
    /**
     * List of AD Groups
     */
    groups?: pulumi.Input<pulumi.Input<inputs.identitymanagement.ActiveDirectoryAddGroupsGroup>[]>;
    /**
     * Active Directory Join Point ID
     */
    joinPointId: pulumi.Input<string>;
    /**
     * The name of the active directory join point
     */
    name?: pulumi.Input<string>;
}
