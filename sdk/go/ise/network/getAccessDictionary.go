// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Network Access Dictionary.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := network.LookupAccessDictionary(ctx, &network.LookupAccessDictionaryArgs{
//				Id: pulumi.StringRef("Dict1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccessDictionary(ctx *pulumi.Context, args *LookupAccessDictionaryArgs, opts ...pulumi.InvokeOption) (*LookupAccessDictionaryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccessDictionaryResult
	err := ctx.Invoke("ise:network/getAccessDictionary:getAccessDictionary", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccessDictionary.
type LookupAccessDictionaryArgs struct {
	// The id of the object
	Id *string `pulumi:"id"`
	// The dictionary name
	Name *string `pulumi:"name"`
}

// A collection of values returned by getAccessDictionary.
type LookupAccessDictionaryResult struct {
	// The description of the dictionary
	Description string `pulumi:"description"`
	// The dictionary attribute type
	DictionaryAttrType string `pulumi:"dictionaryAttrType"`
	// The id of the object
	Id string `pulumi:"id"`
	// The dictionary name
	Name string `pulumi:"name"`
	// The version of the dictionary
	Version string `pulumi:"version"`
}

func LookupAccessDictionaryOutput(ctx *pulumi.Context, args LookupAccessDictionaryOutputArgs, opts ...pulumi.InvokeOption) LookupAccessDictionaryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccessDictionaryResult, error) {
			args := v.(LookupAccessDictionaryArgs)
			r, err := LookupAccessDictionary(ctx, &args, opts...)
			var s LookupAccessDictionaryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAccessDictionaryResultOutput)
}

// A collection of arguments for invoking getAccessDictionary.
type LookupAccessDictionaryOutputArgs struct {
	// The id of the object
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The dictionary name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupAccessDictionaryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessDictionaryArgs)(nil)).Elem()
}

// A collection of values returned by getAccessDictionary.
type LookupAccessDictionaryResultOutput struct{ *pulumi.OutputState }

func (LookupAccessDictionaryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessDictionaryResult)(nil)).Elem()
}

func (o LookupAccessDictionaryResultOutput) ToLookupAccessDictionaryResultOutput() LookupAccessDictionaryResultOutput {
	return o
}

func (o LookupAccessDictionaryResultOutput) ToLookupAccessDictionaryResultOutputWithContext(ctx context.Context) LookupAccessDictionaryResultOutput {
	return o
}

// The description of the dictionary
func (o LookupAccessDictionaryResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessDictionaryResult) string { return v.Description }).(pulumi.StringOutput)
}

// The dictionary attribute type
func (o LookupAccessDictionaryResultOutput) DictionaryAttrType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessDictionaryResult) string { return v.DictionaryAttrType }).(pulumi.StringOutput)
}

// The id of the object
func (o LookupAccessDictionaryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessDictionaryResult) string { return v.Id }).(pulumi.StringOutput)
}

// The dictionary name
func (o LookupAccessDictionaryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessDictionaryResult) string { return v.Name }).(pulumi.StringOutput)
}

// The version of the dictionary
func (o LookupAccessDictionaryResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessDictionaryResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccessDictionaryResultOutput{})
}
