// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Network Access Authorization Global Exception Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := network.NewAccessAuthorizationGlobalExceptionRule(ctx, "example", &network.AccessAuthorizationGlobalExceptionRuleArgs{
//				Name:                    pulumi.String("Rule1"),
//				Default:                 pulumi.Bool(false),
//				Rank:                    pulumi.Int(0),
//				State:                   pulumi.String("enabled"),
//				ConditionType:           pulumi.String("ConditionAttributes"),
//				ConditionIsNegate:       pulumi.Bool(false),
//				ConditionAttributeName:  pulumi.String("Location"),
//				ConditionAttributeValue: pulumi.String("All Locations"),
//				ConditionDictionaryName: pulumi.String("DEVICE"),
//				ConditionOperator:       pulumi.String("equals"),
//				Profiles: pulumi.StringArray{
//					pulumi.String("PermitAccess"),
//				},
//				SecurityGroup: pulumi.String("BYOD"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import ise:network/accessAuthorizationGlobalExceptionRule:AccessAuthorizationGlobalExceptionRule example "76d24097-41c4-4558-a4d0-a8c07ac08470"
// ```
type AccessAuthorizationGlobalExceptionRule struct {
	pulumi.CustomResourceState

	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens AccessAuthorizationGlobalExceptionRuleChildrenArrayOutput `pulumi:"childrens"`
	// Dictionary attribute name
	ConditionAttributeName pulumi.StringPtrOutput `pulumi:"conditionAttributeName"`
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue pulumi.StringPtrOutput `pulumi:"conditionAttributeValue"`
	// Dictionary name
	ConditionDictionaryName pulumi.StringPtrOutput `pulumi:"conditionDictionaryName"`
	// Dictionary value
	ConditionDictionaryValue pulumi.StringPtrOutput `pulumi:"conditionDictionaryValue"`
	// UUID for condition
	ConditionId pulumi.StringPtrOutput `pulumi:"conditionId"`
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate pulumi.BoolPtrOutput `pulumi:"conditionIsNegate"`
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator pulumi.StringPtrOutput `pulumi:"conditionOperator"`
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType pulumi.StringPtrOutput `pulumi:"conditionType"`
	// Indicates if this rule is the default one
	Default pulumi.BoolPtrOutput `pulumi:"default"`
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name pulumi.StringOutput `pulumi:"name"`
	// The authorization profile(s)
	Profiles pulumi.StringArrayOutput `pulumi:"profiles"`
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank pulumi.IntPtrOutput `pulumi:"rank"`
	// Security group used in authorization policies
	SecurityGroup pulumi.StringPtrOutput `pulumi:"securityGroup"`
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State pulumi.StringPtrOutput `pulumi:"state"`
}

// NewAccessAuthorizationGlobalExceptionRule registers a new resource with the given unique name, arguments, and options.
func NewAccessAuthorizationGlobalExceptionRule(ctx *pulumi.Context,
	name string, args *AccessAuthorizationGlobalExceptionRuleArgs, opts ...pulumi.ResourceOption) (*AccessAuthorizationGlobalExceptionRule, error) {
	if args == nil {
		args = &AccessAuthorizationGlobalExceptionRuleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessAuthorizationGlobalExceptionRule
	err := ctx.RegisterResource("ise:network/accessAuthorizationGlobalExceptionRule:AccessAuthorizationGlobalExceptionRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessAuthorizationGlobalExceptionRule gets an existing AccessAuthorizationGlobalExceptionRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessAuthorizationGlobalExceptionRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessAuthorizationGlobalExceptionRuleState, opts ...pulumi.ResourceOption) (*AccessAuthorizationGlobalExceptionRule, error) {
	var resource AccessAuthorizationGlobalExceptionRule
	err := ctx.ReadResource("ise:network/accessAuthorizationGlobalExceptionRule:AccessAuthorizationGlobalExceptionRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessAuthorizationGlobalExceptionRule resources.
type accessAuthorizationGlobalExceptionRuleState struct {
	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens []AccessAuthorizationGlobalExceptionRuleChildren `pulumi:"childrens"`
	// Dictionary attribute name
	ConditionAttributeName *string `pulumi:"conditionAttributeName"`
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue *string `pulumi:"conditionAttributeValue"`
	// Dictionary name
	ConditionDictionaryName *string `pulumi:"conditionDictionaryName"`
	// Dictionary value
	ConditionDictionaryValue *string `pulumi:"conditionDictionaryValue"`
	// UUID for condition
	ConditionId *string `pulumi:"conditionId"`
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate *bool `pulumi:"conditionIsNegate"`
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator *string `pulumi:"conditionOperator"`
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType *string `pulumi:"conditionType"`
	// Indicates if this rule is the default one
	Default *bool `pulumi:"default"`
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name *string `pulumi:"name"`
	// The authorization profile(s)
	Profiles []string `pulumi:"profiles"`
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank *int `pulumi:"rank"`
	// Security group used in authorization policies
	SecurityGroup *string `pulumi:"securityGroup"`
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State *string `pulumi:"state"`
}

type AccessAuthorizationGlobalExceptionRuleState struct {
	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens AccessAuthorizationGlobalExceptionRuleChildrenArrayInput
	// Dictionary attribute name
	ConditionAttributeName pulumi.StringPtrInput
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue pulumi.StringPtrInput
	// Dictionary name
	ConditionDictionaryName pulumi.StringPtrInput
	// Dictionary value
	ConditionDictionaryValue pulumi.StringPtrInput
	// UUID for condition
	ConditionId pulumi.StringPtrInput
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate pulumi.BoolPtrInput
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator pulumi.StringPtrInput
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType pulumi.StringPtrInput
	// Indicates if this rule is the default one
	Default pulumi.BoolPtrInput
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name pulumi.StringPtrInput
	// The authorization profile(s)
	Profiles pulumi.StringArrayInput
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank pulumi.IntPtrInput
	// Security group used in authorization policies
	SecurityGroup pulumi.StringPtrInput
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State pulumi.StringPtrInput
}

func (AccessAuthorizationGlobalExceptionRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessAuthorizationGlobalExceptionRuleState)(nil)).Elem()
}

type accessAuthorizationGlobalExceptionRuleArgs struct {
	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens []AccessAuthorizationGlobalExceptionRuleChildren `pulumi:"childrens"`
	// Dictionary attribute name
	ConditionAttributeName *string `pulumi:"conditionAttributeName"`
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue *string `pulumi:"conditionAttributeValue"`
	// Dictionary name
	ConditionDictionaryName *string `pulumi:"conditionDictionaryName"`
	// Dictionary value
	ConditionDictionaryValue *string `pulumi:"conditionDictionaryValue"`
	// UUID for condition
	ConditionId *string `pulumi:"conditionId"`
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate *bool `pulumi:"conditionIsNegate"`
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator *string `pulumi:"conditionOperator"`
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType *string `pulumi:"conditionType"`
	// Indicates if this rule is the default one
	Default *bool `pulumi:"default"`
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name *string `pulumi:"name"`
	// The authorization profile(s)
	Profiles []string `pulumi:"profiles"`
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank *int `pulumi:"rank"`
	// Security group used in authorization policies
	SecurityGroup *string `pulumi:"securityGroup"`
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a AccessAuthorizationGlobalExceptionRule resource.
type AccessAuthorizationGlobalExceptionRuleArgs struct {
	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens AccessAuthorizationGlobalExceptionRuleChildrenArrayInput
	// Dictionary attribute name
	ConditionAttributeName pulumi.StringPtrInput
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue pulumi.StringPtrInput
	// Dictionary name
	ConditionDictionaryName pulumi.StringPtrInput
	// Dictionary value
	ConditionDictionaryValue pulumi.StringPtrInput
	// UUID for condition
	ConditionId pulumi.StringPtrInput
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate pulumi.BoolPtrInput
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator pulumi.StringPtrInput
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType pulumi.StringPtrInput
	// Indicates if this rule is the default one
	Default pulumi.BoolPtrInput
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name pulumi.StringPtrInput
	// The authorization profile(s)
	Profiles pulumi.StringArrayInput
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank pulumi.IntPtrInput
	// Security group used in authorization policies
	SecurityGroup pulumi.StringPtrInput
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State pulumi.StringPtrInput
}

func (AccessAuthorizationGlobalExceptionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessAuthorizationGlobalExceptionRuleArgs)(nil)).Elem()
}

type AccessAuthorizationGlobalExceptionRuleInput interface {
	pulumi.Input

	ToAccessAuthorizationGlobalExceptionRuleOutput() AccessAuthorizationGlobalExceptionRuleOutput
	ToAccessAuthorizationGlobalExceptionRuleOutputWithContext(ctx context.Context) AccessAuthorizationGlobalExceptionRuleOutput
}

func (*AccessAuthorizationGlobalExceptionRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessAuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (i *AccessAuthorizationGlobalExceptionRule) ToAccessAuthorizationGlobalExceptionRuleOutput() AccessAuthorizationGlobalExceptionRuleOutput {
	return i.ToAccessAuthorizationGlobalExceptionRuleOutputWithContext(context.Background())
}

func (i *AccessAuthorizationGlobalExceptionRule) ToAccessAuthorizationGlobalExceptionRuleOutputWithContext(ctx context.Context) AccessAuthorizationGlobalExceptionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessAuthorizationGlobalExceptionRuleOutput)
}

// AccessAuthorizationGlobalExceptionRuleArrayInput is an input type that accepts AccessAuthorizationGlobalExceptionRuleArray and AccessAuthorizationGlobalExceptionRuleArrayOutput values.
// You can construct a concrete instance of `AccessAuthorizationGlobalExceptionRuleArrayInput` via:
//
//	AccessAuthorizationGlobalExceptionRuleArray{ AccessAuthorizationGlobalExceptionRuleArgs{...} }
type AccessAuthorizationGlobalExceptionRuleArrayInput interface {
	pulumi.Input

	ToAccessAuthorizationGlobalExceptionRuleArrayOutput() AccessAuthorizationGlobalExceptionRuleArrayOutput
	ToAccessAuthorizationGlobalExceptionRuleArrayOutputWithContext(context.Context) AccessAuthorizationGlobalExceptionRuleArrayOutput
}

type AccessAuthorizationGlobalExceptionRuleArray []AccessAuthorizationGlobalExceptionRuleInput

func (AccessAuthorizationGlobalExceptionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessAuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (i AccessAuthorizationGlobalExceptionRuleArray) ToAccessAuthorizationGlobalExceptionRuleArrayOutput() AccessAuthorizationGlobalExceptionRuleArrayOutput {
	return i.ToAccessAuthorizationGlobalExceptionRuleArrayOutputWithContext(context.Background())
}

func (i AccessAuthorizationGlobalExceptionRuleArray) ToAccessAuthorizationGlobalExceptionRuleArrayOutputWithContext(ctx context.Context) AccessAuthorizationGlobalExceptionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessAuthorizationGlobalExceptionRuleArrayOutput)
}

// AccessAuthorizationGlobalExceptionRuleMapInput is an input type that accepts AccessAuthorizationGlobalExceptionRuleMap and AccessAuthorizationGlobalExceptionRuleMapOutput values.
// You can construct a concrete instance of `AccessAuthorizationGlobalExceptionRuleMapInput` via:
//
//	AccessAuthorizationGlobalExceptionRuleMap{ "key": AccessAuthorizationGlobalExceptionRuleArgs{...} }
type AccessAuthorizationGlobalExceptionRuleMapInput interface {
	pulumi.Input

	ToAccessAuthorizationGlobalExceptionRuleMapOutput() AccessAuthorizationGlobalExceptionRuleMapOutput
	ToAccessAuthorizationGlobalExceptionRuleMapOutputWithContext(context.Context) AccessAuthorizationGlobalExceptionRuleMapOutput
}

type AccessAuthorizationGlobalExceptionRuleMap map[string]AccessAuthorizationGlobalExceptionRuleInput

func (AccessAuthorizationGlobalExceptionRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessAuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (i AccessAuthorizationGlobalExceptionRuleMap) ToAccessAuthorizationGlobalExceptionRuleMapOutput() AccessAuthorizationGlobalExceptionRuleMapOutput {
	return i.ToAccessAuthorizationGlobalExceptionRuleMapOutputWithContext(context.Background())
}

func (i AccessAuthorizationGlobalExceptionRuleMap) ToAccessAuthorizationGlobalExceptionRuleMapOutputWithContext(ctx context.Context) AccessAuthorizationGlobalExceptionRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessAuthorizationGlobalExceptionRuleMapOutput)
}

type AccessAuthorizationGlobalExceptionRuleOutput struct{ *pulumi.OutputState }

func (AccessAuthorizationGlobalExceptionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessAuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (o AccessAuthorizationGlobalExceptionRuleOutput) ToAccessAuthorizationGlobalExceptionRuleOutput() AccessAuthorizationGlobalExceptionRuleOutput {
	return o
}

func (o AccessAuthorizationGlobalExceptionRuleOutput) ToAccessAuthorizationGlobalExceptionRuleOutputWithContext(ctx context.Context) AccessAuthorizationGlobalExceptionRuleOutput {
	return o
}

// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
func (o AccessAuthorizationGlobalExceptionRuleOutput) Childrens() AccessAuthorizationGlobalExceptionRuleChildrenArrayOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) AccessAuthorizationGlobalExceptionRuleChildrenArrayOutput {
		return v.Childrens
	}).(AccessAuthorizationGlobalExceptionRuleChildrenArrayOutput)
}

// Dictionary attribute name
func (o AccessAuthorizationGlobalExceptionRuleOutput) ConditionAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringPtrOutput {
		return v.ConditionAttributeName
	}).(pulumi.StringPtrOutput)
}

// Attribute value for condition. Value type is specified in dictionary object.
func (o AccessAuthorizationGlobalExceptionRuleOutput) ConditionAttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringPtrOutput {
		return v.ConditionAttributeValue
	}).(pulumi.StringPtrOutput)
}

// Dictionary name
func (o AccessAuthorizationGlobalExceptionRuleOutput) ConditionDictionaryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringPtrOutput {
		return v.ConditionDictionaryName
	}).(pulumi.StringPtrOutput)
}

// Dictionary value
func (o AccessAuthorizationGlobalExceptionRuleOutput) ConditionDictionaryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringPtrOutput {
		return v.ConditionDictionaryValue
	}).(pulumi.StringPtrOutput)
}

// UUID for condition
func (o AccessAuthorizationGlobalExceptionRuleOutput) ConditionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionId }).(pulumi.StringPtrOutput)
}

// Indicates whereas this condition is in negate mode
func (o AccessAuthorizationGlobalExceptionRuleOutput) ConditionIsNegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.BoolPtrOutput { return v.ConditionIsNegate }).(pulumi.BoolPtrOutput)
}

// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
func (o AccessAuthorizationGlobalExceptionRuleOutput) ConditionOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionOperator }).(pulumi.StringPtrOutput)
}

// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
// `ConditionOrBlock`, `ConditionReference`
func (o AccessAuthorizationGlobalExceptionRuleOutput) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionType }).(pulumi.StringPtrOutput)
}

// Indicates if this rule is the default one
func (o AccessAuthorizationGlobalExceptionRuleOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.BoolPtrOutput { return v.Default }).(pulumi.BoolPtrOutput)
}

// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
func (o AccessAuthorizationGlobalExceptionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The authorization profile(s)
func (o AccessAuthorizationGlobalExceptionRuleOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringArrayOutput { return v.Profiles }).(pulumi.StringArrayOutput)
}

// The rank (priority) in relation to other rules. Lower rank is higher priority.
func (o AccessAuthorizationGlobalExceptionRuleOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.IntPtrOutput { return v.Rank }).(pulumi.IntPtrOutput)
}

// Security group used in authorization policies
func (o AccessAuthorizationGlobalExceptionRuleOutput) SecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.SecurityGroup }).(pulumi.StringPtrOutput)
}

// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
func (o AccessAuthorizationGlobalExceptionRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessAuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

type AccessAuthorizationGlobalExceptionRuleArrayOutput struct{ *pulumi.OutputState }

func (AccessAuthorizationGlobalExceptionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessAuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (o AccessAuthorizationGlobalExceptionRuleArrayOutput) ToAccessAuthorizationGlobalExceptionRuleArrayOutput() AccessAuthorizationGlobalExceptionRuleArrayOutput {
	return o
}

func (o AccessAuthorizationGlobalExceptionRuleArrayOutput) ToAccessAuthorizationGlobalExceptionRuleArrayOutputWithContext(ctx context.Context) AccessAuthorizationGlobalExceptionRuleArrayOutput {
	return o
}

func (o AccessAuthorizationGlobalExceptionRuleArrayOutput) Index(i pulumi.IntInput) AccessAuthorizationGlobalExceptionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessAuthorizationGlobalExceptionRule {
		return vs[0].([]*AccessAuthorizationGlobalExceptionRule)[vs[1].(int)]
	}).(AccessAuthorizationGlobalExceptionRuleOutput)
}

type AccessAuthorizationGlobalExceptionRuleMapOutput struct{ *pulumi.OutputState }

func (AccessAuthorizationGlobalExceptionRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessAuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (o AccessAuthorizationGlobalExceptionRuleMapOutput) ToAccessAuthorizationGlobalExceptionRuleMapOutput() AccessAuthorizationGlobalExceptionRuleMapOutput {
	return o
}

func (o AccessAuthorizationGlobalExceptionRuleMapOutput) ToAccessAuthorizationGlobalExceptionRuleMapOutputWithContext(ctx context.Context) AccessAuthorizationGlobalExceptionRuleMapOutput {
	return o
}

func (o AccessAuthorizationGlobalExceptionRuleMapOutput) MapIndex(k pulumi.StringInput) AccessAuthorizationGlobalExceptionRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessAuthorizationGlobalExceptionRule {
		return vs[0].(map[string]*AccessAuthorizationGlobalExceptionRule)[vs[1].(string)]
	}).(AccessAuthorizationGlobalExceptionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessAuthorizationGlobalExceptionRuleInput)(nil)).Elem(), &AccessAuthorizationGlobalExceptionRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessAuthorizationGlobalExceptionRuleArrayInput)(nil)).Elem(), AccessAuthorizationGlobalExceptionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessAuthorizationGlobalExceptionRuleMapInput)(nil)).Elem(), AccessAuthorizationGlobalExceptionRuleMap{})
	pulumi.RegisterOutputType(AccessAuthorizationGlobalExceptionRuleOutput{})
	pulumi.RegisterOutputType(AccessAuthorizationGlobalExceptionRuleArrayOutput{})
	pulumi.RegisterOutputType(AccessAuthorizationGlobalExceptionRuleMapOutput{})
}
