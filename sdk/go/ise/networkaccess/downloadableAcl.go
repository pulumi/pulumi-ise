// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkaccess

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Downloadable ACL.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/networkaccess"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkaccess.NewDownloadableAcl(ctx, "example", &networkaccess.DownloadableAclArgs{
//				Name:        pulumi.String("MyACL"),
//				Description: pulumi.String("My first downloadable ACL"),
//				Dacl:        pulumi.String("permit ip any any"),
//				DaclType:    pulumi.String("IPV4"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import ise:networkaccess/downloadableAcl:DownloadableAcl example "76d24097-41c4-4558-a4d0-a8c07ac08470"
// ```
type DownloadableAcl struct {
	pulumi.CustomResourceState

	// The DACL content
	Dacl pulumi.StringOutput `pulumi:"dacl"`
	// The type of ACL
	//   - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC`
	//   - Default value: `IPV4`
	DaclType pulumi.StringOutput `pulumi:"daclType"`
	// Description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the downloadable ACL
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDownloadableAcl registers a new resource with the given unique name, arguments, and options.
func NewDownloadableAcl(ctx *pulumi.Context,
	name string, args *DownloadableAclArgs, opts ...pulumi.ResourceOption) (*DownloadableAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dacl == nil {
		return nil, errors.New("invalid value for required argument 'Dacl'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DownloadableAcl
	err := ctx.RegisterResource("ise:networkaccess/downloadableAcl:DownloadableAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDownloadableAcl gets an existing DownloadableAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDownloadableAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DownloadableAclState, opts ...pulumi.ResourceOption) (*DownloadableAcl, error) {
	var resource DownloadableAcl
	err := ctx.ReadResource("ise:networkaccess/downloadableAcl:DownloadableAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DownloadableAcl resources.
type downloadableAclState struct {
	// The DACL content
	Dacl *string `pulumi:"dacl"`
	// The type of ACL
	//   - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC`
	//   - Default value: `IPV4`
	DaclType *string `pulumi:"daclType"`
	// Description
	Description *string `pulumi:"description"`
	// The name of the downloadable ACL
	Name *string `pulumi:"name"`
}

type DownloadableAclState struct {
	// The DACL content
	Dacl pulumi.StringPtrInput
	// The type of ACL
	//   - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC`
	//   - Default value: `IPV4`
	DaclType pulumi.StringPtrInput
	// Description
	Description pulumi.StringPtrInput
	// The name of the downloadable ACL
	Name pulumi.StringPtrInput
}

func (DownloadableAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*downloadableAclState)(nil)).Elem()
}

type downloadableAclArgs struct {
	// The DACL content
	Dacl string `pulumi:"dacl"`
	// The type of ACL
	//   - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC`
	//   - Default value: `IPV4`
	DaclType *string `pulumi:"daclType"`
	// Description
	Description *string `pulumi:"description"`
	// The name of the downloadable ACL
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a DownloadableAcl resource.
type DownloadableAclArgs struct {
	// The DACL content
	Dacl pulumi.StringInput
	// The type of ACL
	//   - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC`
	//   - Default value: `IPV4`
	DaclType pulumi.StringPtrInput
	// Description
	Description pulumi.StringPtrInput
	// The name of the downloadable ACL
	Name pulumi.StringPtrInput
}

func (DownloadableAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*downloadableAclArgs)(nil)).Elem()
}

type DownloadableAclInput interface {
	pulumi.Input

	ToDownloadableAclOutput() DownloadableAclOutput
	ToDownloadableAclOutputWithContext(ctx context.Context) DownloadableAclOutput
}

func (*DownloadableAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**DownloadableAcl)(nil)).Elem()
}

func (i *DownloadableAcl) ToDownloadableAclOutput() DownloadableAclOutput {
	return i.ToDownloadableAclOutputWithContext(context.Background())
}

func (i *DownloadableAcl) ToDownloadableAclOutputWithContext(ctx context.Context) DownloadableAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DownloadableAclOutput)
}

// DownloadableAclArrayInput is an input type that accepts DownloadableAclArray and DownloadableAclArrayOutput values.
// You can construct a concrete instance of `DownloadableAclArrayInput` via:
//
//	DownloadableAclArray{ DownloadableAclArgs{...} }
type DownloadableAclArrayInput interface {
	pulumi.Input

	ToDownloadableAclArrayOutput() DownloadableAclArrayOutput
	ToDownloadableAclArrayOutputWithContext(context.Context) DownloadableAclArrayOutput
}

type DownloadableAclArray []DownloadableAclInput

func (DownloadableAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DownloadableAcl)(nil)).Elem()
}

func (i DownloadableAclArray) ToDownloadableAclArrayOutput() DownloadableAclArrayOutput {
	return i.ToDownloadableAclArrayOutputWithContext(context.Background())
}

func (i DownloadableAclArray) ToDownloadableAclArrayOutputWithContext(ctx context.Context) DownloadableAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DownloadableAclArrayOutput)
}

// DownloadableAclMapInput is an input type that accepts DownloadableAclMap and DownloadableAclMapOutput values.
// You can construct a concrete instance of `DownloadableAclMapInput` via:
//
//	DownloadableAclMap{ "key": DownloadableAclArgs{...} }
type DownloadableAclMapInput interface {
	pulumi.Input

	ToDownloadableAclMapOutput() DownloadableAclMapOutput
	ToDownloadableAclMapOutputWithContext(context.Context) DownloadableAclMapOutput
}

type DownloadableAclMap map[string]DownloadableAclInput

func (DownloadableAclMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DownloadableAcl)(nil)).Elem()
}

func (i DownloadableAclMap) ToDownloadableAclMapOutput() DownloadableAclMapOutput {
	return i.ToDownloadableAclMapOutputWithContext(context.Background())
}

func (i DownloadableAclMap) ToDownloadableAclMapOutputWithContext(ctx context.Context) DownloadableAclMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DownloadableAclMapOutput)
}

type DownloadableAclOutput struct{ *pulumi.OutputState }

func (DownloadableAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DownloadableAcl)(nil)).Elem()
}

func (o DownloadableAclOutput) ToDownloadableAclOutput() DownloadableAclOutput {
	return o
}

func (o DownloadableAclOutput) ToDownloadableAclOutputWithContext(ctx context.Context) DownloadableAclOutput {
	return o
}

// The DACL content
func (o DownloadableAclOutput) Dacl() pulumi.StringOutput {
	return o.ApplyT(func(v *DownloadableAcl) pulumi.StringOutput { return v.Dacl }).(pulumi.StringOutput)
}

// The type of ACL
//   - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC`
//   - Default value: `IPV4`
func (o DownloadableAclOutput) DaclType() pulumi.StringOutput {
	return o.ApplyT(func(v *DownloadableAcl) pulumi.StringOutput { return v.DaclType }).(pulumi.StringOutput)
}

// Description
func (o DownloadableAclOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DownloadableAcl) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the downloadable ACL
func (o DownloadableAclOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DownloadableAcl) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type DownloadableAclArrayOutput struct{ *pulumi.OutputState }

func (DownloadableAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DownloadableAcl)(nil)).Elem()
}

func (o DownloadableAclArrayOutput) ToDownloadableAclArrayOutput() DownloadableAclArrayOutput {
	return o
}

func (o DownloadableAclArrayOutput) ToDownloadableAclArrayOutputWithContext(ctx context.Context) DownloadableAclArrayOutput {
	return o
}

func (o DownloadableAclArrayOutput) Index(i pulumi.IntInput) DownloadableAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DownloadableAcl {
		return vs[0].([]*DownloadableAcl)[vs[1].(int)]
	}).(DownloadableAclOutput)
}

type DownloadableAclMapOutput struct{ *pulumi.OutputState }

func (DownloadableAclMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DownloadableAcl)(nil)).Elem()
}

func (o DownloadableAclMapOutput) ToDownloadableAclMapOutput() DownloadableAclMapOutput {
	return o
}

func (o DownloadableAclMapOutput) ToDownloadableAclMapOutputWithContext(ctx context.Context) DownloadableAclMapOutput {
	return o
}

func (o DownloadableAclMapOutput) MapIndex(k pulumi.StringInput) DownloadableAclOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DownloadableAcl {
		return vs[0].(map[string]*DownloadableAcl)[vs[1].(string)]
	}).(DownloadableAclOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DownloadableAclInput)(nil)).Elem(), &DownloadableAcl{})
	pulumi.RegisterInputType(reflect.TypeOf((*DownloadableAclArrayInput)(nil)).Elem(), DownloadableAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DownloadableAclMapInput)(nil)).Elem(), DownloadableAclMap{})
	pulumi.RegisterOutputType(DownloadableAclOutput{})
	pulumi.RegisterOutputType(DownloadableAclArrayOutput{})
	pulumi.RegisterOutputType(DownloadableAclMapOutput{})
}
