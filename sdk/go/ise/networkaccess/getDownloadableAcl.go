// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkaccess

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Downloadable ACL.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/networkaccess"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkaccess.LookupDownloadableAcl(ctx, &networkaccess.LookupDownloadableAclArgs{
//				Id: pulumi.StringRef("76d24097-41c4-4558-a4d0-a8c07ac08470"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDownloadableAcl(ctx *pulumi.Context, args *LookupDownloadableAclArgs, opts ...pulumi.InvokeOption) (*LookupDownloadableAclResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDownloadableAclResult
	err := ctx.Invoke("ise:networkaccess/getDownloadableAcl:getDownloadableAcl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDownloadableAcl.
type LookupDownloadableAclArgs struct {
	// The id of the object
	Id *string `pulumi:"id"`
	// The name of the downloadable ACL
	Name *string `pulumi:"name"`
}

// A collection of values returned by getDownloadableAcl.
type LookupDownloadableAclResult struct {
	// The DACL content
	Dacl string `pulumi:"dacl"`
	// The type of ACL
	DaclType string `pulumi:"daclType"`
	// Description
	Description string `pulumi:"description"`
	// The id of the object
	Id string `pulumi:"id"`
	// The name of the downloadable ACL
	Name string `pulumi:"name"`
}

func LookupDownloadableAclOutput(ctx *pulumi.Context, args LookupDownloadableAclOutputArgs, opts ...pulumi.InvokeOption) LookupDownloadableAclResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDownloadableAclResultOutput, error) {
			args := v.(LookupDownloadableAclArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ise:networkaccess/getDownloadableAcl:getDownloadableAcl", args, LookupDownloadableAclResultOutput{}, options).(LookupDownloadableAclResultOutput), nil
		}).(LookupDownloadableAclResultOutput)
}

// A collection of arguments for invoking getDownloadableAcl.
type LookupDownloadableAclOutputArgs struct {
	// The id of the object
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the downloadable ACL
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupDownloadableAclOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDownloadableAclArgs)(nil)).Elem()
}

// A collection of values returned by getDownloadableAcl.
type LookupDownloadableAclResultOutput struct{ *pulumi.OutputState }

func (LookupDownloadableAclResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDownloadableAclResult)(nil)).Elem()
}

func (o LookupDownloadableAclResultOutput) ToLookupDownloadableAclResultOutput() LookupDownloadableAclResultOutput {
	return o
}

func (o LookupDownloadableAclResultOutput) ToLookupDownloadableAclResultOutputWithContext(ctx context.Context) LookupDownloadableAclResultOutput {
	return o
}

// The DACL content
func (o LookupDownloadableAclResultOutput) Dacl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDownloadableAclResult) string { return v.Dacl }).(pulumi.StringOutput)
}

// The type of ACL
func (o LookupDownloadableAclResultOutput) DaclType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDownloadableAclResult) string { return v.DaclType }).(pulumi.StringOutput)
}

// Description
func (o LookupDownloadableAclResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDownloadableAclResult) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the object
func (o LookupDownloadableAclResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDownloadableAclResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the downloadable ACL
func (o LookupDownloadableAclResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDownloadableAclResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDownloadableAclResultOutput{})
}
