// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkaccess

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource is used to bulk update rank field in network access authorization rules. It serves as a workaround for the ISE API/Backend limitation which restricts rank assignments to a strictly incremental sequence. By utilizing this resource and networkAccessPolicySet resource, you can bypass the APIs limitation. Creation of this resource is performing PUT operation (Update) and it only tracks rank field. When this resource is destroyed, no action is performed on ISE and resource is just removed from state.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/networkaccess"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkaccess.NewAuthorizationRuleUpdateRanks(ctx, "example", &networkaccess.AuthorizationRuleUpdateRanksArgs{
//				PolicySetId: pulumi.String("d82952cb-b901-4b09-b363-5ebf39bdbaf9"),
//				Rules: networkaccess.AuthorizationRuleUpdateRanksRuleArray{
//					&networkaccess.AuthorizationRuleUpdateRanksRuleArgs{
//						Id:   pulumi.String("3741aca3-db08-4899-af73-2e3f65ec31e1"),
//						Rank: pulumi.Int(0),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AuthorizationRuleUpdateRanks struct {
	pulumi.CustomResourceState

	// Policy set ID
	PolicySetId pulumi.StringOutput                         `pulumi:"policySetId"`
	Rules       AuthorizationRuleUpdateRanksRuleArrayOutput `pulumi:"rules"`
}

// NewAuthorizationRuleUpdateRanks registers a new resource with the given unique name, arguments, and options.
func NewAuthorizationRuleUpdateRanks(ctx *pulumi.Context,
	name string, args *AuthorizationRuleUpdateRanksArgs, opts ...pulumi.ResourceOption) (*AuthorizationRuleUpdateRanks, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicySetId == nil {
		return nil, errors.New("invalid value for required argument 'PolicySetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthorizationRuleUpdateRanks
	err := ctx.RegisterResource("ise:networkaccess/authorizationRuleUpdateRanks:AuthorizationRuleUpdateRanks", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizationRuleUpdateRanks gets an existing AuthorizationRuleUpdateRanks resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizationRuleUpdateRanks(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizationRuleUpdateRanksState, opts ...pulumi.ResourceOption) (*AuthorizationRuleUpdateRanks, error) {
	var resource AuthorizationRuleUpdateRanks
	err := ctx.ReadResource("ise:networkaccess/authorizationRuleUpdateRanks:AuthorizationRuleUpdateRanks", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizationRuleUpdateRanks resources.
type authorizationRuleUpdateRanksState struct {
	// Policy set ID
	PolicySetId *string                            `pulumi:"policySetId"`
	Rules       []AuthorizationRuleUpdateRanksRule `pulumi:"rules"`
}

type AuthorizationRuleUpdateRanksState struct {
	// Policy set ID
	PolicySetId pulumi.StringPtrInput
	Rules       AuthorizationRuleUpdateRanksRuleArrayInput
}

func (AuthorizationRuleUpdateRanksState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationRuleUpdateRanksState)(nil)).Elem()
}

type authorizationRuleUpdateRanksArgs struct {
	// Policy set ID
	PolicySetId string                             `pulumi:"policySetId"`
	Rules       []AuthorizationRuleUpdateRanksRule `pulumi:"rules"`
}

// The set of arguments for constructing a AuthorizationRuleUpdateRanks resource.
type AuthorizationRuleUpdateRanksArgs struct {
	// Policy set ID
	PolicySetId pulumi.StringInput
	Rules       AuthorizationRuleUpdateRanksRuleArrayInput
}

func (AuthorizationRuleUpdateRanksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationRuleUpdateRanksArgs)(nil)).Elem()
}

type AuthorizationRuleUpdateRanksInput interface {
	pulumi.Input

	ToAuthorizationRuleUpdateRanksOutput() AuthorizationRuleUpdateRanksOutput
	ToAuthorizationRuleUpdateRanksOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRanksOutput
}

func (*AuthorizationRuleUpdateRanks) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationRuleUpdateRanks)(nil)).Elem()
}

func (i *AuthorizationRuleUpdateRanks) ToAuthorizationRuleUpdateRanksOutput() AuthorizationRuleUpdateRanksOutput {
	return i.ToAuthorizationRuleUpdateRanksOutputWithContext(context.Background())
}

func (i *AuthorizationRuleUpdateRanks) ToAuthorizationRuleUpdateRanksOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRanksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleUpdateRanksOutput)
}

// AuthorizationRuleUpdateRanksArrayInput is an input type that accepts AuthorizationRuleUpdateRanksArray and AuthorizationRuleUpdateRanksArrayOutput values.
// You can construct a concrete instance of `AuthorizationRuleUpdateRanksArrayInput` via:
//
//	AuthorizationRuleUpdateRanksArray{ AuthorizationRuleUpdateRanksArgs{...} }
type AuthorizationRuleUpdateRanksArrayInput interface {
	pulumi.Input

	ToAuthorizationRuleUpdateRanksArrayOutput() AuthorizationRuleUpdateRanksArrayOutput
	ToAuthorizationRuleUpdateRanksArrayOutputWithContext(context.Context) AuthorizationRuleUpdateRanksArrayOutput
}

type AuthorizationRuleUpdateRanksArray []AuthorizationRuleUpdateRanksInput

func (AuthorizationRuleUpdateRanksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationRuleUpdateRanks)(nil)).Elem()
}

func (i AuthorizationRuleUpdateRanksArray) ToAuthorizationRuleUpdateRanksArrayOutput() AuthorizationRuleUpdateRanksArrayOutput {
	return i.ToAuthorizationRuleUpdateRanksArrayOutputWithContext(context.Background())
}

func (i AuthorizationRuleUpdateRanksArray) ToAuthorizationRuleUpdateRanksArrayOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRanksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleUpdateRanksArrayOutput)
}

// AuthorizationRuleUpdateRanksMapInput is an input type that accepts AuthorizationRuleUpdateRanksMap and AuthorizationRuleUpdateRanksMapOutput values.
// You can construct a concrete instance of `AuthorizationRuleUpdateRanksMapInput` via:
//
//	AuthorizationRuleUpdateRanksMap{ "key": AuthorizationRuleUpdateRanksArgs{...} }
type AuthorizationRuleUpdateRanksMapInput interface {
	pulumi.Input

	ToAuthorizationRuleUpdateRanksMapOutput() AuthorizationRuleUpdateRanksMapOutput
	ToAuthorizationRuleUpdateRanksMapOutputWithContext(context.Context) AuthorizationRuleUpdateRanksMapOutput
}

type AuthorizationRuleUpdateRanksMap map[string]AuthorizationRuleUpdateRanksInput

func (AuthorizationRuleUpdateRanksMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationRuleUpdateRanks)(nil)).Elem()
}

func (i AuthorizationRuleUpdateRanksMap) ToAuthorizationRuleUpdateRanksMapOutput() AuthorizationRuleUpdateRanksMapOutput {
	return i.ToAuthorizationRuleUpdateRanksMapOutputWithContext(context.Background())
}

func (i AuthorizationRuleUpdateRanksMap) ToAuthorizationRuleUpdateRanksMapOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRanksMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleUpdateRanksMapOutput)
}

type AuthorizationRuleUpdateRanksOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleUpdateRanksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationRuleUpdateRanks)(nil)).Elem()
}

func (o AuthorizationRuleUpdateRanksOutput) ToAuthorizationRuleUpdateRanksOutput() AuthorizationRuleUpdateRanksOutput {
	return o
}

func (o AuthorizationRuleUpdateRanksOutput) ToAuthorizationRuleUpdateRanksOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRanksOutput {
	return o
}

// Policy set ID
func (o AuthorizationRuleUpdateRanksOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationRuleUpdateRanks) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o AuthorizationRuleUpdateRanksOutput) Rules() AuthorizationRuleUpdateRanksRuleArrayOutput {
	return o.ApplyT(func(v *AuthorizationRuleUpdateRanks) AuthorizationRuleUpdateRanksRuleArrayOutput { return v.Rules }).(AuthorizationRuleUpdateRanksRuleArrayOutput)
}

type AuthorizationRuleUpdateRanksArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleUpdateRanksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationRuleUpdateRanks)(nil)).Elem()
}

func (o AuthorizationRuleUpdateRanksArrayOutput) ToAuthorizationRuleUpdateRanksArrayOutput() AuthorizationRuleUpdateRanksArrayOutput {
	return o
}

func (o AuthorizationRuleUpdateRanksArrayOutput) ToAuthorizationRuleUpdateRanksArrayOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRanksArrayOutput {
	return o
}

func (o AuthorizationRuleUpdateRanksArrayOutput) Index(i pulumi.IntInput) AuthorizationRuleUpdateRanksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthorizationRuleUpdateRanks {
		return vs[0].([]*AuthorizationRuleUpdateRanks)[vs[1].(int)]
	}).(AuthorizationRuleUpdateRanksOutput)
}

type AuthorizationRuleUpdateRanksMapOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleUpdateRanksMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationRuleUpdateRanks)(nil)).Elem()
}

func (o AuthorizationRuleUpdateRanksMapOutput) ToAuthorizationRuleUpdateRanksMapOutput() AuthorizationRuleUpdateRanksMapOutput {
	return o
}

func (o AuthorizationRuleUpdateRanksMapOutput) ToAuthorizationRuleUpdateRanksMapOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRanksMapOutput {
	return o
}

func (o AuthorizationRuleUpdateRanksMapOutput) MapIndex(k pulumi.StringInput) AuthorizationRuleUpdateRanksOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthorizationRuleUpdateRanks {
		return vs[0].(map[string]*AuthorizationRuleUpdateRanks)[vs[1].(string)]
	}).(AuthorizationRuleUpdateRanksOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationRuleUpdateRanksInput)(nil)).Elem(), &AuthorizationRuleUpdateRanks{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationRuleUpdateRanksArrayInput)(nil)).Elem(), AuthorizationRuleUpdateRanksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationRuleUpdateRanksMapInput)(nil)).Elem(), AuthorizationRuleUpdateRanksMap{})
	pulumi.RegisterOutputType(AuthorizationRuleUpdateRanksOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleUpdateRanksArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleUpdateRanksMapOutput{})
}
