// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authorization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read an authorization profiles policy element.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/Authorization"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Authorization.GetProfile(ctx, &authorization.GetProfileArgs{
//				Id: pulumi.StringRef("76d24097-41c4-4558-a4d0-a8c07ac08470"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupProfile(ctx *pulumi.Context, args *LookupProfileArgs, opts ...pulumi.InvokeOption) (*LookupProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProfileResult
	err := ctx.Invoke("ise:Authorization/getProfile:getProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProfile.
type LookupProfileArgs struct {
	// The id of the object
	Id *string `pulumi:"id"`
	// The name of the authorization profile
	Name *string `pulumi:"name"`
}

// A collection of values returned by getProfile.
type LookupProfileResult struct {
	// Access type
	AccessType string `pulumi:"accessType"`
	// ACL
	Acl string `pulumi:"acl"`
	// List of advanced attributes
	AdvancedAttributes []GetProfileAdvancedAttribute `pulumi:"advancedAttributes"`
	// Agentless Posture.
	AgentlessPosture bool `pulumi:"agentlessPosture"`
	// Airespace ACL
	AirespaceAcl string `pulumi:"airespaceAcl"`
	// Airespace IPv6 ACL
	AirespaceIpv6Acl string `pulumi:"airespaceIpv6Acl"`
	// ASA VPN
	AsaVpn string `pulumi:"asaVpn"`
	// Auto smart port
	AutoSmartPort string `pulumi:"autoSmartPort"`
	// AVC profile
	AvcProfile string `pulumi:"avcProfile"`
	// DACL name
	DaclName string `pulumi:"daclName"`
	// Description
	Description string `pulumi:"description"`
	// Easy wired session candidate
	EasywiredSessionCandidate bool `pulumi:"easywiredSessionCandidate"`
	// The id of the object
	Id string `pulumi:"id"`
	// Interface template
	InterfaceTemplate string `pulumi:"interfaceTemplate"`
	// IPv6 ACL
	Ipv6AclFilter string `pulumi:"ipv6AclFilter"`
	// IPv6 DACL name
	Ipv6DaclName string `pulumi:"ipv6DaclName"`
	// MacSec policy
	MacSecPolicy string `pulumi:"macSecPolicy"`
	// The name of the authorization profile
	Name string `pulumi:"name"`
	// NEAT
	Neat bool `pulumi:"neat"`
	// Value needs to be an existing Network Device Profile
	ProfileName string `pulumi:"profileName"`
	// Maintain Connectivity During Reauthentication
	ReauthenticationConnectivity string `pulumi:"reauthenticationConnectivity"`
	// Reauthentication timer
	ReauthenticationTimer int `pulumi:"reauthenticationTimer"`
	// Service template
	ServiceTemplate bool `pulumi:"serviceTemplate"`
	// Track movement
	TrackMovement bool `pulumi:"trackMovement"`
	// Unique identifier
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
	// Vlan name or ID
	VlanNameId string `pulumi:"vlanNameId"`
	// Vlan tag ID
	VlanTagId int `pulumi:"vlanTagId"`
	// Voice domain permission
	VoiceDomainPermission bool `pulumi:"voiceDomainPermission"`
	// Web authentication (local)
	WebAuth bool `pulumi:"webAuth"`
	// Web redirection ACL
	WebRedirectionAcl string `pulumi:"webRedirectionAcl"`
	// This attribute is mandatory when `webRedirectionType` value is `CentralizedWebAuth`. For all other `webRedirectionType` values the field must be ignored.
	WebRedirectionDisplayCertificatesRenewalMessages bool `pulumi:"webRedirectionDisplayCertificatesRenewalMessages"`
	// A portal that exist in the DB and fits the `webRedirectionType`
	WebRedirectionPortalName string `pulumi:"webRedirectionPortalName"`
	// IP, hostname or FQDN
	WebRedirectionStaticIpHostNameFqdn string `pulumi:"webRedirectionStaticIpHostNameFqdn"`
	// This type must fit the `webRedirectionPortalName`
	WebRedirectionType string `pulumi:"webRedirectionType"`
}

func LookupProfileOutput(ctx *pulumi.Context, args LookupProfileOutputArgs, opts ...pulumi.InvokeOption) LookupProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProfileResult, error) {
			args := v.(LookupProfileArgs)
			r, err := LookupProfile(ctx, &args, opts...)
			var s LookupProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProfileResultOutput)
}

// A collection of arguments for invoking getProfile.
type LookupProfileOutputArgs struct {
	// The id of the object
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the authorization profile
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileArgs)(nil)).Elem()
}

// A collection of values returned by getProfile.
type LookupProfileResultOutput struct{ *pulumi.OutputState }

func (LookupProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileResult)(nil)).Elem()
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutput() LookupProfileResultOutput {
	return o
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutputWithContext(ctx context.Context) LookupProfileResultOutput {
	return o
}

// Access type
func (o LookupProfileResultOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.AccessType }).(pulumi.StringOutput)
}

// ACL
func (o LookupProfileResultOutput) Acl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Acl }).(pulumi.StringOutput)
}

// List of advanced attributes
func (o LookupProfileResultOutput) AdvancedAttributes() GetProfileAdvancedAttributeArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []GetProfileAdvancedAttribute { return v.AdvancedAttributes }).(GetProfileAdvancedAttributeArrayOutput)
}

// Agentless Posture.
func (o LookupProfileResultOutput) AgentlessPosture() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProfileResult) bool { return v.AgentlessPosture }).(pulumi.BoolOutput)
}

// Airespace ACL
func (o LookupProfileResultOutput) AirespaceAcl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.AirespaceAcl }).(pulumi.StringOutput)
}

// Airespace IPv6 ACL
func (o LookupProfileResultOutput) AirespaceIpv6Acl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.AirespaceIpv6Acl }).(pulumi.StringOutput)
}

// ASA VPN
func (o LookupProfileResultOutput) AsaVpn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.AsaVpn }).(pulumi.StringOutput)
}

// Auto smart port
func (o LookupProfileResultOutput) AutoSmartPort() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.AutoSmartPort }).(pulumi.StringOutput)
}

// AVC profile
func (o LookupProfileResultOutput) AvcProfile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.AvcProfile }).(pulumi.StringOutput)
}

// DACL name
func (o LookupProfileResultOutput) DaclName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.DaclName }).(pulumi.StringOutput)
}

// Description
func (o LookupProfileResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Description }).(pulumi.StringOutput)
}

// Easy wired session candidate
func (o LookupProfileResultOutput) EasywiredSessionCandidate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProfileResult) bool { return v.EasywiredSessionCandidate }).(pulumi.BoolOutput)
}

// The id of the object
func (o LookupProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface template
func (o LookupProfileResultOutput) InterfaceTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.InterfaceTemplate }).(pulumi.StringOutput)
}

// IPv6 ACL
func (o LookupProfileResultOutput) Ipv6AclFilter() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Ipv6AclFilter }).(pulumi.StringOutput)
}

// IPv6 DACL name
func (o LookupProfileResultOutput) Ipv6DaclName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Ipv6DaclName }).(pulumi.StringOutput)
}

// MacSec policy
func (o LookupProfileResultOutput) MacSecPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.MacSecPolicy }).(pulumi.StringOutput)
}

// The name of the authorization profile
func (o LookupProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// NEAT
func (o LookupProfileResultOutput) Neat() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProfileResult) bool { return v.Neat }).(pulumi.BoolOutput)
}

// Value needs to be an existing Network Device Profile
func (o LookupProfileResultOutput) ProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.ProfileName }).(pulumi.StringOutput)
}

// Maintain Connectivity During Reauthentication
func (o LookupProfileResultOutput) ReauthenticationConnectivity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.ReauthenticationConnectivity }).(pulumi.StringOutput)
}

// Reauthentication timer
func (o LookupProfileResultOutput) ReauthenticationTimer() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProfileResult) int { return v.ReauthenticationTimer }).(pulumi.IntOutput)
}

// Service template
func (o LookupProfileResultOutput) ServiceTemplate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProfileResult) bool { return v.ServiceTemplate }).(pulumi.BoolOutput)
}

// Track movement
func (o LookupProfileResultOutput) TrackMovement() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProfileResult) bool { return v.TrackMovement }).(pulumi.BoolOutput)
}

// Unique identifier
func (o LookupProfileResultOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

// Vlan name or ID
func (o LookupProfileResultOutput) VlanNameId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.VlanNameId }).(pulumi.StringOutput)
}

// Vlan tag ID
func (o LookupProfileResultOutput) VlanTagId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProfileResult) int { return v.VlanTagId }).(pulumi.IntOutput)
}

// Voice domain permission
func (o LookupProfileResultOutput) VoiceDomainPermission() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProfileResult) bool { return v.VoiceDomainPermission }).(pulumi.BoolOutput)
}

// Web authentication (local)
func (o LookupProfileResultOutput) WebAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProfileResult) bool { return v.WebAuth }).(pulumi.BoolOutput)
}

// Web redirection ACL
func (o LookupProfileResultOutput) WebRedirectionAcl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.WebRedirectionAcl }).(pulumi.StringOutput)
}

// This attribute is mandatory when `webRedirectionType` value is `CentralizedWebAuth`. For all other `webRedirectionType` values the field must be ignored.
func (o LookupProfileResultOutput) WebRedirectionDisplayCertificatesRenewalMessages() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProfileResult) bool { return v.WebRedirectionDisplayCertificatesRenewalMessages }).(pulumi.BoolOutput)
}

// A portal that exist in the DB and fits the `webRedirectionType`
func (o LookupProfileResultOutput) WebRedirectionPortalName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.WebRedirectionPortalName }).(pulumi.StringOutput)
}

// IP, hostname or FQDN
func (o LookupProfileResultOutput) WebRedirectionStaticIpHostNameFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.WebRedirectionStaticIpHostNameFqdn }).(pulumi.StringOutput)
}

// This type must fit the `webRedirectionPortalName`
func (o LookupProfileResultOutput) WebRedirectionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.WebRedirectionType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProfileResultOutput{})
}
