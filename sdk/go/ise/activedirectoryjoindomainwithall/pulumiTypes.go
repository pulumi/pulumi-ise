// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package activedirectoryjoindomainwithall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type NodesAdditionalData struct {
	// Additional attribute name
	Name string `pulumi:"name"`
	// Additional attribute value
	Value string `pulumi:"value"`
}

// NodesAdditionalDataInput is an input type that accepts NodesAdditionalDataArgs and NodesAdditionalDataOutput values.
// You can construct a concrete instance of `NodesAdditionalDataInput` via:
//
//	NodesAdditionalDataArgs{...}
type NodesAdditionalDataInput interface {
	pulumi.Input

	ToNodesAdditionalDataOutput() NodesAdditionalDataOutput
	ToNodesAdditionalDataOutputWithContext(context.Context) NodesAdditionalDataOutput
}

type NodesAdditionalDataArgs struct {
	// Additional attribute name
	Name pulumi.StringInput `pulumi:"name"`
	// Additional attribute value
	Value pulumi.StringInput `pulumi:"value"`
}

func (NodesAdditionalDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodesAdditionalData)(nil)).Elem()
}

func (i NodesAdditionalDataArgs) ToNodesAdditionalDataOutput() NodesAdditionalDataOutput {
	return i.ToNodesAdditionalDataOutputWithContext(context.Background())
}

func (i NodesAdditionalDataArgs) ToNodesAdditionalDataOutputWithContext(ctx context.Context) NodesAdditionalDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodesAdditionalDataOutput)
}

// NodesAdditionalDataArrayInput is an input type that accepts NodesAdditionalDataArray and NodesAdditionalDataArrayOutput values.
// You can construct a concrete instance of `NodesAdditionalDataArrayInput` via:
//
//	NodesAdditionalDataArray{ NodesAdditionalDataArgs{...} }
type NodesAdditionalDataArrayInput interface {
	pulumi.Input

	ToNodesAdditionalDataArrayOutput() NodesAdditionalDataArrayOutput
	ToNodesAdditionalDataArrayOutputWithContext(context.Context) NodesAdditionalDataArrayOutput
}

type NodesAdditionalDataArray []NodesAdditionalDataInput

func (NodesAdditionalDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodesAdditionalData)(nil)).Elem()
}

func (i NodesAdditionalDataArray) ToNodesAdditionalDataArrayOutput() NodesAdditionalDataArrayOutput {
	return i.ToNodesAdditionalDataArrayOutputWithContext(context.Background())
}

func (i NodesAdditionalDataArray) ToNodesAdditionalDataArrayOutputWithContext(ctx context.Context) NodesAdditionalDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodesAdditionalDataArrayOutput)
}

type NodesAdditionalDataOutput struct{ *pulumi.OutputState }

func (NodesAdditionalDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodesAdditionalData)(nil)).Elem()
}

func (o NodesAdditionalDataOutput) ToNodesAdditionalDataOutput() NodesAdditionalDataOutput {
	return o
}

func (o NodesAdditionalDataOutput) ToNodesAdditionalDataOutputWithContext(ctx context.Context) NodesAdditionalDataOutput {
	return o
}

// Additional attribute name
func (o NodesAdditionalDataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodesAdditionalData) string { return v.Name }).(pulumi.StringOutput)
}

// Additional attribute value
func (o NodesAdditionalDataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NodesAdditionalData) string { return v.Value }).(pulumi.StringOutput)
}

type NodesAdditionalDataArrayOutput struct{ *pulumi.OutputState }

func (NodesAdditionalDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodesAdditionalData)(nil)).Elem()
}

func (o NodesAdditionalDataArrayOutput) ToNodesAdditionalDataArrayOutput() NodesAdditionalDataArrayOutput {
	return o
}

func (o NodesAdditionalDataArrayOutput) ToNodesAdditionalDataArrayOutputWithContext(ctx context.Context) NodesAdditionalDataArrayOutput {
	return o
}

func (o NodesAdditionalDataArrayOutput) Index(i pulumi.IntInput) NodesAdditionalDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodesAdditionalData {
		return vs[0].([]NodesAdditionalData)[vs[1].(int)]
	}).(NodesAdditionalDataOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodesAdditionalDataInput)(nil)).Elem(), NodesAdditionalDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodesAdditionalDataArrayInput)(nil)).Elem(), NodesAdditionalDataArray{})
	pulumi.RegisterOutputType(NodesAdditionalDataOutput{})
	pulumi.RegisterOutputType(NodesAdditionalDataArrayOutput{})
}
