// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package activedirectory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage an Active Directory Add Groups.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/activeDirectory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := activeDirectory.NewAddGroups(ctx, "example", &activeDirectory.AddGroupsArgs{
//				JoinPointId:             pulumi.String("73808580-b6e6-11ee-8960-de6d7692bc40"),
//				Name:                    pulumi.String("cisco.local"),
//				Description:             pulumi.String("My AD join point"),
//				Domain:                  pulumi.String("cisco.local"),
//				AdScopesNames:           pulumi.String("Default_Scope"),
//				EnableDomainAllowedList: pulumi.Bool(true),
//				Groups: activedirectory.AddGroupsGroupArray{
//					&activedirectory.AddGroupsGroupArgs{
//						Name: pulumi.String("cisco.local/operators"),
//						Sid:  pulumi.String("S-1-5-32-548"),
//						Type: pulumi.String("GLOBAL"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AddGroups struct {
	pulumi.CustomResourceState

	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames pulumi.StringOutput `pulumi:"adScopesNames"`
	// Join point Description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// AD domain associated with the join point
	Domain pulumi.StringOutput `pulumi:"domain"`
	// - Default value: `true`
	EnableDomainAllowedList pulumi.BoolOutput `pulumi:"enableDomainAllowedList"`
	// List of AD Groups
	Groups AddGroupsGroupArrayOutput `pulumi:"groups"`
	// Active Directory Join Point ID
	JoinPointId pulumi.StringOutput `pulumi:"joinPointId"`
	// The name of the active directory join point
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAddGroups registers a new resource with the given unique name, arguments, and options.
func NewAddGroups(ctx *pulumi.Context,
	name string, args *AddGroupsArgs, opts ...pulumi.ResourceOption) (*AddGroups, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.JoinPointId == nil {
		return nil, errors.New("invalid value for required argument 'JoinPointId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AddGroups
	err := ctx.RegisterResource("ise:activeDirectory/addGroups:AddGroups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAddGroups gets an existing AddGroups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAddGroups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AddGroupsState, opts ...pulumi.ResourceOption) (*AddGroups, error) {
	var resource AddGroups
	err := ctx.ReadResource("ise:activeDirectory/addGroups:AddGroups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AddGroups resources.
type addGroupsState struct {
	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames *string `pulumi:"adScopesNames"`
	// Join point Description
	Description *string `pulumi:"description"`
	// AD domain associated with the join point
	Domain *string `pulumi:"domain"`
	// - Default value: `true`
	EnableDomainAllowedList *bool `pulumi:"enableDomainAllowedList"`
	// List of AD Groups
	Groups []AddGroupsGroup `pulumi:"groups"`
	// Active Directory Join Point ID
	JoinPointId *string `pulumi:"joinPointId"`
	// The name of the active directory join point
	Name *string `pulumi:"name"`
}

type AddGroupsState struct {
	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames pulumi.StringPtrInput
	// Join point Description
	Description pulumi.StringPtrInput
	// AD domain associated with the join point
	Domain pulumi.StringPtrInput
	// - Default value: `true`
	EnableDomainAllowedList pulumi.BoolPtrInput
	// List of AD Groups
	Groups AddGroupsGroupArrayInput
	// Active Directory Join Point ID
	JoinPointId pulumi.StringPtrInput
	// The name of the active directory join point
	Name pulumi.StringPtrInput
}

func (AddGroupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*addGroupsState)(nil)).Elem()
}

type addGroupsArgs struct {
	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames *string `pulumi:"adScopesNames"`
	// Join point Description
	Description *string `pulumi:"description"`
	// AD domain associated with the join point
	Domain string `pulumi:"domain"`
	// - Default value: `true`
	EnableDomainAllowedList *bool `pulumi:"enableDomainAllowedList"`
	// List of AD Groups
	Groups []AddGroupsGroup `pulumi:"groups"`
	// Active Directory Join Point ID
	JoinPointId string `pulumi:"joinPointId"`
	// The name of the active directory join point
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AddGroups resource.
type AddGroupsArgs struct {
	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames pulumi.StringPtrInput
	// Join point Description
	Description pulumi.StringPtrInput
	// AD domain associated with the join point
	Domain pulumi.StringInput
	// - Default value: `true`
	EnableDomainAllowedList pulumi.BoolPtrInput
	// List of AD Groups
	Groups AddGroupsGroupArrayInput
	// Active Directory Join Point ID
	JoinPointId pulumi.StringInput
	// The name of the active directory join point
	Name pulumi.StringPtrInput
}

func (AddGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*addGroupsArgs)(nil)).Elem()
}

type AddGroupsInput interface {
	pulumi.Input

	ToAddGroupsOutput() AddGroupsOutput
	ToAddGroupsOutputWithContext(ctx context.Context) AddGroupsOutput
}

func (*AddGroups) ElementType() reflect.Type {
	return reflect.TypeOf((**AddGroups)(nil)).Elem()
}

func (i *AddGroups) ToAddGroupsOutput() AddGroupsOutput {
	return i.ToAddGroupsOutputWithContext(context.Background())
}

func (i *AddGroups) ToAddGroupsOutputWithContext(ctx context.Context) AddGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddGroupsOutput)
}

// AddGroupsArrayInput is an input type that accepts AddGroupsArray and AddGroupsArrayOutput values.
// You can construct a concrete instance of `AddGroupsArrayInput` via:
//
//	AddGroupsArray{ AddGroupsArgs{...} }
type AddGroupsArrayInput interface {
	pulumi.Input

	ToAddGroupsArrayOutput() AddGroupsArrayOutput
	ToAddGroupsArrayOutputWithContext(context.Context) AddGroupsArrayOutput
}

type AddGroupsArray []AddGroupsInput

func (AddGroupsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddGroups)(nil)).Elem()
}

func (i AddGroupsArray) ToAddGroupsArrayOutput() AddGroupsArrayOutput {
	return i.ToAddGroupsArrayOutputWithContext(context.Background())
}

func (i AddGroupsArray) ToAddGroupsArrayOutputWithContext(ctx context.Context) AddGroupsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddGroupsArrayOutput)
}

// AddGroupsMapInput is an input type that accepts AddGroupsMap and AddGroupsMapOutput values.
// You can construct a concrete instance of `AddGroupsMapInput` via:
//
//	AddGroupsMap{ "key": AddGroupsArgs{...} }
type AddGroupsMapInput interface {
	pulumi.Input

	ToAddGroupsMapOutput() AddGroupsMapOutput
	ToAddGroupsMapOutputWithContext(context.Context) AddGroupsMapOutput
}

type AddGroupsMap map[string]AddGroupsInput

func (AddGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddGroups)(nil)).Elem()
}

func (i AddGroupsMap) ToAddGroupsMapOutput() AddGroupsMapOutput {
	return i.ToAddGroupsMapOutputWithContext(context.Background())
}

func (i AddGroupsMap) ToAddGroupsMapOutputWithContext(ctx context.Context) AddGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddGroupsMapOutput)
}

type AddGroupsOutput struct{ *pulumi.OutputState }

func (AddGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddGroups)(nil)).Elem()
}

func (o AddGroupsOutput) ToAddGroupsOutput() AddGroupsOutput {
	return o
}

func (o AddGroupsOutput) ToAddGroupsOutputWithContext(ctx context.Context) AddGroupsOutput {
	return o
}

// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
// value: `Default_Scope`
func (o AddGroupsOutput) AdScopesNames() pulumi.StringOutput {
	return o.ApplyT(func(v *AddGroups) pulumi.StringOutput { return v.AdScopesNames }).(pulumi.StringOutput)
}

// Join point Description
func (o AddGroupsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddGroups) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// AD domain associated with the join point
func (o AddGroupsOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *AddGroups) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// - Default value: `true`
func (o AddGroupsOutput) EnableDomainAllowedList() pulumi.BoolOutput {
	return o.ApplyT(func(v *AddGroups) pulumi.BoolOutput { return v.EnableDomainAllowedList }).(pulumi.BoolOutput)
}

// List of AD Groups
func (o AddGroupsOutput) Groups() AddGroupsGroupArrayOutput {
	return o.ApplyT(func(v *AddGroups) AddGroupsGroupArrayOutput { return v.Groups }).(AddGroupsGroupArrayOutput)
}

// Active Directory Join Point ID
func (o AddGroupsOutput) JoinPointId() pulumi.StringOutput {
	return o.ApplyT(func(v *AddGroups) pulumi.StringOutput { return v.JoinPointId }).(pulumi.StringOutput)
}

// The name of the active directory join point
func (o AddGroupsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AddGroups) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type AddGroupsArrayOutput struct{ *pulumi.OutputState }

func (AddGroupsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddGroups)(nil)).Elem()
}

func (o AddGroupsArrayOutput) ToAddGroupsArrayOutput() AddGroupsArrayOutput {
	return o
}

func (o AddGroupsArrayOutput) ToAddGroupsArrayOutputWithContext(ctx context.Context) AddGroupsArrayOutput {
	return o
}

func (o AddGroupsArrayOutput) Index(i pulumi.IntInput) AddGroupsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AddGroups {
		return vs[0].([]*AddGroups)[vs[1].(int)]
	}).(AddGroupsOutput)
}

type AddGroupsMapOutput struct{ *pulumi.OutputState }

func (AddGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddGroups)(nil)).Elem()
}

func (o AddGroupsMapOutput) ToAddGroupsMapOutput() AddGroupsMapOutput {
	return o
}

func (o AddGroupsMapOutput) ToAddGroupsMapOutputWithContext(ctx context.Context) AddGroupsMapOutput {
	return o
}

func (o AddGroupsMapOutput) MapIndex(k pulumi.StringInput) AddGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AddGroups {
		return vs[0].(map[string]*AddGroups)[vs[1].(string)]
	}).(AddGroupsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddGroupsInput)(nil)).Elem(), &AddGroups{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddGroupsArrayInput)(nil)).Elem(), AddGroupsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddGroupsMapInput)(nil)).Elem(), AddGroupsMap{})
	pulumi.RegisterOutputType(AddGroupsOutput{})
	pulumi.RegisterOutputType(AddGroupsArrayOutput{})
	pulumi.RegisterOutputType(AddGroupsMapOutput{})
}
