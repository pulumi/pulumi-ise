// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceadmin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource is used to update rank field in device admin authorization rule. It serves as a workaround for the ISE API/Backend limitation which restricts rank assignments to a strictly incremental sequence. By utilizing this resource and deviceAdminAuthorizationRule resource, you can bypass the APIs limitation. Creation of this resource is performing PUT operation (Update) and it only tracks rank field. When this resource is destroyed, no action is performed on ISE and resource is just removed from state.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/deviceadmin"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := deviceadmin.NewAuthorizationRuleUpdateRank(ctx, "example", &deviceadmin.AuthorizationRuleUpdateRankArgs{
//				RuleId:      pulumi.String("9b3680da-0165-44f6-9cff-88e778d98020"),
//				PolicySetId: pulumi.String("d82952cb-b901-4b09-b363-5ebf39bdbaf9"),
//				Rank:        pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AuthorizationRuleUpdateRank struct {
	pulumi.CustomResourceState

	// Policy set ID
	PolicySetId pulumi.StringOutput `pulumi:"policySetId"`
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank pulumi.IntOutput `pulumi:"rank"`
	// Authorization rule ID
	RuleId pulumi.StringOutput `pulumi:"ruleId"`
}

// NewAuthorizationRuleUpdateRank registers a new resource with the given unique name, arguments, and options.
func NewAuthorizationRuleUpdateRank(ctx *pulumi.Context,
	name string, args *AuthorizationRuleUpdateRankArgs, opts ...pulumi.ResourceOption) (*AuthorizationRuleUpdateRank, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicySetId == nil {
		return nil, errors.New("invalid value for required argument 'PolicySetId'")
	}
	if args.Rank == nil {
		return nil, errors.New("invalid value for required argument 'Rank'")
	}
	if args.RuleId == nil {
		return nil, errors.New("invalid value for required argument 'RuleId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthorizationRuleUpdateRank
	err := ctx.RegisterResource("ise:deviceadmin/authorizationRuleUpdateRank:AuthorizationRuleUpdateRank", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizationRuleUpdateRank gets an existing AuthorizationRuleUpdateRank resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizationRuleUpdateRank(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizationRuleUpdateRankState, opts ...pulumi.ResourceOption) (*AuthorizationRuleUpdateRank, error) {
	var resource AuthorizationRuleUpdateRank
	err := ctx.ReadResource("ise:deviceadmin/authorizationRuleUpdateRank:AuthorizationRuleUpdateRank", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizationRuleUpdateRank resources.
type authorizationRuleUpdateRankState struct {
	// Policy set ID
	PolicySetId *string `pulumi:"policySetId"`
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank *int `pulumi:"rank"`
	// Authorization rule ID
	RuleId *string `pulumi:"ruleId"`
}

type AuthorizationRuleUpdateRankState struct {
	// Policy set ID
	PolicySetId pulumi.StringPtrInput
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank pulumi.IntPtrInput
	// Authorization rule ID
	RuleId pulumi.StringPtrInput
}

func (AuthorizationRuleUpdateRankState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationRuleUpdateRankState)(nil)).Elem()
}

type authorizationRuleUpdateRankArgs struct {
	// Policy set ID
	PolicySetId string `pulumi:"policySetId"`
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank int `pulumi:"rank"`
	// Authorization rule ID
	RuleId string `pulumi:"ruleId"`
}

// The set of arguments for constructing a AuthorizationRuleUpdateRank resource.
type AuthorizationRuleUpdateRankArgs struct {
	// Policy set ID
	PolicySetId pulumi.StringInput
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank pulumi.IntInput
	// Authorization rule ID
	RuleId pulumi.StringInput
}

func (AuthorizationRuleUpdateRankArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationRuleUpdateRankArgs)(nil)).Elem()
}

type AuthorizationRuleUpdateRankInput interface {
	pulumi.Input

	ToAuthorizationRuleUpdateRankOutput() AuthorizationRuleUpdateRankOutput
	ToAuthorizationRuleUpdateRankOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRankOutput
}

func (*AuthorizationRuleUpdateRank) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationRuleUpdateRank)(nil)).Elem()
}

func (i *AuthorizationRuleUpdateRank) ToAuthorizationRuleUpdateRankOutput() AuthorizationRuleUpdateRankOutput {
	return i.ToAuthorizationRuleUpdateRankOutputWithContext(context.Background())
}

func (i *AuthorizationRuleUpdateRank) ToAuthorizationRuleUpdateRankOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRankOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleUpdateRankOutput)
}

// AuthorizationRuleUpdateRankArrayInput is an input type that accepts AuthorizationRuleUpdateRankArray and AuthorizationRuleUpdateRankArrayOutput values.
// You can construct a concrete instance of `AuthorizationRuleUpdateRankArrayInput` via:
//
//	AuthorizationRuleUpdateRankArray{ AuthorizationRuleUpdateRankArgs{...} }
type AuthorizationRuleUpdateRankArrayInput interface {
	pulumi.Input

	ToAuthorizationRuleUpdateRankArrayOutput() AuthorizationRuleUpdateRankArrayOutput
	ToAuthorizationRuleUpdateRankArrayOutputWithContext(context.Context) AuthorizationRuleUpdateRankArrayOutput
}

type AuthorizationRuleUpdateRankArray []AuthorizationRuleUpdateRankInput

func (AuthorizationRuleUpdateRankArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationRuleUpdateRank)(nil)).Elem()
}

func (i AuthorizationRuleUpdateRankArray) ToAuthorizationRuleUpdateRankArrayOutput() AuthorizationRuleUpdateRankArrayOutput {
	return i.ToAuthorizationRuleUpdateRankArrayOutputWithContext(context.Background())
}

func (i AuthorizationRuleUpdateRankArray) ToAuthorizationRuleUpdateRankArrayOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRankArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleUpdateRankArrayOutput)
}

// AuthorizationRuleUpdateRankMapInput is an input type that accepts AuthorizationRuleUpdateRankMap and AuthorizationRuleUpdateRankMapOutput values.
// You can construct a concrete instance of `AuthorizationRuleUpdateRankMapInput` via:
//
//	AuthorizationRuleUpdateRankMap{ "key": AuthorizationRuleUpdateRankArgs{...} }
type AuthorizationRuleUpdateRankMapInput interface {
	pulumi.Input

	ToAuthorizationRuleUpdateRankMapOutput() AuthorizationRuleUpdateRankMapOutput
	ToAuthorizationRuleUpdateRankMapOutputWithContext(context.Context) AuthorizationRuleUpdateRankMapOutput
}

type AuthorizationRuleUpdateRankMap map[string]AuthorizationRuleUpdateRankInput

func (AuthorizationRuleUpdateRankMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationRuleUpdateRank)(nil)).Elem()
}

func (i AuthorizationRuleUpdateRankMap) ToAuthorizationRuleUpdateRankMapOutput() AuthorizationRuleUpdateRankMapOutput {
	return i.ToAuthorizationRuleUpdateRankMapOutputWithContext(context.Background())
}

func (i AuthorizationRuleUpdateRankMap) ToAuthorizationRuleUpdateRankMapOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRankMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleUpdateRankMapOutput)
}

type AuthorizationRuleUpdateRankOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleUpdateRankOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationRuleUpdateRank)(nil)).Elem()
}

func (o AuthorizationRuleUpdateRankOutput) ToAuthorizationRuleUpdateRankOutput() AuthorizationRuleUpdateRankOutput {
	return o
}

func (o AuthorizationRuleUpdateRankOutput) ToAuthorizationRuleUpdateRankOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRankOutput {
	return o
}

// Policy set ID
func (o AuthorizationRuleUpdateRankOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationRuleUpdateRank) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

// The rank (priority) in relation to other rules. Lower rank is higher priority.
func (o AuthorizationRuleUpdateRankOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v *AuthorizationRuleUpdateRank) pulumi.IntOutput { return v.Rank }).(pulumi.IntOutput)
}

// Authorization rule ID
func (o AuthorizationRuleUpdateRankOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationRuleUpdateRank) pulumi.StringOutput { return v.RuleId }).(pulumi.StringOutput)
}

type AuthorizationRuleUpdateRankArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleUpdateRankArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationRuleUpdateRank)(nil)).Elem()
}

func (o AuthorizationRuleUpdateRankArrayOutput) ToAuthorizationRuleUpdateRankArrayOutput() AuthorizationRuleUpdateRankArrayOutput {
	return o
}

func (o AuthorizationRuleUpdateRankArrayOutput) ToAuthorizationRuleUpdateRankArrayOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRankArrayOutput {
	return o
}

func (o AuthorizationRuleUpdateRankArrayOutput) Index(i pulumi.IntInput) AuthorizationRuleUpdateRankOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthorizationRuleUpdateRank {
		return vs[0].([]*AuthorizationRuleUpdateRank)[vs[1].(int)]
	}).(AuthorizationRuleUpdateRankOutput)
}

type AuthorizationRuleUpdateRankMapOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleUpdateRankMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationRuleUpdateRank)(nil)).Elem()
}

func (o AuthorizationRuleUpdateRankMapOutput) ToAuthorizationRuleUpdateRankMapOutput() AuthorizationRuleUpdateRankMapOutput {
	return o
}

func (o AuthorizationRuleUpdateRankMapOutput) ToAuthorizationRuleUpdateRankMapOutputWithContext(ctx context.Context) AuthorizationRuleUpdateRankMapOutput {
	return o
}

func (o AuthorizationRuleUpdateRankMapOutput) MapIndex(k pulumi.StringInput) AuthorizationRuleUpdateRankOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthorizationRuleUpdateRank {
		return vs[0].(map[string]*AuthorizationRuleUpdateRank)[vs[1].(string)]
	}).(AuthorizationRuleUpdateRankOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationRuleUpdateRankInput)(nil)).Elem(), &AuthorizationRuleUpdateRank{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationRuleUpdateRankArrayInput)(nil)).Elem(), AuthorizationRuleUpdateRankArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationRuleUpdateRankMapInput)(nil)).Elem(), AuthorizationRuleUpdateRankMap{})
	pulumi.RegisterOutputType(AuthorizationRuleUpdateRankOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleUpdateRankArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleUpdateRankMapOutput{})
}
