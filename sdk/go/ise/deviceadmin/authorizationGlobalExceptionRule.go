// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceadmin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Device Admin Authorization Global Exception Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/deviceadmin"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := deviceadmin.NewAuthorizationGlobalExceptionRule(ctx, "example", &deviceadmin.AuthorizationGlobalExceptionRuleArgs{
//				Name:                    pulumi.String("Rule1"),
//				Default:                 pulumi.Bool(false),
//				Rank:                    pulumi.Int(0),
//				State:                   pulumi.String("enabled"),
//				ConditionType:           pulumi.String("ConditionAttributes"),
//				ConditionIsNegate:       pulumi.Bool(false),
//				ConditionAttributeName:  pulumi.String("Location"),
//				ConditionAttributeValue: pulumi.String("All Locations"),
//				ConditionDictionaryName: pulumi.String("DEVICE"),
//				ConditionOperator:       pulumi.String("equals"),
//				CommandSets: pulumi.StringArray{
//					pulumi.String("DenyAllCommands"),
//				},
//				Profile: pulumi.String("Default Shell Profile"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import ise:deviceadmin/authorizationGlobalExceptionRule:AuthorizationGlobalExceptionRule example "76d24097-41c4-4558-a4d0-a8c07ac08470"
// ```
type AuthorizationGlobalExceptionRule struct {
	pulumi.CustomResourceState

	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens AuthorizationGlobalExceptionRuleChildrenArrayOutput `pulumi:"childrens"`
	// Command sets enforce the specified list of commands that can be executed by a device administrator
	CommandSets pulumi.StringArrayOutput `pulumi:"commandSets"`
	// Dictionary attribute name
	ConditionAttributeName pulumi.StringPtrOutput `pulumi:"conditionAttributeName"`
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue pulumi.StringPtrOutput `pulumi:"conditionAttributeValue"`
	// Dictionary name
	ConditionDictionaryName pulumi.StringPtrOutput `pulumi:"conditionDictionaryName"`
	// Dictionary value
	ConditionDictionaryValue pulumi.StringPtrOutput `pulumi:"conditionDictionaryValue"`
	// UUID for condition
	ConditionId pulumi.StringPtrOutput `pulumi:"conditionId"`
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate pulumi.BoolPtrOutput `pulumi:"conditionIsNegate"`
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator pulumi.StringPtrOutput `pulumi:"conditionOperator"`
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType pulumi.StringPtrOutput `pulumi:"conditionType"`
	// Indicates if this rule is the default one
	Default pulumi.BoolPtrOutput `pulumi:"default"`
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name pulumi.StringOutput `pulumi:"name"`
	// Device admin profiles control the initial login session of the device administrator
	Profile pulumi.StringPtrOutput `pulumi:"profile"`
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank pulumi.IntPtrOutput `pulumi:"rank"`
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State pulumi.StringPtrOutput `pulumi:"state"`
}

// NewAuthorizationGlobalExceptionRule registers a new resource with the given unique name, arguments, and options.
func NewAuthorizationGlobalExceptionRule(ctx *pulumi.Context,
	name string, args *AuthorizationGlobalExceptionRuleArgs, opts ...pulumi.ResourceOption) (*AuthorizationGlobalExceptionRule, error) {
	if args == nil {
		args = &AuthorizationGlobalExceptionRuleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthorizationGlobalExceptionRule
	err := ctx.RegisterResource("ise:deviceadmin/authorizationGlobalExceptionRule:AuthorizationGlobalExceptionRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizationGlobalExceptionRule gets an existing AuthorizationGlobalExceptionRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizationGlobalExceptionRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizationGlobalExceptionRuleState, opts ...pulumi.ResourceOption) (*AuthorizationGlobalExceptionRule, error) {
	var resource AuthorizationGlobalExceptionRule
	err := ctx.ReadResource("ise:deviceadmin/authorizationGlobalExceptionRule:AuthorizationGlobalExceptionRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizationGlobalExceptionRule resources.
type authorizationGlobalExceptionRuleState struct {
	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens []AuthorizationGlobalExceptionRuleChildren `pulumi:"childrens"`
	// Command sets enforce the specified list of commands that can be executed by a device administrator
	CommandSets []string `pulumi:"commandSets"`
	// Dictionary attribute name
	ConditionAttributeName *string `pulumi:"conditionAttributeName"`
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue *string `pulumi:"conditionAttributeValue"`
	// Dictionary name
	ConditionDictionaryName *string `pulumi:"conditionDictionaryName"`
	// Dictionary value
	ConditionDictionaryValue *string `pulumi:"conditionDictionaryValue"`
	// UUID for condition
	ConditionId *string `pulumi:"conditionId"`
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate *bool `pulumi:"conditionIsNegate"`
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator *string `pulumi:"conditionOperator"`
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType *string `pulumi:"conditionType"`
	// Indicates if this rule is the default one
	Default *bool `pulumi:"default"`
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name *string `pulumi:"name"`
	// Device admin profiles control the initial login session of the device administrator
	Profile *string `pulumi:"profile"`
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank *int `pulumi:"rank"`
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State *string `pulumi:"state"`
}

type AuthorizationGlobalExceptionRuleState struct {
	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens AuthorizationGlobalExceptionRuleChildrenArrayInput
	// Command sets enforce the specified list of commands that can be executed by a device administrator
	CommandSets pulumi.StringArrayInput
	// Dictionary attribute name
	ConditionAttributeName pulumi.StringPtrInput
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue pulumi.StringPtrInput
	// Dictionary name
	ConditionDictionaryName pulumi.StringPtrInput
	// Dictionary value
	ConditionDictionaryValue pulumi.StringPtrInput
	// UUID for condition
	ConditionId pulumi.StringPtrInput
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate pulumi.BoolPtrInput
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator pulumi.StringPtrInput
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType pulumi.StringPtrInput
	// Indicates if this rule is the default one
	Default pulumi.BoolPtrInput
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name pulumi.StringPtrInput
	// Device admin profiles control the initial login session of the device administrator
	Profile pulumi.StringPtrInput
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank pulumi.IntPtrInput
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State pulumi.StringPtrInput
}

func (AuthorizationGlobalExceptionRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationGlobalExceptionRuleState)(nil)).Elem()
}

type authorizationGlobalExceptionRuleArgs struct {
	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens []AuthorizationGlobalExceptionRuleChildren `pulumi:"childrens"`
	// Command sets enforce the specified list of commands that can be executed by a device administrator
	CommandSets []string `pulumi:"commandSets"`
	// Dictionary attribute name
	ConditionAttributeName *string `pulumi:"conditionAttributeName"`
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue *string `pulumi:"conditionAttributeValue"`
	// Dictionary name
	ConditionDictionaryName *string `pulumi:"conditionDictionaryName"`
	// Dictionary value
	ConditionDictionaryValue *string `pulumi:"conditionDictionaryValue"`
	// UUID for condition
	ConditionId *string `pulumi:"conditionId"`
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate *bool `pulumi:"conditionIsNegate"`
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator *string `pulumi:"conditionOperator"`
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType *string `pulumi:"conditionType"`
	// Indicates if this rule is the default one
	Default *bool `pulumi:"default"`
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name *string `pulumi:"name"`
	// Device admin profiles control the initial login session of the device administrator
	Profile *string `pulumi:"profile"`
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank *int `pulumi:"rank"`
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a AuthorizationGlobalExceptionRule resource.
type AuthorizationGlobalExceptionRuleArgs struct {
	// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
	Childrens AuthorizationGlobalExceptionRuleChildrenArrayInput
	// Command sets enforce the specified list of commands that can be executed by a device administrator
	CommandSets pulumi.StringArrayInput
	// Dictionary attribute name
	ConditionAttributeName pulumi.StringPtrInput
	// Attribute value for condition. Value type is specified in dictionary object.
	ConditionAttributeValue pulumi.StringPtrInput
	// Dictionary name
	ConditionDictionaryName pulumi.StringPtrInput
	// Dictionary value
	ConditionDictionaryValue pulumi.StringPtrInput
	// UUID for condition
	ConditionId pulumi.StringPtrInput
	// Indicates whereas this condition is in negate mode
	ConditionIsNegate pulumi.BoolPtrInput
	// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
	// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
	// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
	ConditionOperator pulumi.StringPtrInput
	// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
	// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
	// `ConditionOrBlock`, `ConditionReference`
	ConditionType pulumi.StringPtrInput
	// Indicates if this rule is the default one
	Default pulumi.BoolPtrInput
	// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
	Name pulumi.StringPtrInput
	// Device admin profiles control the initial login session of the device administrator
	Profile pulumi.StringPtrInput
	// The rank (priority) in relation to other rules. Lower rank is higher priority.
	Rank pulumi.IntPtrInput
	// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
	State pulumi.StringPtrInput
}

func (AuthorizationGlobalExceptionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationGlobalExceptionRuleArgs)(nil)).Elem()
}

type AuthorizationGlobalExceptionRuleInput interface {
	pulumi.Input

	ToAuthorizationGlobalExceptionRuleOutput() AuthorizationGlobalExceptionRuleOutput
	ToAuthorizationGlobalExceptionRuleOutputWithContext(ctx context.Context) AuthorizationGlobalExceptionRuleOutput
}

func (*AuthorizationGlobalExceptionRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (i *AuthorizationGlobalExceptionRule) ToAuthorizationGlobalExceptionRuleOutput() AuthorizationGlobalExceptionRuleOutput {
	return i.ToAuthorizationGlobalExceptionRuleOutputWithContext(context.Background())
}

func (i *AuthorizationGlobalExceptionRule) ToAuthorizationGlobalExceptionRuleOutputWithContext(ctx context.Context) AuthorizationGlobalExceptionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationGlobalExceptionRuleOutput)
}

// AuthorizationGlobalExceptionRuleArrayInput is an input type that accepts AuthorizationGlobalExceptionRuleArray and AuthorizationGlobalExceptionRuleArrayOutput values.
// You can construct a concrete instance of `AuthorizationGlobalExceptionRuleArrayInput` via:
//
//	AuthorizationGlobalExceptionRuleArray{ AuthorizationGlobalExceptionRuleArgs{...} }
type AuthorizationGlobalExceptionRuleArrayInput interface {
	pulumi.Input

	ToAuthorizationGlobalExceptionRuleArrayOutput() AuthorizationGlobalExceptionRuleArrayOutput
	ToAuthorizationGlobalExceptionRuleArrayOutputWithContext(context.Context) AuthorizationGlobalExceptionRuleArrayOutput
}

type AuthorizationGlobalExceptionRuleArray []AuthorizationGlobalExceptionRuleInput

func (AuthorizationGlobalExceptionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (i AuthorizationGlobalExceptionRuleArray) ToAuthorizationGlobalExceptionRuleArrayOutput() AuthorizationGlobalExceptionRuleArrayOutput {
	return i.ToAuthorizationGlobalExceptionRuleArrayOutputWithContext(context.Background())
}

func (i AuthorizationGlobalExceptionRuleArray) ToAuthorizationGlobalExceptionRuleArrayOutputWithContext(ctx context.Context) AuthorizationGlobalExceptionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationGlobalExceptionRuleArrayOutput)
}

// AuthorizationGlobalExceptionRuleMapInput is an input type that accepts AuthorizationGlobalExceptionRuleMap and AuthorizationGlobalExceptionRuleMapOutput values.
// You can construct a concrete instance of `AuthorizationGlobalExceptionRuleMapInput` via:
//
//	AuthorizationGlobalExceptionRuleMap{ "key": AuthorizationGlobalExceptionRuleArgs{...} }
type AuthorizationGlobalExceptionRuleMapInput interface {
	pulumi.Input

	ToAuthorizationGlobalExceptionRuleMapOutput() AuthorizationGlobalExceptionRuleMapOutput
	ToAuthorizationGlobalExceptionRuleMapOutputWithContext(context.Context) AuthorizationGlobalExceptionRuleMapOutput
}

type AuthorizationGlobalExceptionRuleMap map[string]AuthorizationGlobalExceptionRuleInput

func (AuthorizationGlobalExceptionRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (i AuthorizationGlobalExceptionRuleMap) ToAuthorizationGlobalExceptionRuleMapOutput() AuthorizationGlobalExceptionRuleMapOutput {
	return i.ToAuthorizationGlobalExceptionRuleMapOutputWithContext(context.Background())
}

func (i AuthorizationGlobalExceptionRuleMap) ToAuthorizationGlobalExceptionRuleMapOutputWithContext(ctx context.Context) AuthorizationGlobalExceptionRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationGlobalExceptionRuleMapOutput)
}

type AuthorizationGlobalExceptionRuleOutput struct{ *pulumi.OutputState }

func (AuthorizationGlobalExceptionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (o AuthorizationGlobalExceptionRuleOutput) ToAuthorizationGlobalExceptionRuleOutput() AuthorizationGlobalExceptionRuleOutput {
	return o
}

func (o AuthorizationGlobalExceptionRuleOutput) ToAuthorizationGlobalExceptionRuleOutputWithContext(ctx context.Context) AuthorizationGlobalExceptionRuleOutput {
	return o
}

// List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
func (o AuthorizationGlobalExceptionRuleOutput) Childrens() AuthorizationGlobalExceptionRuleChildrenArrayOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) AuthorizationGlobalExceptionRuleChildrenArrayOutput {
		return v.Childrens
	}).(AuthorizationGlobalExceptionRuleChildrenArrayOutput)
}

// Command sets enforce the specified list of commands that can be executed by a device administrator
func (o AuthorizationGlobalExceptionRuleOutput) CommandSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringArrayOutput { return v.CommandSets }).(pulumi.StringArrayOutput)
}

// Dictionary attribute name
func (o AuthorizationGlobalExceptionRuleOutput) ConditionAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionAttributeName }).(pulumi.StringPtrOutput)
}

// Attribute value for condition. Value type is specified in dictionary object.
func (o AuthorizationGlobalExceptionRuleOutput) ConditionAttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionAttributeValue }).(pulumi.StringPtrOutput)
}

// Dictionary name
func (o AuthorizationGlobalExceptionRuleOutput) ConditionDictionaryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionDictionaryName }).(pulumi.StringPtrOutput)
}

// Dictionary value
func (o AuthorizationGlobalExceptionRuleOutput) ConditionDictionaryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionDictionaryValue }).(pulumi.StringPtrOutput)
}

// UUID for condition
func (o AuthorizationGlobalExceptionRuleOutput) ConditionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionId }).(pulumi.StringPtrOutput)
}

// Indicates whereas this condition is in negate mode
func (o AuthorizationGlobalExceptionRuleOutput) ConditionIsNegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.BoolPtrOutput { return v.ConditionIsNegate }).(pulumi.BoolPtrOutput)
}

// Equality operator - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`,
// `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`,
// `notEquals`, `notIn`, `notStartsWith`, `startsWith`
func (o AuthorizationGlobalExceptionRuleOutput) ConditionOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionOperator }).(pulumi.StringPtrOutput)
}

// Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that
// additional conditions are present under the children attribute. - Choices: `ConditionAndBlock`, `ConditionAttributes`,
// `ConditionOrBlock`, `ConditionReference`
func (o AuthorizationGlobalExceptionRuleOutput) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.ConditionType }).(pulumi.StringPtrOutput)
}

// Indicates if this rule is the default one
func (o AuthorizationGlobalExceptionRuleOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.BoolPtrOutput { return v.Default }).(pulumi.BoolPtrOutput)
}

// Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
func (o AuthorizationGlobalExceptionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Device admin profiles control the initial login session of the device administrator
func (o AuthorizationGlobalExceptionRuleOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.Profile }).(pulumi.StringPtrOutput)
}

// The rank (priority) in relation to other rules. Lower rank is higher priority.
func (o AuthorizationGlobalExceptionRuleOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.IntPtrOutput { return v.Rank }).(pulumi.IntPtrOutput)
}

// The state that the rule is in. A disabled rule cannot be matched. - Choices: `disabled`, `enabled`, `monitor`
func (o AuthorizationGlobalExceptionRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationGlobalExceptionRule) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

type AuthorizationGlobalExceptionRuleArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationGlobalExceptionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (o AuthorizationGlobalExceptionRuleArrayOutput) ToAuthorizationGlobalExceptionRuleArrayOutput() AuthorizationGlobalExceptionRuleArrayOutput {
	return o
}

func (o AuthorizationGlobalExceptionRuleArrayOutput) ToAuthorizationGlobalExceptionRuleArrayOutputWithContext(ctx context.Context) AuthorizationGlobalExceptionRuleArrayOutput {
	return o
}

func (o AuthorizationGlobalExceptionRuleArrayOutput) Index(i pulumi.IntInput) AuthorizationGlobalExceptionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthorizationGlobalExceptionRule {
		return vs[0].([]*AuthorizationGlobalExceptionRule)[vs[1].(int)]
	}).(AuthorizationGlobalExceptionRuleOutput)
}

type AuthorizationGlobalExceptionRuleMapOutput struct{ *pulumi.OutputState }

func (AuthorizationGlobalExceptionRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationGlobalExceptionRule)(nil)).Elem()
}

func (o AuthorizationGlobalExceptionRuleMapOutput) ToAuthorizationGlobalExceptionRuleMapOutput() AuthorizationGlobalExceptionRuleMapOutput {
	return o
}

func (o AuthorizationGlobalExceptionRuleMapOutput) ToAuthorizationGlobalExceptionRuleMapOutputWithContext(ctx context.Context) AuthorizationGlobalExceptionRuleMapOutput {
	return o
}

func (o AuthorizationGlobalExceptionRuleMapOutput) MapIndex(k pulumi.StringInput) AuthorizationGlobalExceptionRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthorizationGlobalExceptionRule {
		return vs[0].(map[string]*AuthorizationGlobalExceptionRule)[vs[1].(string)]
	}).(AuthorizationGlobalExceptionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationGlobalExceptionRuleInput)(nil)).Elem(), &AuthorizationGlobalExceptionRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationGlobalExceptionRuleArrayInput)(nil)).Elem(), AuthorizationGlobalExceptionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationGlobalExceptionRuleMapInput)(nil)).Elem(), AuthorizationGlobalExceptionRuleMap{})
	pulumi.RegisterOutputType(AuthorizationGlobalExceptionRuleOutput{})
	pulumi.RegisterOutputType(AuthorizationGlobalExceptionRuleArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationGlobalExceptionRuleMapOutput{})
}
