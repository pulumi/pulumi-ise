// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceadmin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource is used to bulk update rank field in device admin policy set. It serves as a workaround for the ISE API/Backend limitation which restricts rank assignments to a strictly incremental sequence. By utilizing this resource and deviceAdminPolicySet resource, you can bypass the APIs limitation. Creation of this resource is performing PUT operation (Update) and it only tracks rank field. When this resource is destroyed, no action is performed on ISE and resource is just removed from state.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/deviceadmin"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := deviceadmin.NewPolicySetUpdateRanks(ctx, "example", &deviceadmin.PolicySetUpdateRanksArgs{
//				Policies: deviceadmin.PolicySetUpdateRanksPolicyArray{
//					&deviceadmin.PolicySetUpdateRanksPolicyArgs{
//						Id:   pulumi.String("d82952cb-b901-4b09-b363-5ebf39bdbaf9"),
//						Rank: pulumi.Int(0),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PolicySetUpdateRanks struct {
	pulumi.CustomResourceState

	Policies PolicySetUpdateRanksPolicyArrayOutput `pulumi:"policies"`
}

// NewPolicySetUpdateRanks registers a new resource with the given unique name, arguments, and options.
func NewPolicySetUpdateRanks(ctx *pulumi.Context,
	name string, args *PolicySetUpdateRanksArgs, opts ...pulumi.ResourceOption) (*PolicySetUpdateRanks, error) {
	if args == nil {
		args = &PolicySetUpdateRanksArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicySetUpdateRanks
	err := ctx.RegisterResource("ise:deviceadmin/policySetUpdateRanks:PolicySetUpdateRanks", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicySetUpdateRanks gets an existing PolicySetUpdateRanks resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicySetUpdateRanks(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicySetUpdateRanksState, opts ...pulumi.ResourceOption) (*PolicySetUpdateRanks, error) {
	var resource PolicySetUpdateRanks
	err := ctx.ReadResource("ise:deviceadmin/policySetUpdateRanks:PolicySetUpdateRanks", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicySetUpdateRanks resources.
type policySetUpdateRanksState struct {
	Policies []PolicySetUpdateRanksPolicy `pulumi:"policies"`
}

type PolicySetUpdateRanksState struct {
	Policies PolicySetUpdateRanksPolicyArrayInput
}

func (PolicySetUpdateRanksState) ElementType() reflect.Type {
	return reflect.TypeOf((*policySetUpdateRanksState)(nil)).Elem()
}

type policySetUpdateRanksArgs struct {
	Policies []PolicySetUpdateRanksPolicy `pulumi:"policies"`
}

// The set of arguments for constructing a PolicySetUpdateRanks resource.
type PolicySetUpdateRanksArgs struct {
	Policies PolicySetUpdateRanksPolicyArrayInput
}

func (PolicySetUpdateRanksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policySetUpdateRanksArgs)(nil)).Elem()
}

type PolicySetUpdateRanksInput interface {
	pulumi.Input

	ToPolicySetUpdateRanksOutput() PolicySetUpdateRanksOutput
	ToPolicySetUpdateRanksOutputWithContext(ctx context.Context) PolicySetUpdateRanksOutput
}

func (*PolicySetUpdateRanks) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySetUpdateRanks)(nil)).Elem()
}

func (i *PolicySetUpdateRanks) ToPolicySetUpdateRanksOutput() PolicySetUpdateRanksOutput {
	return i.ToPolicySetUpdateRanksOutputWithContext(context.Background())
}

func (i *PolicySetUpdateRanks) ToPolicySetUpdateRanksOutputWithContext(ctx context.Context) PolicySetUpdateRanksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetUpdateRanksOutput)
}

// PolicySetUpdateRanksArrayInput is an input type that accepts PolicySetUpdateRanksArray and PolicySetUpdateRanksArrayOutput values.
// You can construct a concrete instance of `PolicySetUpdateRanksArrayInput` via:
//
//	PolicySetUpdateRanksArray{ PolicySetUpdateRanksArgs{...} }
type PolicySetUpdateRanksArrayInput interface {
	pulumi.Input

	ToPolicySetUpdateRanksArrayOutput() PolicySetUpdateRanksArrayOutput
	ToPolicySetUpdateRanksArrayOutputWithContext(context.Context) PolicySetUpdateRanksArrayOutput
}

type PolicySetUpdateRanksArray []PolicySetUpdateRanksInput

func (PolicySetUpdateRanksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicySetUpdateRanks)(nil)).Elem()
}

func (i PolicySetUpdateRanksArray) ToPolicySetUpdateRanksArrayOutput() PolicySetUpdateRanksArrayOutput {
	return i.ToPolicySetUpdateRanksArrayOutputWithContext(context.Background())
}

func (i PolicySetUpdateRanksArray) ToPolicySetUpdateRanksArrayOutputWithContext(ctx context.Context) PolicySetUpdateRanksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetUpdateRanksArrayOutput)
}

// PolicySetUpdateRanksMapInput is an input type that accepts PolicySetUpdateRanksMap and PolicySetUpdateRanksMapOutput values.
// You can construct a concrete instance of `PolicySetUpdateRanksMapInput` via:
//
//	PolicySetUpdateRanksMap{ "key": PolicySetUpdateRanksArgs{...} }
type PolicySetUpdateRanksMapInput interface {
	pulumi.Input

	ToPolicySetUpdateRanksMapOutput() PolicySetUpdateRanksMapOutput
	ToPolicySetUpdateRanksMapOutputWithContext(context.Context) PolicySetUpdateRanksMapOutput
}

type PolicySetUpdateRanksMap map[string]PolicySetUpdateRanksInput

func (PolicySetUpdateRanksMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicySetUpdateRanks)(nil)).Elem()
}

func (i PolicySetUpdateRanksMap) ToPolicySetUpdateRanksMapOutput() PolicySetUpdateRanksMapOutput {
	return i.ToPolicySetUpdateRanksMapOutputWithContext(context.Background())
}

func (i PolicySetUpdateRanksMap) ToPolicySetUpdateRanksMapOutputWithContext(ctx context.Context) PolicySetUpdateRanksMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetUpdateRanksMapOutput)
}

type PolicySetUpdateRanksOutput struct{ *pulumi.OutputState }

func (PolicySetUpdateRanksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySetUpdateRanks)(nil)).Elem()
}

func (o PolicySetUpdateRanksOutput) ToPolicySetUpdateRanksOutput() PolicySetUpdateRanksOutput {
	return o
}

func (o PolicySetUpdateRanksOutput) ToPolicySetUpdateRanksOutputWithContext(ctx context.Context) PolicySetUpdateRanksOutput {
	return o
}

func (o PolicySetUpdateRanksOutput) Policies() PolicySetUpdateRanksPolicyArrayOutput {
	return o.ApplyT(func(v *PolicySetUpdateRanks) PolicySetUpdateRanksPolicyArrayOutput { return v.Policies }).(PolicySetUpdateRanksPolicyArrayOutput)
}

type PolicySetUpdateRanksArrayOutput struct{ *pulumi.OutputState }

func (PolicySetUpdateRanksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicySetUpdateRanks)(nil)).Elem()
}

func (o PolicySetUpdateRanksArrayOutput) ToPolicySetUpdateRanksArrayOutput() PolicySetUpdateRanksArrayOutput {
	return o
}

func (o PolicySetUpdateRanksArrayOutput) ToPolicySetUpdateRanksArrayOutputWithContext(ctx context.Context) PolicySetUpdateRanksArrayOutput {
	return o
}

func (o PolicySetUpdateRanksArrayOutput) Index(i pulumi.IntInput) PolicySetUpdateRanksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicySetUpdateRanks {
		return vs[0].([]*PolicySetUpdateRanks)[vs[1].(int)]
	}).(PolicySetUpdateRanksOutput)
}

type PolicySetUpdateRanksMapOutput struct{ *pulumi.OutputState }

func (PolicySetUpdateRanksMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicySetUpdateRanks)(nil)).Elem()
}

func (o PolicySetUpdateRanksMapOutput) ToPolicySetUpdateRanksMapOutput() PolicySetUpdateRanksMapOutput {
	return o
}

func (o PolicySetUpdateRanksMapOutput) ToPolicySetUpdateRanksMapOutputWithContext(ctx context.Context) PolicySetUpdateRanksMapOutput {
	return o
}

func (o PolicySetUpdateRanksMapOutput) MapIndex(k pulumi.StringInput) PolicySetUpdateRanksOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicySetUpdateRanks {
		return vs[0].(map[string]*PolicySetUpdateRanks)[vs[1].(string)]
	}).(PolicySetUpdateRanksOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySetUpdateRanksInput)(nil)).Elem(), &PolicySetUpdateRanks{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySetUpdateRanksArrayInput)(nil)).Elem(), PolicySetUpdateRanksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySetUpdateRanksMapInput)(nil)).Elem(), PolicySetUpdateRanksMap{})
	pulumi.RegisterOutputType(PolicySetUpdateRanksOutput{})
	pulumi.RegisterOutputType(PolicySetUpdateRanksArrayOutput{})
	pulumi.RegisterOutputType(PolicySetUpdateRanksMapOutput{})
}
