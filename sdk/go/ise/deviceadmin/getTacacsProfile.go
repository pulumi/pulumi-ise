// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceadmin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the TACACS Profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/deviceadmin"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := deviceadmin.LookupTacacsProfile(ctx, &deviceadmin.LookupTacacsProfileArgs{
//				Id: pulumi.StringRef("76d24097-41c4-4558-a4d0-a8c07ac08470"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTacacsProfile(ctx *pulumi.Context, args *LookupTacacsProfileArgs, opts ...pulumi.InvokeOption) (*LookupTacacsProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTacacsProfileResult
	err := ctx.Invoke("ise:deviceadmin/getTacacsProfile:getTacacsProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTacacsProfile.
type LookupTacacsProfileArgs struct {
	// The id of the object
	Id *string `pulumi:"id"`
	// The name of the TACACS profile
	Name *string `pulumi:"name"`
}

// A collection of values returned by getTacacsProfile.
type LookupTacacsProfileResult struct {
	// Description
	Description string `pulumi:"description"`
	// The id of the object
	Id string `pulumi:"id"`
	// The name of the TACACS profile
	Name              string                             `pulumi:"name"`
	SessionAttributes []GetTacacsProfileSessionAttribute `pulumi:"sessionAttributes"`
}

func LookupTacacsProfileOutput(ctx *pulumi.Context, args LookupTacacsProfileOutputArgs, opts ...pulumi.InvokeOption) LookupTacacsProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTacacsProfileResultOutput, error) {
			args := v.(LookupTacacsProfileArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupTacacsProfileResult
			secret, err := ctx.InvokePackageRaw("ise:deviceadmin/getTacacsProfile:getTacacsProfile", args, &rv, "", opts...)
			if err != nil {
				return LookupTacacsProfileResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupTacacsProfileResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupTacacsProfileResultOutput), nil
			}
			return output, nil
		}).(LookupTacacsProfileResultOutput)
}

// A collection of arguments for invoking getTacacsProfile.
type LookupTacacsProfileOutputArgs struct {
	// The id of the object
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the TACACS profile
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupTacacsProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTacacsProfileArgs)(nil)).Elem()
}

// A collection of values returned by getTacacsProfile.
type LookupTacacsProfileResultOutput struct{ *pulumi.OutputState }

func (LookupTacacsProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTacacsProfileResult)(nil)).Elem()
}

func (o LookupTacacsProfileResultOutput) ToLookupTacacsProfileResultOutput() LookupTacacsProfileResultOutput {
	return o
}

func (o LookupTacacsProfileResultOutput) ToLookupTacacsProfileResultOutputWithContext(ctx context.Context) LookupTacacsProfileResultOutput {
	return o
}

// Description
func (o LookupTacacsProfileResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTacacsProfileResult) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the object
func (o LookupTacacsProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTacacsProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the TACACS profile
func (o LookupTacacsProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTacacsProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupTacacsProfileResultOutput) SessionAttributes() GetTacacsProfileSessionAttributeArrayOutput {
	return o.ApplyT(func(v LookupTacacsProfileResult) []GetTacacsProfileSessionAttribute { return v.SessionAttributes }).(GetTacacsProfileSessionAttributeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTacacsProfileResultOutput{})
}
