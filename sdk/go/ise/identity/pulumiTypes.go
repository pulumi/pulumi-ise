// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type IdentitySourceSequenceIdentitySource struct {
	// Name of the identity source
	Name string `pulumi:"name"`
	// Order of the identity source in the sequence
	Order int `pulumi:"order"`
}

// IdentitySourceSequenceIdentitySourceInput is an input type that accepts IdentitySourceSequenceIdentitySourceArgs and IdentitySourceSequenceIdentitySourceOutput values.
// You can construct a concrete instance of `IdentitySourceSequenceIdentitySourceInput` via:
//
//	IdentitySourceSequenceIdentitySourceArgs{...}
type IdentitySourceSequenceIdentitySourceInput interface {
	pulumi.Input

	ToIdentitySourceSequenceIdentitySourceOutput() IdentitySourceSequenceIdentitySourceOutput
	ToIdentitySourceSequenceIdentitySourceOutputWithContext(context.Context) IdentitySourceSequenceIdentitySourceOutput
}

type IdentitySourceSequenceIdentitySourceArgs struct {
	// Name of the identity source
	Name pulumi.StringInput `pulumi:"name"`
	// Order of the identity source in the sequence
	Order pulumi.IntInput `pulumi:"order"`
}

func (IdentitySourceSequenceIdentitySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceSequenceIdentitySource)(nil)).Elem()
}

func (i IdentitySourceSequenceIdentitySourceArgs) ToIdentitySourceSequenceIdentitySourceOutput() IdentitySourceSequenceIdentitySourceOutput {
	return i.ToIdentitySourceSequenceIdentitySourceOutputWithContext(context.Background())
}

func (i IdentitySourceSequenceIdentitySourceArgs) ToIdentitySourceSequenceIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceSequenceIdentitySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceSequenceIdentitySourceOutput)
}

// IdentitySourceSequenceIdentitySourceArrayInput is an input type that accepts IdentitySourceSequenceIdentitySourceArray and IdentitySourceSequenceIdentitySourceArrayOutput values.
// You can construct a concrete instance of `IdentitySourceSequenceIdentitySourceArrayInput` via:
//
//	IdentitySourceSequenceIdentitySourceArray{ IdentitySourceSequenceIdentitySourceArgs{...} }
type IdentitySourceSequenceIdentitySourceArrayInput interface {
	pulumi.Input

	ToIdentitySourceSequenceIdentitySourceArrayOutput() IdentitySourceSequenceIdentitySourceArrayOutput
	ToIdentitySourceSequenceIdentitySourceArrayOutputWithContext(context.Context) IdentitySourceSequenceIdentitySourceArrayOutput
}

type IdentitySourceSequenceIdentitySourceArray []IdentitySourceSequenceIdentitySourceInput

func (IdentitySourceSequenceIdentitySourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceSequenceIdentitySource)(nil)).Elem()
}

func (i IdentitySourceSequenceIdentitySourceArray) ToIdentitySourceSequenceIdentitySourceArrayOutput() IdentitySourceSequenceIdentitySourceArrayOutput {
	return i.ToIdentitySourceSequenceIdentitySourceArrayOutputWithContext(context.Background())
}

func (i IdentitySourceSequenceIdentitySourceArray) ToIdentitySourceSequenceIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceSequenceIdentitySourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceSequenceIdentitySourceArrayOutput)
}

type IdentitySourceSequenceIdentitySourceOutput struct{ *pulumi.OutputState }

func (IdentitySourceSequenceIdentitySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceSequenceIdentitySource)(nil)).Elem()
}

func (o IdentitySourceSequenceIdentitySourceOutput) ToIdentitySourceSequenceIdentitySourceOutput() IdentitySourceSequenceIdentitySourceOutput {
	return o
}

func (o IdentitySourceSequenceIdentitySourceOutput) ToIdentitySourceSequenceIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceSequenceIdentitySourceOutput {
	return o
}

// Name of the identity source
func (o IdentitySourceSequenceIdentitySourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentitySourceSequenceIdentitySource) string { return v.Name }).(pulumi.StringOutput)
}

// Order of the identity source in the sequence
func (o IdentitySourceSequenceIdentitySourceOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v IdentitySourceSequenceIdentitySource) int { return v.Order }).(pulumi.IntOutput)
}

type IdentitySourceSequenceIdentitySourceArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceSequenceIdentitySourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceSequenceIdentitySource)(nil)).Elem()
}

func (o IdentitySourceSequenceIdentitySourceArrayOutput) ToIdentitySourceSequenceIdentitySourceArrayOutput() IdentitySourceSequenceIdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceSequenceIdentitySourceArrayOutput) ToIdentitySourceSequenceIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceSequenceIdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceSequenceIdentitySourceArrayOutput) Index(i pulumi.IntInput) IdentitySourceSequenceIdentitySourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySourceSequenceIdentitySource {
		return vs[0].([]IdentitySourceSequenceIdentitySource)[vs[1].(int)]
	}).(IdentitySourceSequenceIdentitySourceOutput)
}

type GetIdentitySourceSequenceIdentitySource struct {
	// Name of the identity source
	Name string `pulumi:"name"`
	// Order of the identity source in the sequence
	Order int `pulumi:"order"`
}

// GetIdentitySourceSequenceIdentitySourceInput is an input type that accepts GetIdentitySourceSequenceIdentitySourceArgs and GetIdentitySourceSequenceIdentitySourceOutput values.
// You can construct a concrete instance of `GetIdentitySourceSequenceIdentitySourceInput` via:
//
//	GetIdentitySourceSequenceIdentitySourceArgs{...}
type GetIdentitySourceSequenceIdentitySourceInput interface {
	pulumi.Input

	ToGetIdentitySourceSequenceIdentitySourceOutput() GetIdentitySourceSequenceIdentitySourceOutput
	ToGetIdentitySourceSequenceIdentitySourceOutputWithContext(context.Context) GetIdentitySourceSequenceIdentitySourceOutput
}

type GetIdentitySourceSequenceIdentitySourceArgs struct {
	// Name of the identity source
	Name pulumi.StringInput `pulumi:"name"`
	// Order of the identity source in the sequence
	Order pulumi.IntInput `pulumi:"order"`
}

func (GetIdentitySourceSequenceIdentitySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitySourceSequenceIdentitySource)(nil)).Elem()
}

func (i GetIdentitySourceSequenceIdentitySourceArgs) ToGetIdentitySourceSequenceIdentitySourceOutput() GetIdentitySourceSequenceIdentitySourceOutput {
	return i.ToGetIdentitySourceSequenceIdentitySourceOutputWithContext(context.Background())
}

func (i GetIdentitySourceSequenceIdentitySourceArgs) ToGetIdentitySourceSequenceIdentitySourceOutputWithContext(ctx context.Context) GetIdentitySourceSequenceIdentitySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentitySourceSequenceIdentitySourceOutput)
}

// GetIdentitySourceSequenceIdentitySourceArrayInput is an input type that accepts GetIdentitySourceSequenceIdentitySourceArray and GetIdentitySourceSequenceIdentitySourceArrayOutput values.
// You can construct a concrete instance of `GetIdentitySourceSequenceIdentitySourceArrayInput` via:
//
//	GetIdentitySourceSequenceIdentitySourceArray{ GetIdentitySourceSequenceIdentitySourceArgs{...} }
type GetIdentitySourceSequenceIdentitySourceArrayInput interface {
	pulumi.Input

	ToGetIdentitySourceSequenceIdentitySourceArrayOutput() GetIdentitySourceSequenceIdentitySourceArrayOutput
	ToGetIdentitySourceSequenceIdentitySourceArrayOutputWithContext(context.Context) GetIdentitySourceSequenceIdentitySourceArrayOutput
}

type GetIdentitySourceSequenceIdentitySourceArray []GetIdentitySourceSequenceIdentitySourceInput

func (GetIdentitySourceSequenceIdentitySourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIdentitySourceSequenceIdentitySource)(nil)).Elem()
}

func (i GetIdentitySourceSequenceIdentitySourceArray) ToGetIdentitySourceSequenceIdentitySourceArrayOutput() GetIdentitySourceSequenceIdentitySourceArrayOutput {
	return i.ToGetIdentitySourceSequenceIdentitySourceArrayOutputWithContext(context.Background())
}

func (i GetIdentitySourceSequenceIdentitySourceArray) ToGetIdentitySourceSequenceIdentitySourceArrayOutputWithContext(ctx context.Context) GetIdentitySourceSequenceIdentitySourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentitySourceSequenceIdentitySourceArrayOutput)
}

type GetIdentitySourceSequenceIdentitySourceOutput struct{ *pulumi.OutputState }

func (GetIdentitySourceSequenceIdentitySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentitySourceSequenceIdentitySource)(nil)).Elem()
}

func (o GetIdentitySourceSequenceIdentitySourceOutput) ToGetIdentitySourceSequenceIdentitySourceOutput() GetIdentitySourceSequenceIdentitySourceOutput {
	return o
}

func (o GetIdentitySourceSequenceIdentitySourceOutput) ToGetIdentitySourceSequenceIdentitySourceOutputWithContext(ctx context.Context) GetIdentitySourceSequenceIdentitySourceOutput {
	return o
}

// Name of the identity source
func (o GetIdentitySourceSequenceIdentitySourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentitySourceSequenceIdentitySource) string { return v.Name }).(pulumi.StringOutput)
}

// Order of the identity source in the sequence
func (o GetIdentitySourceSequenceIdentitySourceOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetIdentitySourceSequenceIdentitySource) int { return v.Order }).(pulumi.IntOutput)
}

type GetIdentitySourceSequenceIdentitySourceArrayOutput struct{ *pulumi.OutputState }

func (GetIdentitySourceSequenceIdentitySourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIdentitySourceSequenceIdentitySource)(nil)).Elem()
}

func (o GetIdentitySourceSequenceIdentitySourceArrayOutput) ToGetIdentitySourceSequenceIdentitySourceArrayOutput() GetIdentitySourceSequenceIdentitySourceArrayOutput {
	return o
}

func (o GetIdentitySourceSequenceIdentitySourceArrayOutput) ToGetIdentitySourceSequenceIdentitySourceArrayOutputWithContext(ctx context.Context) GetIdentitySourceSequenceIdentitySourceArrayOutput {
	return o
}

func (o GetIdentitySourceSequenceIdentitySourceArrayOutput) Index(i pulumi.IntInput) GetIdentitySourceSequenceIdentitySourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIdentitySourceSequenceIdentitySource {
		return vs[0].([]GetIdentitySourceSequenceIdentitySource)[vs[1].(int)]
	}).(GetIdentitySourceSequenceIdentitySourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceSequenceIdentitySourceInput)(nil)).Elem(), IdentitySourceSequenceIdentitySourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceSequenceIdentitySourceArrayInput)(nil)).Elem(), IdentitySourceSequenceIdentitySourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentitySourceSequenceIdentitySourceInput)(nil)).Elem(), GetIdentitySourceSequenceIdentitySourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentitySourceSequenceIdentitySourceArrayInput)(nil)).Elem(), GetIdentitySourceSequenceIdentitySourceArray{})
	pulumi.RegisterOutputType(IdentitySourceSequenceIdentitySourceOutput{})
	pulumi.RegisterOutputType(IdentitySourceSequenceIdentitySourceArrayOutput{})
	pulumi.RegisterOutputType(GetIdentitySourceSequenceIdentitySourceOutput{})
	pulumi.RegisterOutputType(GetIdentitySourceSequenceIdentitySourceArrayOutput{})
}
