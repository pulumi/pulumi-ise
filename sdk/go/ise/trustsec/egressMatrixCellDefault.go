// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package trustsec

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows modifications to the default egress policy matrix rule
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/trustsec"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := trustsec.NewEgressMatrixCellDefault(ctx, "example", &trustsec.EgressMatrixCellDefaultArgs{
//				Description:      pulumi.String("Default egress rule"),
//				DefaultRule:      pulumi.String("PERMIT_IP"),
//				MatrixCellStatus: pulumi.String("ENABLED"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import ise:trustsec/egressMatrixCellDefault:EgressMatrixCellDefault example "92c1a900-8c01-11e6-996c-525400b48521"
// ```
type EgressMatrixCellDefault struct {
	pulumi.CustomResourceState

	// Can be used only if sgacls not specified. Final Catch All Rule - Choices: `NONE`, `DENY_IP`, `PERMIT_IP`
	DefaultRule pulumi.StringPtrOutput `pulumi:"defaultRule"`
	// Description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus pulumi.StringOutput `pulumi:"matrixCellStatus"`
	// List of TrustSec Security Groups ACLs
	Sgacls pulumi.StringArrayOutput `pulumi:"sgacls"`
}

// NewEgressMatrixCellDefault registers a new resource with the given unique name, arguments, and options.
func NewEgressMatrixCellDefault(ctx *pulumi.Context,
	name string, args *EgressMatrixCellDefaultArgs, opts ...pulumi.ResourceOption) (*EgressMatrixCellDefault, error) {
	if args == nil {
		args = &EgressMatrixCellDefaultArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EgressMatrixCellDefault
	err := ctx.RegisterResource("ise:trustsec/egressMatrixCellDefault:EgressMatrixCellDefault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEgressMatrixCellDefault gets an existing EgressMatrixCellDefault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEgressMatrixCellDefault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EgressMatrixCellDefaultState, opts ...pulumi.ResourceOption) (*EgressMatrixCellDefault, error) {
	var resource EgressMatrixCellDefault
	err := ctx.ReadResource("ise:trustsec/egressMatrixCellDefault:EgressMatrixCellDefault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EgressMatrixCellDefault resources.
type egressMatrixCellDefaultState struct {
	// Can be used only if sgacls not specified. Final Catch All Rule - Choices: `NONE`, `DENY_IP`, `PERMIT_IP`
	DefaultRule *string `pulumi:"defaultRule"`
	// Description
	Description *string `pulumi:"description"`
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus *string `pulumi:"matrixCellStatus"`
	// List of TrustSec Security Groups ACLs
	Sgacls []string `pulumi:"sgacls"`
}

type EgressMatrixCellDefaultState struct {
	// Can be used only if sgacls not specified. Final Catch All Rule - Choices: `NONE`, `DENY_IP`, `PERMIT_IP`
	DefaultRule pulumi.StringPtrInput
	// Description
	Description pulumi.StringPtrInput
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus pulumi.StringPtrInput
	// List of TrustSec Security Groups ACLs
	Sgacls pulumi.StringArrayInput
}

func (EgressMatrixCellDefaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*egressMatrixCellDefaultState)(nil)).Elem()
}

type egressMatrixCellDefaultArgs struct {
	// Can be used only if sgacls not specified. Final Catch All Rule - Choices: `NONE`, `DENY_IP`, `PERMIT_IP`
	DefaultRule *string `pulumi:"defaultRule"`
	// Description
	Description *string `pulumi:"description"`
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus *string `pulumi:"matrixCellStatus"`
	// List of TrustSec Security Groups ACLs
	Sgacls []string `pulumi:"sgacls"`
}

// The set of arguments for constructing a EgressMatrixCellDefault resource.
type EgressMatrixCellDefaultArgs struct {
	// Can be used only if sgacls not specified. Final Catch All Rule - Choices: `NONE`, `DENY_IP`, `PERMIT_IP`
	DefaultRule pulumi.StringPtrInput
	// Description
	Description pulumi.StringPtrInput
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus pulumi.StringPtrInput
	// List of TrustSec Security Groups ACLs
	Sgacls pulumi.StringArrayInput
}

func (EgressMatrixCellDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*egressMatrixCellDefaultArgs)(nil)).Elem()
}

type EgressMatrixCellDefaultInput interface {
	pulumi.Input

	ToEgressMatrixCellDefaultOutput() EgressMatrixCellDefaultOutput
	ToEgressMatrixCellDefaultOutputWithContext(ctx context.Context) EgressMatrixCellDefaultOutput
}

func (*EgressMatrixCellDefault) ElementType() reflect.Type {
	return reflect.TypeOf((**EgressMatrixCellDefault)(nil)).Elem()
}

func (i *EgressMatrixCellDefault) ToEgressMatrixCellDefaultOutput() EgressMatrixCellDefaultOutput {
	return i.ToEgressMatrixCellDefaultOutputWithContext(context.Background())
}

func (i *EgressMatrixCellDefault) ToEgressMatrixCellDefaultOutputWithContext(ctx context.Context) EgressMatrixCellDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EgressMatrixCellDefaultOutput)
}

// EgressMatrixCellDefaultArrayInput is an input type that accepts EgressMatrixCellDefaultArray and EgressMatrixCellDefaultArrayOutput values.
// You can construct a concrete instance of `EgressMatrixCellDefaultArrayInput` via:
//
//	EgressMatrixCellDefaultArray{ EgressMatrixCellDefaultArgs{...} }
type EgressMatrixCellDefaultArrayInput interface {
	pulumi.Input

	ToEgressMatrixCellDefaultArrayOutput() EgressMatrixCellDefaultArrayOutput
	ToEgressMatrixCellDefaultArrayOutputWithContext(context.Context) EgressMatrixCellDefaultArrayOutput
}

type EgressMatrixCellDefaultArray []EgressMatrixCellDefaultInput

func (EgressMatrixCellDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EgressMatrixCellDefault)(nil)).Elem()
}

func (i EgressMatrixCellDefaultArray) ToEgressMatrixCellDefaultArrayOutput() EgressMatrixCellDefaultArrayOutput {
	return i.ToEgressMatrixCellDefaultArrayOutputWithContext(context.Background())
}

func (i EgressMatrixCellDefaultArray) ToEgressMatrixCellDefaultArrayOutputWithContext(ctx context.Context) EgressMatrixCellDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EgressMatrixCellDefaultArrayOutput)
}

// EgressMatrixCellDefaultMapInput is an input type that accepts EgressMatrixCellDefaultMap and EgressMatrixCellDefaultMapOutput values.
// You can construct a concrete instance of `EgressMatrixCellDefaultMapInput` via:
//
//	EgressMatrixCellDefaultMap{ "key": EgressMatrixCellDefaultArgs{...} }
type EgressMatrixCellDefaultMapInput interface {
	pulumi.Input

	ToEgressMatrixCellDefaultMapOutput() EgressMatrixCellDefaultMapOutput
	ToEgressMatrixCellDefaultMapOutputWithContext(context.Context) EgressMatrixCellDefaultMapOutput
}

type EgressMatrixCellDefaultMap map[string]EgressMatrixCellDefaultInput

func (EgressMatrixCellDefaultMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EgressMatrixCellDefault)(nil)).Elem()
}

func (i EgressMatrixCellDefaultMap) ToEgressMatrixCellDefaultMapOutput() EgressMatrixCellDefaultMapOutput {
	return i.ToEgressMatrixCellDefaultMapOutputWithContext(context.Background())
}

func (i EgressMatrixCellDefaultMap) ToEgressMatrixCellDefaultMapOutputWithContext(ctx context.Context) EgressMatrixCellDefaultMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EgressMatrixCellDefaultMapOutput)
}

type EgressMatrixCellDefaultOutput struct{ *pulumi.OutputState }

func (EgressMatrixCellDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EgressMatrixCellDefault)(nil)).Elem()
}

func (o EgressMatrixCellDefaultOutput) ToEgressMatrixCellDefaultOutput() EgressMatrixCellDefaultOutput {
	return o
}

func (o EgressMatrixCellDefaultOutput) ToEgressMatrixCellDefaultOutputWithContext(ctx context.Context) EgressMatrixCellDefaultOutput {
	return o
}

// Can be used only if sgacls not specified. Final Catch All Rule - Choices: `NONE`, `DENY_IP`, `PERMIT_IP`
func (o EgressMatrixCellDefaultOutput) DefaultRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EgressMatrixCellDefault) pulumi.StringPtrOutput { return v.DefaultRule }).(pulumi.StringPtrOutput)
}

// Description
func (o EgressMatrixCellDefaultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EgressMatrixCellDefault) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
func (o EgressMatrixCellDefaultOutput) MatrixCellStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *EgressMatrixCellDefault) pulumi.StringOutput { return v.MatrixCellStatus }).(pulumi.StringOutput)
}

// List of TrustSec Security Groups ACLs
func (o EgressMatrixCellDefaultOutput) Sgacls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EgressMatrixCellDefault) pulumi.StringArrayOutput { return v.Sgacls }).(pulumi.StringArrayOutput)
}

type EgressMatrixCellDefaultArrayOutput struct{ *pulumi.OutputState }

func (EgressMatrixCellDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EgressMatrixCellDefault)(nil)).Elem()
}

func (o EgressMatrixCellDefaultArrayOutput) ToEgressMatrixCellDefaultArrayOutput() EgressMatrixCellDefaultArrayOutput {
	return o
}

func (o EgressMatrixCellDefaultArrayOutput) ToEgressMatrixCellDefaultArrayOutputWithContext(ctx context.Context) EgressMatrixCellDefaultArrayOutput {
	return o
}

func (o EgressMatrixCellDefaultArrayOutput) Index(i pulumi.IntInput) EgressMatrixCellDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EgressMatrixCellDefault {
		return vs[0].([]*EgressMatrixCellDefault)[vs[1].(int)]
	}).(EgressMatrixCellDefaultOutput)
}

type EgressMatrixCellDefaultMapOutput struct{ *pulumi.OutputState }

func (EgressMatrixCellDefaultMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EgressMatrixCellDefault)(nil)).Elem()
}

func (o EgressMatrixCellDefaultMapOutput) ToEgressMatrixCellDefaultMapOutput() EgressMatrixCellDefaultMapOutput {
	return o
}

func (o EgressMatrixCellDefaultMapOutput) ToEgressMatrixCellDefaultMapOutputWithContext(ctx context.Context) EgressMatrixCellDefaultMapOutput {
	return o
}

func (o EgressMatrixCellDefaultMapOutput) MapIndex(k pulumi.StringInput) EgressMatrixCellDefaultOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EgressMatrixCellDefault {
		return vs[0].(map[string]*EgressMatrixCellDefault)[vs[1].(string)]
	}).(EgressMatrixCellDefaultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EgressMatrixCellDefaultInput)(nil)).Elem(), &EgressMatrixCellDefault{})
	pulumi.RegisterInputType(reflect.TypeOf((*EgressMatrixCellDefaultArrayInput)(nil)).Elem(), EgressMatrixCellDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EgressMatrixCellDefaultMapInput)(nil)).Elem(), EgressMatrixCellDefaultMap{})
	pulumi.RegisterOutputType(EgressMatrixCellDefaultOutput{})
	pulumi.RegisterOutputType(EgressMatrixCellDefaultArrayOutput{})
	pulumi.RegisterOutputType(EgressMatrixCellDefaultMapOutput{})
}
