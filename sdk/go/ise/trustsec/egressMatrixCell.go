// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package trustsec

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a TrustSec Egress Matrix Cell.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/trustsec"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := trustsec.NewEgressMatrixCell(ctx, "example", &trustsec.EgressMatrixCellArgs{
//				Description:      pulumi.String("EgressMatrixCell Description"),
//				DefaultRule:      pulumi.String("NONE"),
//				MatrixCellStatus: pulumi.String("ENABLED"),
//				Sgacls: pulumi.StringArray{
//					pulumi.String("26b76b10-66e6-11ee-9cc1-9eb2a3ecc82a, 9d64dcd0-6384-11ee-9cc1-9eb2a3ecc82a"),
//				},
//				SourceSgtId:      pulumi.String("93c66ed0-8c01-11e6-996c-525400b48521"),
//				DestinationSgtId: pulumi.String("93e1bf00-8c01-11e6-996c-525400b48521"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import ise:trustsec/egressMatrixCell:EgressMatrixCell example "76d24097-41c4-4558-a4d0-a8c07ac08470"
// ```
type EgressMatrixCell struct {
	pulumi.CustomResourceState

	// Can be used only if sgacls not specified. - Choices: `NONE`, `DENY_IP`, `PERMIT_IP` - Default value: `NONE`
	DefaultRule pulumi.StringOutput `pulumi:"defaultRule"`
	// Description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Destination Trustsec Security Group ID
	DestinationSgtId pulumi.StringOutput `pulumi:"destinationSgtId"`
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus pulumi.StringOutput `pulumi:"matrixCellStatus"`
	// List of TrustSec Security Groups ACLs
	Sgacls pulumi.StringArrayOutput `pulumi:"sgacls"`
	// Source Trustsec Security Group ID
	SourceSgtId pulumi.StringOutput `pulumi:"sourceSgtId"`
}

// NewEgressMatrixCell registers a new resource with the given unique name, arguments, and options.
func NewEgressMatrixCell(ctx *pulumi.Context,
	name string, args *EgressMatrixCellArgs, opts ...pulumi.ResourceOption) (*EgressMatrixCell, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationSgtId == nil {
		return nil, errors.New("invalid value for required argument 'DestinationSgtId'")
	}
	if args.SourceSgtId == nil {
		return nil, errors.New("invalid value for required argument 'SourceSgtId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EgressMatrixCell
	err := ctx.RegisterResource("ise:trustsec/egressMatrixCell:EgressMatrixCell", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEgressMatrixCell gets an existing EgressMatrixCell resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEgressMatrixCell(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EgressMatrixCellState, opts ...pulumi.ResourceOption) (*EgressMatrixCell, error) {
	var resource EgressMatrixCell
	err := ctx.ReadResource("ise:trustsec/egressMatrixCell:EgressMatrixCell", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EgressMatrixCell resources.
type egressMatrixCellState struct {
	// Can be used only if sgacls not specified. - Choices: `NONE`, `DENY_IP`, `PERMIT_IP` - Default value: `NONE`
	DefaultRule *string `pulumi:"defaultRule"`
	// Description
	Description *string `pulumi:"description"`
	// Destination Trustsec Security Group ID
	DestinationSgtId *string `pulumi:"destinationSgtId"`
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus *string `pulumi:"matrixCellStatus"`
	// List of TrustSec Security Groups ACLs
	Sgacls []string `pulumi:"sgacls"`
	// Source Trustsec Security Group ID
	SourceSgtId *string `pulumi:"sourceSgtId"`
}

type EgressMatrixCellState struct {
	// Can be used only if sgacls not specified. - Choices: `NONE`, `DENY_IP`, `PERMIT_IP` - Default value: `NONE`
	DefaultRule pulumi.StringPtrInput
	// Description
	Description pulumi.StringPtrInput
	// Destination Trustsec Security Group ID
	DestinationSgtId pulumi.StringPtrInput
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus pulumi.StringPtrInput
	// List of TrustSec Security Groups ACLs
	Sgacls pulumi.StringArrayInput
	// Source Trustsec Security Group ID
	SourceSgtId pulumi.StringPtrInput
}

func (EgressMatrixCellState) ElementType() reflect.Type {
	return reflect.TypeOf((*egressMatrixCellState)(nil)).Elem()
}

type egressMatrixCellArgs struct {
	// Can be used only if sgacls not specified. - Choices: `NONE`, `DENY_IP`, `PERMIT_IP` - Default value: `NONE`
	DefaultRule *string `pulumi:"defaultRule"`
	// Description
	Description *string `pulumi:"description"`
	// Destination Trustsec Security Group ID
	DestinationSgtId string `pulumi:"destinationSgtId"`
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus *string `pulumi:"matrixCellStatus"`
	// List of TrustSec Security Groups ACLs
	Sgacls []string `pulumi:"sgacls"`
	// Source Trustsec Security Group ID
	SourceSgtId string `pulumi:"sourceSgtId"`
}

// The set of arguments for constructing a EgressMatrixCell resource.
type EgressMatrixCellArgs struct {
	// Can be used only if sgacls not specified. - Choices: `NONE`, `DENY_IP`, `PERMIT_IP` - Default value: `NONE`
	DefaultRule pulumi.StringPtrInput
	// Description
	Description pulumi.StringPtrInput
	// Destination Trustsec Security Group ID
	DestinationSgtId pulumi.StringInput
	// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
	MatrixCellStatus pulumi.StringPtrInput
	// List of TrustSec Security Groups ACLs
	Sgacls pulumi.StringArrayInput
	// Source Trustsec Security Group ID
	SourceSgtId pulumi.StringInput
}

func (EgressMatrixCellArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*egressMatrixCellArgs)(nil)).Elem()
}

type EgressMatrixCellInput interface {
	pulumi.Input

	ToEgressMatrixCellOutput() EgressMatrixCellOutput
	ToEgressMatrixCellOutputWithContext(ctx context.Context) EgressMatrixCellOutput
}

func (*EgressMatrixCell) ElementType() reflect.Type {
	return reflect.TypeOf((**EgressMatrixCell)(nil)).Elem()
}

func (i *EgressMatrixCell) ToEgressMatrixCellOutput() EgressMatrixCellOutput {
	return i.ToEgressMatrixCellOutputWithContext(context.Background())
}

func (i *EgressMatrixCell) ToEgressMatrixCellOutputWithContext(ctx context.Context) EgressMatrixCellOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EgressMatrixCellOutput)
}

// EgressMatrixCellArrayInput is an input type that accepts EgressMatrixCellArray and EgressMatrixCellArrayOutput values.
// You can construct a concrete instance of `EgressMatrixCellArrayInput` via:
//
//	EgressMatrixCellArray{ EgressMatrixCellArgs{...} }
type EgressMatrixCellArrayInput interface {
	pulumi.Input

	ToEgressMatrixCellArrayOutput() EgressMatrixCellArrayOutput
	ToEgressMatrixCellArrayOutputWithContext(context.Context) EgressMatrixCellArrayOutput
}

type EgressMatrixCellArray []EgressMatrixCellInput

func (EgressMatrixCellArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EgressMatrixCell)(nil)).Elem()
}

func (i EgressMatrixCellArray) ToEgressMatrixCellArrayOutput() EgressMatrixCellArrayOutput {
	return i.ToEgressMatrixCellArrayOutputWithContext(context.Background())
}

func (i EgressMatrixCellArray) ToEgressMatrixCellArrayOutputWithContext(ctx context.Context) EgressMatrixCellArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EgressMatrixCellArrayOutput)
}

// EgressMatrixCellMapInput is an input type that accepts EgressMatrixCellMap and EgressMatrixCellMapOutput values.
// You can construct a concrete instance of `EgressMatrixCellMapInput` via:
//
//	EgressMatrixCellMap{ "key": EgressMatrixCellArgs{...} }
type EgressMatrixCellMapInput interface {
	pulumi.Input

	ToEgressMatrixCellMapOutput() EgressMatrixCellMapOutput
	ToEgressMatrixCellMapOutputWithContext(context.Context) EgressMatrixCellMapOutput
}

type EgressMatrixCellMap map[string]EgressMatrixCellInput

func (EgressMatrixCellMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EgressMatrixCell)(nil)).Elem()
}

func (i EgressMatrixCellMap) ToEgressMatrixCellMapOutput() EgressMatrixCellMapOutput {
	return i.ToEgressMatrixCellMapOutputWithContext(context.Background())
}

func (i EgressMatrixCellMap) ToEgressMatrixCellMapOutputWithContext(ctx context.Context) EgressMatrixCellMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EgressMatrixCellMapOutput)
}

type EgressMatrixCellOutput struct{ *pulumi.OutputState }

func (EgressMatrixCellOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EgressMatrixCell)(nil)).Elem()
}

func (o EgressMatrixCellOutput) ToEgressMatrixCellOutput() EgressMatrixCellOutput {
	return o
}

func (o EgressMatrixCellOutput) ToEgressMatrixCellOutputWithContext(ctx context.Context) EgressMatrixCellOutput {
	return o
}

// Can be used only if sgacls not specified. - Choices: `NONE`, `DENY_IP`, `PERMIT_IP` - Default value: `NONE`
func (o EgressMatrixCellOutput) DefaultRule() pulumi.StringOutput {
	return o.ApplyT(func(v *EgressMatrixCell) pulumi.StringOutput { return v.DefaultRule }).(pulumi.StringOutput)
}

// Description
func (o EgressMatrixCellOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EgressMatrixCell) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Destination Trustsec Security Group ID
func (o EgressMatrixCellOutput) DestinationSgtId() pulumi.StringOutput {
	return o.ApplyT(func(v *EgressMatrixCell) pulumi.StringOutput { return v.DestinationSgtId }).(pulumi.StringOutput)
}

// Matrix Cell Status - Choices: `DISABLED`, `ENABLED`, `MONITOR` - Default value: `DISABLED`
func (o EgressMatrixCellOutput) MatrixCellStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *EgressMatrixCell) pulumi.StringOutput { return v.MatrixCellStatus }).(pulumi.StringOutput)
}

// List of TrustSec Security Groups ACLs
func (o EgressMatrixCellOutput) Sgacls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EgressMatrixCell) pulumi.StringArrayOutput { return v.Sgacls }).(pulumi.StringArrayOutput)
}

// Source Trustsec Security Group ID
func (o EgressMatrixCellOutput) SourceSgtId() pulumi.StringOutput {
	return o.ApplyT(func(v *EgressMatrixCell) pulumi.StringOutput { return v.SourceSgtId }).(pulumi.StringOutput)
}

type EgressMatrixCellArrayOutput struct{ *pulumi.OutputState }

func (EgressMatrixCellArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EgressMatrixCell)(nil)).Elem()
}

func (o EgressMatrixCellArrayOutput) ToEgressMatrixCellArrayOutput() EgressMatrixCellArrayOutput {
	return o
}

func (o EgressMatrixCellArrayOutput) ToEgressMatrixCellArrayOutputWithContext(ctx context.Context) EgressMatrixCellArrayOutput {
	return o
}

func (o EgressMatrixCellArrayOutput) Index(i pulumi.IntInput) EgressMatrixCellOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EgressMatrixCell {
		return vs[0].([]*EgressMatrixCell)[vs[1].(int)]
	}).(EgressMatrixCellOutput)
}

type EgressMatrixCellMapOutput struct{ *pulumi.OutputState }

func (EgressMatrixCellMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EgressMatrixCell)(nil)).Elem()
}

func (o EgressMatrixCellMapOutput) ToEgressMatrixCellMapOutput() EgressMatrixCellMapOutput {
	return o
}

func (o EgressMatrixCellMapOutput) ToEgressMatrixCellMapOutputWithContext(ctx context.Context) EgressMatrixCellMapOutput {
	return o
}

func (o EgressMatrixCellMapOutput) MapIndex(k pulumi.StringInput) EgressMatrixCellOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EgressMatrixCell {
		return vs[0].(map[string]*EgressMatrixCell)[vs[1].(string)]
	}).(EgressMatrixCellOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EgressMatrixCellInput)(nil)).Elem(), &EgressMatrixCell{})
	pulumi.RegisterInputType(reflect.TypeOf((*EgressMatrixCellArrayInput)(nil)).Elem(), EgressMatrixCellArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EgressMatrixCellMapInput)(nil)).Elem(), EgressMatrixCellMap{})
	pulumi.RegisterOutputType(EgressMatrixCellOutput{})
	pulumi.RegisterOutputType(EgressMatrixCellArrayOutput{})
	pulumi.RegisterOutputType(EgressMatrixCellMapOutput{})
}
