// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package trustsec

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "ise:trustsec/egressMatrixCell:EgressMatrixCell":
		r = &EgressMatrixCell{}
	case "ise:trustsec/ipToSgtMapping:IpToSgtMapping":
		r = &IpToSgtMapping{}
	case "ise:trustsec/ipToSgtMappingGroup:IpToSgtMappingGroup":
		r = &IpToSgtMappingGroup{}
	case "ise:trustsec/securityGroup:SecurityGroup":
		r = &SecurityGroup{}
	case "ise:trustsec/securityGroupAcl:SecurityGroupAcl":
		r = &SecurityGroupAcl{}
	case "ise:trustsec/sxpDomainFilter:SxpDomainFilter":
		r = &SxpDomainFilter{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"ise",
		"trustsec/egressMatrixCell",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ise",
		"trustsec/ipToSgtMapping",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ise",
		"trustsec/ipToSgtMappingGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ise",
		"trustsec/securityGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ise",
		"trustsec/securityGroupAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ise",
		"trustsec/sxpDomainFilter",
		&module{version},
	)
}
