// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identitymanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the User Identity Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/identitymanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := identitymanagement.LookupUserIdentityGroup(ctx, &identitymanagement.LookupUserIdentityGroupArgs{
//				Id: pulumi.StringRef("76d24097-41c4-4558-a4d0-a8c07ac08470"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupUserIdentityGroup(ctx *pulumi.Context, args *LookupUserIdentityGroupArgs, opts ...pulumi.InvokeOption) (*LookupUserIdentityGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserIdentityGroupResult
	err := ctx.Invoke("ise:identitymanagement/getUserIdentityGroup:getUserIdentityGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserIdentityGroup.
type LookupUserIdentityGroupArgs struct {
	// The id of the object
	Id *string `pulumi:"id"`
	// The name of the user identity group
	Name *string `pulumi:"name"`
}

// A collection of values returned by getUserIdentityGroup.
type LookupUserIdentityGroupResult struct {
	// Description
	Description string `pulumi:"description"`
	// The id of the object
	Id string `pulumi:"id"`
	// The name of the user identity group
	Name string `pulumi:"name"`
	// Parent user identity group, e.g. `NAC Group:NAC:IdentityGroups:User Identity Groups`
	Parent string `pulumi:"parent"`
}

func LookupUserIdentityGroupOutput(ctx *pulumi.Context, args LookupUserIdentityGroupOutputArgs, opts ...pulumi.InvokeOption) LookupUserIdentityGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserIdentityGroupResultOutput, error) {
			args := v.(LookupUserIdentityGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ise:identitymanagement/getUserIdentityGroup:getUserIdentityGroup", args, LookupUserIdentityGroupResultOutput{}, options).(LookupUserIdentityGroupResultOutput), nil
		}).(LookupUserIdentityGroupResultOutput)
}

// A collection of arguments for invoking getUserIdentityGroup.
type LookupUserIdentityGroupOutputArgs struct {
	// The id of the object
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user identity group
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupUserIdentityGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserIdentityGroupArgs)(nil)).Elem()
}

// A collection of values returned by getUserIdentityGroup.
type LookupUserIdentityGroupResultOutput struct{ *pulumi.OutputState }

func (LookupUserIdentityGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserIdentityGroupResult)(nil)).Elem()
}

func (o LookupUserIdentityGroupResultOutput) ToLookupUserIdentityGroupResultOutput() LookupUserIdentityGroupResultOutput {
	return o
}

func (o LookupUserIdentityGroupResultOutput) ToLookupUserIdentityGroupResultOutputWithContext(ctx context.Context) LookupUserIdentityGroupResultOutput {
	return o
}

// Description
func (o LookupUserIdentityGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserIdentityGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the object
func (o LookupUserIdentityGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserIdentityGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the user identity group
func (o LookupUserIdentityGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserIdentityGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Parent user identity group, e.g. `NAC Group:NAC:IdentityGroups:User Identity Groups`
func (o LookupUserIdentityGroupResultOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserIdentityGroupResult) string { return v.Parent }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserIdentityGroupResultOutput{})
}
