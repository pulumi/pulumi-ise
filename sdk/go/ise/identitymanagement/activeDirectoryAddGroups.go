// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identitymanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage an Active Directory Add Groups.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/identitymanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := identitymanagement.NewActiveDirectoryAddGroups(ctx, "example", &identitymanagement.ActiveDirectoryAddGroupsArgs{
//				JoinPointId:             pulumi.String("73808580-b6e6-11ee-8960-de6d7692bc40"),
//				Name:                    pulumi.String("cisco.local"),
//				Description:             pulumi.String("My AD join point"),
//				Domain:                  pulumi.String("cisco.local"),
//				AdScopesNames:           pulumi.String("Default_Scope"),
//				EnableDomainAllowedList: pulumi.Bool(true),
//				Groups: identitymanagement.ActiveDirectoryAddGroupsGroupArray{
//					&identitymanagement.ActiveDirectoryAddGroupsGroupArgs{
//						Name: pulumi.String("cisco.local/operators"),
//						Sid:  pulumi.String("S-1-5-32-548"),
//						Type: pulumi.String("GLOBAL"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ActiveDirectoryAddGroups struct {
	pulumi.CustomResourceState

	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames pulumi.StringOutput `pulumi:"adScopesNames"`
	// Join point Description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// AD domain associated with the join point
	Domain pulumi.StringOutput `pulumi:"domain"`
	// - Default value: `true`
	EnableDomainAllowedList pulumi.BoolOutput `pulumi:"enableDomainAllowedList"`
	// List of AD Groups
	Groups ActiveDirectoryAddGroupsGroupArrayOutput `pulumi:"groups"`
	// Active Directory Join Point ID
	JoinPointId pulumi.StringOutput `pulumi:"joinPointId"`
	// The name of the active directory join point
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewActiveDirectoryAddGroups registers a new resource with the given unique name, arguments, and options.
func NewActiveDirectoryAddGroups(ctx *pulumi.Context,
	name string, args *ActiveDirectoryAddGroupsArgs, opts ...pulumi.ResourceOption) (*ActiveDirectoryAddGroups, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.JoinPointId == nil {
		return nil, errors.New("invalid value for required argument 'JoinPointId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ActiveDirectoryAddGroups
	err := ctx.RegisterResource("ise:identitymanagement/activeDirectoryAddGroups:ActiveDirectoryAddGroups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActiveDirectoryAddGroups gets an existing ActiveDirectoryAddGroups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActiveDirectoryAddGroups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActiveDirectoryAddGroupsState, opts ...pulumi.ResourceOption) (*ActiveDirectoryAddGroups, error) {
	var resource ActiveDirectoryAddGroups
	err := ctx.ReadResource("ise:identitymanagement/activeDirectoryAddGroups:ActiveDirectoryAddGroups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ActiveDirectoryAddGroups resources.
type activeDirectoryAddGroupsState struct {
	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames *string `pulumi:"adScopesNames"`
	// Join point Description
	Description *string `pulumi:"description"`
	// AD domain associated with the join point
	Domain *string `pulumi:"domain"`
	// - Default value: `true`
	EnableDomainAllowedList *bool `pulumi:"enableDomainAllowedList"`
	// List of AD Groups
	Groups []ActiveDirectoryAddGroupsGroup `pulumi:"groups"`
	// Active Directory Join Point ID
	JoinPointId *string `pulumi:"joinPointId"`
	// The name of the active directory join point
	Name *string `pulumi:"name"`
}

type ActiveDirectoryAddGroupsState struct {
	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames pulumi.StringPtrInput
	// Join point Description
	Description pulumi.StringPtrInput
	// AD domain associated with the join point
	Domain pulumi.StringPtrInput
	// - Default value: `true`
	EnableDomainAllowedList pulumi.BoolPtrInput
	// List of AD Groups
	Groups ActiveDirectoryAddGroupsGroupArrayInput
	// Active Directory Join Point ID
	JoinPointId pulumi.StringPtrInput
	// The name of the active directory join point
	Name pulumi.StringPtrInput
}

func (ActiveDirectoryAddGroupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*activeDirectoryAddGroupsState)(nil)).Elem()
}

type activeDirectoryAddGroupsArgs struct {
	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames *string `pulumi:"adScopesNames"`
	// Join point Description
	Description *string `pulumi:"description"`
	// AD domain associated with the join point
	Domain string `pulumi:"domain"`
	// - Default value: `true`
	EnableDomainAllowedList *bool `pulumi:"enableDomainAllowedList"`
	// List of AD Groups
	Groups []ActiveDirectoryAddGroupsGroup `pulumi:"groups"`
	// Active Directory Join Point ID
	JoinPointId string `pulumi:"joinPointId"`
	// The name of the active directory join point
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ActiveDirectoryAddGroups resource.
type ActiveDirectoryAddGroupsArgs struct {
	// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
	// value: `Default_Scope`
	AdScopesNames pulumi.StringPtrInput
	// Join point Description
	Description pulumi.StringPtrInput
	// AD domain associated with the join point
	Domain pulumi.StringInput
	// - Default value: `true`
	EnableDomainAllowedList pulumi.BoolPtrInput
	// List of AD Groups
	Groups ActiveDirectoryAddGroupsGroupArrayInput
	// Active Directory Join Point ID
	JoinPointId pulumi.StringInput
	// The name of the active directory join point
	Name pulumi.StringPtrInput
}

func (ActiveDirectoryAddGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*activeDirectoryAddGroupsArgs)(nil)).Elem()
}

type ActiveDirectoryAddGroupsInput interface {
	pulumi.Input

	ToActiveDirectoryAddGroupsOutput() ActiveDirectoryAddGroupsOutput
	ToActiveDirectoryAddGroupsOutputWithContext(ctx context.Context) ActiveDirectoryAddGroupsOutput
}

func (*ActiveDirectoryAddGroups) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryAddGroups)(nil)).Elem()
}

func (i *ActiveDirectoryAddGroups) ToActiveDirectoryAddGroupsOutput() ActiveDirectoryAddGroupsOutput {
	return i.ToActiveDirectoryAddGroupsOutputWithContext(context.Background())
}

func (i *ActiveDirectoryAddGroups) ToActiveDirectoryAddGroupsOutputWithContext(ctx context.Context) ActiveDirectoryAddGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryAddGroupsOutput)
}

// ActiveDirectoryAddGroupsArrayInput is an input type that accepts ActiveDirectoryAddGroupsArray and ActiveDirectoryAddGroupsArrayOutput values.
// You can construct a concrete instance of `ActiveDirectoryAddGroupsArrayInput` via:
//
//	ActiveDirectoryAddGroupsArray{ ActiveDirectoryAddGroupsArgs{...} }
type ActiveDirectoryAddGroupsArrayInput interface {
	pulumi.Input

	ToActiveDirectoryAddGroupsArrayOutput() ActiveDirectoryAddGroupsArrayOutput
	ToActiveDirectoryAddGroupsArrayOutputWithContext(context.Context) ActiveDirectoryAddGroupsArrayOutput
}

type ActiveDirectoryAddGroupsArray []ActiveDirectoryAddGroupsInput

func (ActiveDirectoryAddGroupsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ActiveDirectoryAddGroups)(nil)).Elem()
}

func (i ActiveDirectoryAddGroupsArray) ToActiveDirectoryAddGroupsArrayOutput() ActiveDirectoryAddGroupsArrayOutput {
	return i.ToActiveDirectoryAddGroupsArrayOutputWithContext(context.Background())
}

func (i ActiveDirectoryAddGroupsArray) ToActiveDirectoryAddGroupsArrayOutputWithContext(ctx context.Context) ActiveDirectoryAddGroupsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryAddGroupsArrayOutput)
}

// ActiveDirectoryAddGroupsMapInput is an input type that accepts ActiveDirectoryAddGroupsMap and ActiveDirectoryAddGroupsMapOutput values.
// You can construct a concrete instance of `ActiveDirectoryAddGroupsMapInput` via:
//
//	ActiveDirectoryAddGroupsMap{ "key": ActiveDirectoryAddGroupsArgs{...} }
type ActiveDirectoryAddGroupsMapInput interface {
	pulumi.Input

	ToActiveDirectoryAddGroupsMapOutput() ActiveDirectoryAddGroupsMapOutput
	ToActiveDirectoryAddGroupsMapOutputWithContext(context.Context) ActiveDirectoryAddGroupsMapOutput
}

type ActiveDirectoryAddGroupsMap map[string]ActiveDirectoryAddGroupsInput

func (ActiveDirectoryAddGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ActiveDirectoryAddGroups)(nil)).Elem()
}

func (i ActiveDirectoryAddGroupsMap) ToActiveDirectoryAddGroupsMapOutput() ActiveDirectoryAddGroupsMapOutput {
	return i.ToActiveDirectoryAddGroupsMapOutputWithContext(context.Background())
}

func (i ActiveDirectoryAddGroupsMap) ToActiveDirectoryAddGroupsMapOutputWithContext(ctx context.Context) ActiveDirectoryAddGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryAddGroupsMapOutput)
}

type ActiveDirectoryAddGroupsOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryAddGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryAddGroups)(nil)).Elem()
}

func (o ActiveDirectoryAddGroupsOutput) ToActiveDirectoryAddGroupsOutput() ActiveDirectoryAddGroupsOutput {
	return o
}

func (o ActiveDirectoryAddGroupsOutput) ToActiveDirectoryAddGroupsOutputWithContext(ctx context.Context) ActiveDirectoryAddGroupsOutput {
	return o
}

// String that contains the names of the scopes that the active directory belongs to. Names are separated by comm - Default
// value: `Default_Scope`
func (o ActiveDirectoryAddGroupsOutput) AdScopesNames() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryAddGroups) pulumi.StringOutput { return v.AdScopesNames }).(pulumi.StringOutput)
}

// Join point Description
func (o ActiveDirectoryAddGroupsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryAddGroups) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// AD domain associated with the join point
func (o ActiveDirectoryAddGroupsOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryAddGroups) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// - Default value: `true`
func (o ActiveDirectoryAddGroupsOutput) EnableDomainAllowedList() pulumi.BoolOutput {
	return o.ApplyT(func(v *ActiveDirectoryAddGroups) pulumi.BoolOutput { return v.EnableDomainAllowedList }).(pulumi.BoolOutput)
}

// List of AD Groups
func (o ActiveDirectoryAddGroupsOutput) Groups() ActiveDirectoryAddGroupsGroupArrayOutput {
	return o.ApplyT(func(v *ActiveDirectoryAddGroups) ActiveDirectoryAddGroupsGroupArrayOutput { return v.Groups }).(ActiveDirectoryAddGroupsGroupArrayOutput)
}

// Active Directory Join Point ID
func (o ActiveDirectoryAddGroupsOutput) JoinPointId() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryAddGroups) pulumi.StringOutput { return v.JoinPointId }).(pulumi.StringOutput)
}

// The name of the active directory join point
func (o ActiveDirectoryAddGroupsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryAddGroups) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ActiveDirectoryAddGroupsArrayOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryAddGroupsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ActiveDirectoryAddGroups)(nil)).Elem()
}

func (o ActiveDirectoryAddGroupsArrayOutput) ToActiveDirectoryAddGroupsArrayOutput() ActiveDirectoryAddGroupsArrayOutput {
	return o
}

func (o ActiveDirectoryAddGroupsArrayOutput) ToActiveDirectoryAddGroupsArrayOutputWithContext(ctx context.Context) ActiveDirectoryAddGroupsArrayOutput {
	return o
}

func (o ActiveDirectoryAddGroupsArrayOutput) Index(i pulumi.IntInput) ActiveDirectoryAddGroupsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ActiveDirectoryAddGroups {
		return vs[0].([]*ActiveDirectoryAddGroups)[vs[1].(int)]
	}).(ActiveDirectoryAddGroupsOutput)
}

type ActiveDirectoryAddGroupsMapOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryAddGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ActiveDirectoryAddGroups)(nil)).Elem()
}

func (o ActiveDirectoryAddGroupsMapOutput) ToActiveDirectoryAddGroupsMapOutput() ActiveDirectoryAddGroupsMapOutput {
	return o
}

func (o ActiveDirectoryAddGroupsMapOutput) ToActiveDirectoryAddGroupsMapOutputWithContext(ctx context.Context) ActiveDirectoryAddGroupsMapOutput {
	return o
}

func (o ActiveDirectoryAddGroupsMapOutput) MapIndex(k pulumi.StringInput) ActiveDirectoryAddGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ActiveDirectoryAddGroups {
		return vs[0].(map[string]*ActiveDirectoryAddGroups)[vs[1].(string)]
	}).(ActiveDirectoryAddGroupsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveDirectoryAddGroupsInput)(nil)).Elem(), &ActiveDirectoryAddGroups{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveDirectoryAddGroupsArrayInput)(nil)).Elem(), ActiveDirectoryAddGroupsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveDirectoryAddGroupsMapInput)(nil)).Elem(), ActiveDirectoryAddGroupsMap{})
	pulumi.RegisterOutputType(ActiveDirectoryAddGroupsOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryAddGroupsArrayOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryAddGroupsMapOutput{})
}
