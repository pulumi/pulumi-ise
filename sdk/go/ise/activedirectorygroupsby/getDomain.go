// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package activedirectorygroupsby

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ise/sdk/go/ise/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Active Directory Groups By Domain.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ise/sdk/go/ise/ActiveDirectoryGroupsBy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ActiveDirectoryGroupsBy.GetDomain(ctx, &activedirectorygroupsby.GetDomainArgs{
//				JoinPointId: "73808580-b6e6-11ee-8960-de6d7692bc40",
//				Domain:      "cisco.com",
//				Filter:      pulumi.StringRef("CN=ISE Admins"),
//				SidFilter:   pulumi.StringRef("cisco.com/S-1-5-33-544"),
//				TypeFilter:  pulumi.StringRef("UNIVERSAL"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDomain(ctx *pulumi.Context, args *GetDomainArgs, opts ...pulumi.InvokeOption) (*GetDomainResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainResult
	err := ctx.Invoke("ise:ActiveDirectoryGroupsBy/getDomain:getDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomain.
type GetDomainArgs struct {
	// The domain whose groups we want to fetch
	Domain string `pulumi:"domain"`
	// Exact match filter on group's CN
	Filter *string `pulumi:"filter"`
	// Active Directory Join Point ID
	JoinPointId string `pulumi:"joinPointId"`
	// Exact match filter on group's SID, optionally specifying the domain as prefix. e.g. S-1-5-33-544 and R1.dom/S-1-5-33-544 are legal.
	SidFilter *string `pulumi:"sidFilter"`
	// Can be exactly one of: BUILTIN, DOMAIN LOCAL, GLOBAL, UNIVERSAL.
	TypeFilter *string `pulumi:"typeFilter"`
}

// A collection of values returned by getDomain.
type GetDomainResult struct {
	// The domain whose groups we want to fetch
	Domain string `pulumi:"domain"`
	// Exact match filter on group's CN
	Filter *string `pulumi:"filter"`
	// List of groups
	Groups []GetDomainGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Active Directory Join Point ID
	JoinPointId string `pulumi:"joinPointId"`
	// Exact match filter on group's SID, optionally specifying the domain as prefix. e.g. S-1-5-33-544 and R1.dom/S-1-5-33-544 are legal.
	SidFilter *string `pulumi:"sidFilter"`
	// Can be exactly one of: BUILTIN, DOMAIN LOCAL, GLOBAL, UNIVERSAL.
	TypeFilter *string `pulumi:"typeFilter"`
}

func GetDomainOutput(ctx *pulumi.Context, args GetDomainOutputArgs, opts ...pulumi.InvokeOption) GetDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDomainResult, error) {
			args := v.(GetDomainArgs)
			r, err := GetDomain(ctx, &args, opts...)
			var s GetDomainResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDomainResultOutput)
}

// A collection of arguments for invoking getDomain.
type GetDomainOutputArgs struct {
	// The domain whose groups we want to fetch
	Domain pulumi.StringInput `pulumi:"domain"`
	// Exact match filter on group's CN
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Active Directory Join Point ID
	JoinPointId pulumi.StringInput `pulumi:"joinPointId"`
	// Exact match filter on group's SID, optionally specifying the domain as prefix. e.g. S-1-5-33-544 and R1.dom/S-1-5-33-544 are legal.
	SidFilter pulumi.StringPtrInput `pulumi:"sidFilter"`
	// Can be exactly one of: BUILTIN, DOMAIN LOCAL, GLOBAL, UNIVERSAL.
	TypeFilter pulumi.StringPtrInput `pulumi:"typeFilter"`
}

func (GetDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainArgs)(nil)).Elem()
}

// A collection of values returned by getDomain.
type GetDomainResultOutput struct{ *pulumi.OutputState }

func (GetDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainResult)(nil)).Elem()
}

func (o GetDomainResultOutput) ToGetDomainResultOutput() GetDomainResultOutput {
	return o
}

func (o GetDomainResultOutput) ToGetDomainResultOutputWithContext(ctx context.Context) GetDomainResultOutput {
	return o
}

// The domain whose groups we want to fetch
func (o GetDomainResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainResult) string { return v.Domain }).(pulumi.StringOutput)
}

// Exact match filter on group's CN
func (o GetDomainResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// List of groups
func (o GetDomainResultOutput) Groups() GetDomainGroupArrayOutput {
	return o.ApplyT(func(v GetDomainResult) []GetDomainGroup { return v.Groups }).(GetDomainGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

// Active Directory Join Point ID
func (o GetDomainResultOutput) JoinPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainResult) string { return v.JoinPointId }).(pulumi.StringOutput)
}

// Exact match filter on group's SID, optionally specifying the domain as prefix. e.g. S-1-5-33-544 and R1.dom/S-1-5-33-544 are legal.
func (o GetDomainResultOutput) SidFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainResult) *string { return v.SidFilter }).(pulumi.StringPtrOutput)
}

// Can be exactly one of: BUILTIN, DOMAIN LOCAL, GLOBAL, UNIVERSAL.
func (o GetDomainResultOutput) TypeFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainResult) *string { return v.TypeFilter }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainResultOutput{})
}
