// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.deviceadmin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class TacacsCommandSetCommandArgs extends com.pulumi.resources.ResourceArgs {

    public static final TacacsCommandSetCommandArgs Empty = new TacacsCommandSetCommandArgs();

    /**
     * Command arguments
     * 
     */
    @Import(name="arguments", required=true)
    private Output<String> arguments;

    /**
     * @return Command arguments
     * 
     */
    public Output<String> arguments() {
        return this.arguments;
    }

    /**
     * Command
     * 
     */
    @Import(name="command", required=true)
    private Output<String> command;

    /**
     * @return Command
     * 
     */
    public Output<String> command() {
        return this.command;
    }

    /**
     * Grant
     *   - Choices: `PERMIT`, `DENY`, `DENY_ALWAYS`
     * 
     */
    @Import(name="grant", required=true)
    private Output<String> grant;

    /**
     * @return Grant
     *   - Choices: `PERMIT`, `DENY`, `DENY_ALWAYS`
     * 
     */
    public Output<String> grant() {
        return this.grant;
    }

    private TacacsCommandSetCommandArgs() {}

    private TacacsCommandSetCommandArgs(TacacsCommandSetCommandArgs $) {
        this.arguments = $.arguments;
        this.command = $.command;
        this.grant = $.grant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TacacsCommandSetCommandArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TacacsCommandSetCommandArgs $;

        public Builder() {
            $ = new TacacsCommandSetCommandArgs();
        }

        public Builder(TacacsCommandSetCommandArgs defaults) {
            $ = new TacacsCommandSetCommandArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arguments Command arguments
         * 
         * @return builder
         * 
         */
        public Builder arguments(Output<String> arguments) {
            $.arguments = arguments;
            return this;
        }

        /**
         * @param arguments Command arguments
         * 
         * @return builder
         * 
         */
        public Builder arguments(String arguments) {
            return arguments(Output.of(arguments));
        }

        /**
         * @param command Command
         * 
         * @return builder
         * 
         */
        public Builder command(Output<String> command) {
            $.command = command;
            return this;
        }

        /**
         * @param command Command
         * 
         * @return builder
         * 
         */
        public Builder command(String command) {
            return command(Output.of(command));
        }

        /**
         * @param grant Grant
         *   - Choices: `PERMIT`, `DENY`, `DENY_ALWAYS`
         * 
         * @return builder
         * 
         */
        public Builder grant(Output<String> grant) {
            $.grant = grant;
            return this;
        }

        /**
         * @param grant Grant
         *   - Choices: `PERMIT`, `DENY`, `DENY_ALWAYS`
         * 
         * @return builder
         * 
         */
        public Builder grant(String grant) {
            return grant(Output.of(grant));
        }

        public TacacsCommandSetCommandArgs build() {
            if ($.arguments == null) {
                throw new MissingRequiredPropertyException("TacacsCommandSetCommandArgs", "arguments");
            }
            if ($.command == null) {
                throw new MissingRequiredPropertyException("TacacsCommandSetCommandArgs", "command");
            }
            if ($.grant == null) {
                throw new MissingRequiredPropertyException("TacacsCommandSetCommandArgs", "grant");
            }
            return $;
        }
    }

}
