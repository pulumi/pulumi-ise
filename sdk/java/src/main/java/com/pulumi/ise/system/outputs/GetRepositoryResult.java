// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.system.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRepositoryResult {
    /**
     * @return Enable PKI
     * 
     */
    private Boolean enablePki;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return Repository name should be less than 80 characters and can contain alphanumeric, underscore, hyphen and dot characters.
     * 
     */
    private String name;
    /**
     * @return Password can contain alphanumeric and/or special characters.
     * 
     */
    private String password;
    /**
     * @return Path should always start with &#34;/&#34; and can contain alphanumeric, underscore, hyphen and dot characters.
     * 
     */
    private String path;
    /**
     * @return Protocol
     * 
     */
    private String protocol;
    /**
     * @return Name of the server
     * 
     */
    private String serverName;
    /**
     * @return User name
     * 
     */
    private String userName;

    private GetRepositoryResult() {}
    /**
     * @return Enable PKI
     * 
     */
    public Boolean enablePki() {
        return this.enablePki;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Repository name should be less than 80 characters and can contain alphanumeric, underscore, hyphen and dot characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Password can contain alphanumeric and/or special characters.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Path should always start with &#34;/&#34; and can contain alphanumeric, underscore, hyphen and dot characters.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return Protocol
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Name of the server
     * 
     */
    public String serverName() {
        return this.serverName;
    }
    /**
     * @return User name
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enablePki;
        private String id;
        private String name;
        private String password;
        private String path;
        private String protocol;
        private String serverName;
        private String userName;
        public Builder() {}
        public Builder(GetRepositoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enablePki = defaults.enablePki;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.password = defaults.password;
    	      this.path = defaults.path;
    	      this.protocol = defaults.protocol;
    	      this.serverName = defaults.serverName;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder enablePki(Boolean enablePki) {
            if (enablePki == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "enablePki");
            }
            this.enablePki = enablePki;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder serverName(String serverName) {
            if (serverName == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "serverName");
            }
            this.serverName = serverName;
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            if (userName == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "userName");
            }
            this.userName = userName;
            return this;
        }
        public GetRepositoryResult build() {
            final var _resultValue = new GetRepositoryResult();
            _resultValue.enablePki = enablePki;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.password = password;
            _resultValue.path = path;
            _resultValue.protocol = protocol;
            _resultValue.serverName = serverName;
            _resultValue.userName = userName;
            return _resultValue;
        }
    }
}
