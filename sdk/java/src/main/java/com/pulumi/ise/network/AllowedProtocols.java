// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ise.Utilities;
import com.pulumi.ise.network.AllowedProtocolsArgs;
import com.pulumi.ise.network.inputs.AllowedProtocolsState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage an allowed protocols policy element.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ise.network.AllowedProtocols;
 * import com.pulumi.ise.network.AllowedProtocolsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AllowedProtocols(&#34;example&#34;, AllowedProtocolsArgs.builder()        
 *             .name(&#34;Protocols1&#34;)
 *             .description(&#34;My allowed protocols&#34;)
 *             .processHostLookup(true)
 *             .allowPapAscii(true)
 *             .allowChap(true)
 *             .allowMsChapV1(true)
 *             .allowMsChapV2(true)
 *             .allowEapMd5(true)
 *             .allowLeap(true)
 *             .allowEapTls(true)
 *             .allowEapTtls(true)
 *             .allowEapFast(true)
 *             .allowPeap(true)
 *             .allowTeap(true)
 *             .allowPreferredEapProtocol(true)
 *             .preferredEapProtocol(&#34;LEAP&#34;)
 *             .eapTlsLBit(true)
 *             .allowWeakCiphersForEap(true)
 *             .requireMessageAuth(true)
 *             .eapTlsAllowAuthOfExpiredCerts(true)
 *             .eapTlsEnableStatelessSessionResume(true)
 *             .eapTlsSessionTicketTtl(5)
 *             .eapTlsSessionTicketTtlUnit(&#34;DAYS&#34;)
 *             .eapTlsSessionTicketPercentage(5)
 *             .peapAllowPeapEapMsChapV2(true)
 *             .peapAllowPeapEapMsChapV2PwdChange(true)
 *             .peapAllowPeapEapMsChapV2PwdChangeRetries(3)
 *             .peapAllowPeapEapGtc(true)
 *             .peapAllowPeapEapGtcPwdChange(true)
 *             .peapAllowPeapEapGtcPwdChangeRetries(3)
 *             .peapAllowPeapEapTls(true)
 *             .peapAllowPeapEapTlsAuthOfExpiredCerts(true)
 *             .requireCryptobinding(true)
 *             .peapPeapV0(true)
 *             .eapTtlsPapAscii(true)
 *             .eapTtlsChap(true)
 *             .eapTtlsMsChapV1(true)
 *             .eapTtlsMsChapV2(true)
 *             .eapTtlsEapMd5(true)
 *             .eapTtlsEapMsChapV2(true)
 *             .eapTtlsEapMsChapV2PwdChange(true)
 *             .eapTtlsEapMsChapV2PwdChangeRetries(3)
 *             .eapFastEapMsChapV2(true)
 *             .eapFastEapMsChapV2PwdChange(true)
 *             .eapFastEapMsChapV2PwdChangeRetries(3)
 *             .eapFastEapGtc(true)
 *             .eapFastEapGtcPwdChange(true)
 *             .eapFastEapGtcPwdChangeRetries(3)
 *             .eapFastEapTls(true)
 *             .eapFastEapTlsAuthOfExpiredCerts(true)
 *             .eapFastEnableEapChaining(true)
 *             .eapFastUsePacs(true)
 *             .eapFastPacsTunnelPacTtl(5)
 *             .eapFastPacsTunnelPacTtlUnit(&#34;DAYS&#34;)
 *             .eapFastPacsUseProactivePacUpdatePercentage(5)
 *             .eapFastPacsAllowAnonymousProvisioning(true)
 *             .eapFastPacsAllowAuthenticatedProvisioning(true)
 *             .eapFastPacsServerReturns(true)
 *             .eapFastPacsAllowClientCert(true)
 *             .eapFastPacsAllowMachineAuthentication(true)
 *             .eapFastPacsMachinePacTtl(5)
 *             .eapFastPacsMachinePacTtlUnit(&#34;DAYS&#34;)
 *             .eapFastPacsStatelessSessionResume(true)
 *             .eapFastPacsAuthorizationPacTtl(5)
 *             .eapFastPacsAuthorizationPacTtlUnit(&#34;HOURS&#34;)
 *             .teapEapMsChapV2(true)
 *             .teapEapMsChapV2PwdChange(true)
 *             .teapEapMsChapV2PwdChangeRetries(3)
 *             .teapEapTls(true)
 *             .teapEapTlsAuthOfExpiredCerts(true)
 *             .teapEapAcceptClientCertDuringTunnelEst(true)
 *             .teapEapChaining(true)
 *             .teapDowngradeMsk(true)
 *             .teapRequestBasicPwdAuth(true)
 *             .allow5g(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import ise:network/allowedProtocols:AllowedProtocols example &#34;76d24097-41c4-4558-a4d0-a8c07ac08470&#34;
 * ```
 * 
 */
@ResourceType(type="ise:network/allowedProtocols:AllowedProtocols")
public class AllowedProtocols extends com.pulumi.resources.CustomResource {
    /**
     * Allow 5G. This field is only supported from ISE 3.2.
     * 
     */
    @Export(name="allow5g", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> allow5g;

    /**
     * @return Allow 5G. This field is only supported from ISE 3.2.
     * 
     */
    public Output<Optional<Boolean>> allow5g() {
        return Codegen.optional(this.allow5g);
    }
    /**
     * Allow CHAP
     * 
     */
    @Export(name="allowChap", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowChap;

    /**
     * @return Allow CHAP
     * 
     */
    public Output<Boolean> allowChap() {
        return this.allowChap;
    }
    /**
     * Allow EAP Fast
     * 
     */
    @Export(name="allowEapFast", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowEapFast;

    /**
     * @return Allow EAP Fast
     * 
     */
    public Output<Boolean> allowEapFast() {
        return this.allowEapFast;
    }
    /**
     * Allow EAP MD5
     * 
     */
    @Export(name="allowEapMd5", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowEapMd5;

    /**
     * @return Allow EAP MD5
     * 
     */
    public Output<Boolean> allowEapMd5() {
        return this.allowEapMd5;
    }
    /**
     * Allow EAP TLS
     * 
     */
    @Export(name="allowEapTls", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowEapTls;

    /**
     * @return Allow EAP TLS
     * 
     */
    public Output<Boolean> allowEapTls() {
        return this.allowEapTls;
    }
    /**
     * Allow EAP TTLS
     * 
     */
    @Export(name="allowEapTtls", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowEapTtls;

    /**
     * @return Allow EAP TTLS
     * 
     */
    public Output<Boolean> allowEapTtls() {
        return this.allowEapTtls;
    }
    /**
     * Allow LEAP
     * 
     */
    @Export(name="allowLeap", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowLeap;

    /**
     * @return Allow LEAP
     * 
     */
    public Output<Boolean> allowLeap() {
        return this.allowLeap;
    }
    /**
     * Allow MS CHAP v1
     * 
     */
    @Export(name="allowMsChapV1", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowMsChapV1;

    /**
     * @return Allow MS CHAP v1
     * 
     */
    public Output<Boolean> allowMsChapV1() {
        return this.allowMsChapV1;
    }
    /**
     * Allow MS CHAP v2
     * 
     */
    @Export(name="allowMsChapV2", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowMsChapV2;

    /**
     * @return Allow MS CHAP v2
     * 
     */
    public Output<Boolean> allowMsChapV2() {
        return this.allowMsChapV2;
    }
    /**
     * Allow PAP ASCII
     * 
     */
    @Export(name="allowPapAscii", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowPapAscii;

    /**
     * @return Allow PAP ASCII
     * 
     */
    public Output<Boolean> allowPapAscii() {
        return this.allowPapAscii;
    }
    /**
     * Allow PEAP
     * 
     */
    @Export(name="allowPeap", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowPeap;

    /**
     * @return Allow PEAP
     * 
     */
    public Output<Boolean> allowPeap() {
        return this.allowPeap;
    }
    /**
     * Allow preferred EAP protocol
     * 
     */
    @Export(name="allowPreferredEapProtocol", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowPreferredEapProtocol;

    /**
     * @return Allow preferred EAP protocol
     * 
     */
    public Output<Boolean> allowPreferredEapProtocol() {
        return this.allowPreferredEapProtocol;
    }
    /**
     * Allow TEAP
     * 
     */
    @Export(name="allowTeap", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowTeap;

    /**
     * @return Allow TEAP
     * 
     */
    public Output<Boolean> allowTeap() {
        return this.allowTeap;
    }
    /**
     * Allow weak ciphers for EAP
     * 
     */
    @Export(name="allowWeakCiphersForEap", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowWeakCiphersForEap;

    /**
     * @return Allow weak ciphers for EAP
     * 
     */
    public Output<Boolean> allowWeakCiphersForEap() {
        return this.allowWeakCiphersForEap;
    }
    /**
     * Description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Accept client certificates. Is required only if `eap_fast_use_pacs` is `false`.
     * 
     */
    @Export(name="eapFastAcceptClientCert", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastAcceptClientCert;

    /**
     * @return Accept client certificates. Is required only if `eap_fast_use_pacs` is `false`.
     * 
     */
    public Output<Optional<Boolean>> eapFastAcceptClientCert() {
        return Codegen.optional(this.eapFastAcceptClientCert);
    }
    /**
     * Allow machine authentication. Is required only if `eap_fast_use_pacs` is `false`.
     * 
     */
    @Export(name="eapFastAllowMachineAuthentication", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastAllowMachineAuthentication;

    /**
     * @return Allow machine authentication. Is required only if `eap_fast_use_pacs` is `false`.
     * 
     */
    public Output<Optional<Boolean>> eapFastAllowMachineAuthentication() {
        return Codegen.optional(this.eapFastAllowMachineAuthentication);
    }
    /**
     * Allow EAP GTC
     * 
     */
    @Export(name="eapFastEapGtc", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastEapGtc;

    /**
     * @return Allow EAP GTC
     * 
     */
    public Output<Optional<Boolean>> eapFastEapGtc() {
        return Codegen.optional(this.eapFastEapGtc);
    }
    /**
     * Allow EAP GTC password change. Is required only if `eap_fast_eap_gtc` is `true`.
     * 
     */
    @Export(name="eapFastEapGtcPwdChange", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastEapGtcPwdChange;

    /**
     * @return Allow EAP GTC password change. Is required only if `eap_fast_eap_gtc` is `true`.
     * 
     */
    public Output<Optional<Boolean>> eapFastEapGtcPwdChange() {
        return Codegen.optional(this.eapFastEapGtcPwdChange);
    }
    /**
     * EAP GTC password change retries. Is required only if `eap_fast_eap_gtc` is `true`. - Range: `0`-`3`
     * 
     */
    @Export(name="eapFastEapGtcPwdChangeRetries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eapFastEapGtcPwdChangeRetries;

    /**
     * @return EAP GTC password change retries. Is required only if `eap_fast_eap_gtc` is `true`. - Range: `0`-`3`
     * 
     */
    public Output<Optional<Integer>> eapFastEapGtcPwdChangeRetries() {
        return Codegen.optional(this.eapFastEapGtcPwdChangeRetries);
    }
    /**
     * Allow EAP MS CHAP v2
     * 
     */
    @Export(name="eapFastEapMsChapV2", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastEapMsChapV2;

    /**
     * @return Allow EAP MS CHAP v2
     * 
     */
    public Output<Optional<Boolean>> eapFastEapMsChapV2() {
        return Codegen.optional(this.eapFastEapMsChapV2);
    }
    /**
     * Allow EAP MS CHAP v2 password change. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
     * 
     */
    @Export(name="eapFastEapMsChapV2PwdChange", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastEapMsChapV2PwdChange;

    /**
     * @return Allow EAP MS CHAP v2 password change. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
     * 
     */
    public Output<Optional<Boolean>> eapFastEapMsChapV2PwdChange() {
        return Codegen.optional(this.eapFastEapMsChapV2PwdChange);
    }
    /**
     * EAP MS CHAP v2 password change retries. Is required only if `eap_fast_eap_ms_chap_v2` is `true`. - Range: `0`-`3`
     * 
     */
    @Export(name="eapFastEapMsChapV2PwdChangeRetries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eapFastEapMsChapV2PwdChangeRetries;

    /**
     * @return EAP MS CHAP v2 password change retries. Is required only if `eap_fast_eap_ms_chap_v2` is `true`. - Range: `0`-`3`
     * 
     */
    public Output<Optional<Integer>> eapFastEapMsChapV2PwdChangeRetries() {
        return Codegen.optional(this.eapFastEapMsChapV2PwdChangeRetries);
    }
    /**
     * Allow EAP TLS
     * 
     */
    @Export(name="eapFastEapTls", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastEapTls;

    /**
     * @return Allow EAP TLS
     * 
     */
    public Output<Optional<Boolean>> eapFastEapTls() {
        return Codegen.optional(this.eapFastEapTls);
    }
    /**
     * Allow EAP TLS authentication of expired certificates. Is required only if `eap_fast_eap_tls` is `true`.
     * 
     */
    @Export(name="eapFastEapTlsAuthOfExpiredCerts", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastEapTlsAuthOfExpiredCerts;

    /**
     * @return Allow EAP TLS authentication of expired certificates. Is required only if `eap_fast_eap_tls` is `true`.
     * 
     */
    public Output<Optional<Boolean>> eapFastEapTlsAuthOfExpiredCerts() {
        return Codegen.optional(this.eapFastEapTlsAuthOfExpiredCerts);
    }
    /**
     * Enable EAP chaining
     * 
     */
    @Export(name="eapFastEnableEapChaining", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastEnableEapChaining;

    /**
     * @return Enable EAP chaining
     * 
     */
    public Output<Optional<Boolean>> eapFastEnableEapChaining() {
        return Codegen.optional(this.eapFastEnableEapChaining);
    }
    /**
     * Allow anonymous provisioning. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Export(name="eapFastPacsAllowAnonymousProvisioning", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastPacsAllowAnonymousProvisioning;

    /**
     * @return Allow anonymous provisioning. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Output<Optional<Boolean>> eapFastPacsAllowAnonymousProvisioning() {
        return Codegen.optional(this.eapFastPacsAllowAnonymousProvisioning);
    }
    /**
     * Allow authenticated provisioning. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Export(name="eapFastPacsAllowAuthenticatedProvisioning", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastPacsAllowAuthenticatedProvisioning;

    /**
     * @return Allow authenticated provisioning. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Output<Optional<Boolean>> eapFastPacsAllowAuthenticatedProvisioning() {
        return Codegen.optional(this.eapFastPacsAllowAuthenticatedProvisioning);
    }
    /**
     * Accept client certification for provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is
     * `true`.
     * 
     */
    @Export(name="eapFastPacsAllowClientCert", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastPacsAllowClientCert;

    /**
     * @return Accept client certification for provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is
     * `true`.
     * 
     */
    public Output<Optional<Boolean>> eapFastPacsAllowClientCert() {
        return Codegen.optional(this.eapFastPacsAllowClientCert);
    }
    /**
     * Allow machine authentication. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Export(name="eapFastPacsAllowMachineAuthentication", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastPacsAllowMachineAuthentication;

    /**
     * @return Allow machine authentication. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Output<Optional<Boolean>> eapFastPacsAllowMachineAuthentication() {
        return Codegen.optional(this.eapFastPacsAllowMachineAuthentication);
    }
    /**
     * Authorization PAC TTL. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
     * 
     */
    @Export(name="eapFastPacsAuthorizationPacTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eapFastPacsAuthorizationPacTtl;

    /**
     * @return Authorization PAC TTL. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
     * 
     */
    public Output<Optional<Integer>> eapFastPacsAuthorizationPacTtl() {
        return Codegen.optional(this.eapFastPacsAuthorizationPacTtl);
    }
    /**
     * Authorization PAC TTL unit. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`. - Choices:
     * `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    @Export(name="eapFastPacsAuthorizationPacTtlUnit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> eapFastPacsAuthorizationPacTtlUnit;

    /**
     * @return Authorization PAC TTL unit. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`. - Choices:
     * `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    public Output<Optional<String>> eapFastPacsAuthorizationPacTtlUnit() {
        return Codegen.optional(this.eapFastPacsAuthorizationPacTtlUnit);
    }
    /**
     * Machine PAC TTL. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
     * 
     */
    @Export(name="eapFastPacsMachinePacTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eapFastPacsMachinePacTtl;

    /**
     * @return Machine PAC TTL. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
     * 
     */
    public Output<Optional<Integer>> eapFastPacsMachinePacTtl() {
        return Codegen.optional(this.eapFastPacsMachinePacTtl);
    }
    /**
     * Machine PAC TTL unit. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`. - Choices: `SECONDS`,
     * `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    @Export(name="eapFastPacsMachinePacTtlUnit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> eapFastPacsMachinePacTtlUnit;

    /**
     * @return Machine PAC TTL unit. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`. - Choices: `SECONDS`,
     * `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    public Output<Optional<String>> eapFastPacsMachinePacTtlUnit() {
        return Codegen.optional(this.eapFastPacsMachinePacTtlUnit);
    }
    /**
     * Server returns access accept after authenticated provisioning. Is required only if
     * `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
     * 
     */
    @Export(name="eapFastPacsServerReturns", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastPacsServerReturns;

    /**
     * @return Server returns access accept after authenticated provisioning. Is required only if
     * `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
     * 
     */
    public Output<Optional<Boolean>> eapFastPacsServerReturns() {
        return Codegen.optional(this.eapFastPacsServerReturns);
    }
    /**
     * Stateless session resume. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Export(name="eapFastPacsStatelessSessionResume", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastPacsStatelessSessionResume;

    /**
     * @return Stateless session resume. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Output<Optional<Boolean>> eapFastPacsStatelessSessionResume() {
        return Codegen.optional(this.eapFastPacsStatelessSessionResume);
    }
    /**
     * PACs tunnel PAC time to live. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Export(name="eapFastPacsTunnelPacTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eapFastPacsTunnelPacTtl;

    /**
     * @return PACs tunnel PAC time to live. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Output<Optional<Integer>> eapFastPacsTunnelPacTtl() {
        return Codegen.optional(this.eapFastPacsTunnelPacTtl);
    }
    /**
     * PACs tunnel PAC time to live unit. Is required only if `eap_fast_use_pacs` is `true`. - Choices: `SECONDS`, `MINUTES`,
     * `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    @Export(name="eapFastPacsTunnelPacTtlUnit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> eapFastPacsTunnelPacTtlUnit;

    /**
     * @return PACs tunnel PAC time to live unit. Is required only if `eap_fast_use_pacs` is `true`. - Choices: `SECONDS`, `MINUTES`,
     * `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    public Output<Optional<String>> eapFastPacsTunnelPacTtlUnit() {
        return Codegen.optional(this.eapFastPacsTunnelPacTtlUnit);
    }
    /**
     * Use proactive pac update percentage. Is required only if `eap_fast_use_pacs` is `true`. - Range: `1`-`100`
     * 
     */
    @Export(name="eapFastPacsUseProactivePacUpdatePercentage", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eapFastPacsUseProactivePacUpdatePercentage;

    /**
     * @return Use proactive pac update percentage. Is required only if `eap_fast_use_pacs` is `true`. - Range: `1`-`100`
     * 
     */
    public Output<Optional<Integer>> eapFastPacsUseProactivePacUpdatePercentage() {
        return Codegen.optional(this.eapFastPacsUseProactivePacUpdatePercentage);
    }
    /**
     * Use PACs
     * 
     */
    @Export(name="eapFastUsePacs", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapFastUsePacs;

    /**
     * @return Use PACs
     * 
     */
    public Output<Optional<Boolean>> eapFastUsePacs() {
        return Codegen.optional(this.eapFastUsePacs);
    }
    /**
     * Allow authentication of expired certificates
     * 
     */
    @Export(name="eapTlsAllowAuthOfExpiredCerts", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapTlsAllowAuthOfExpiredCerts;

    /**
     * @return Allow authentication of expired certificates
     * 
     */
    public Output<Optional<Boolean>> eapTlsAllowAuthOfExpiredCerts() {
        return Codegen.optional(this.eapTlsAllowAuthOfExpiredCerts);
    }
    /**
     * Enable stateless session resume
     * 
     */
    @Export(name="eapTlsEnableStatelessSessionResume", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapTlsEnableStatelessSessionResume;

    /**
     * @return Enable stateless session resume
     * 
     */
    public Output<Optional<Boolean>> eapTlsEnableStatelessSessionResume() {
        return Codegen.optional(this.eapTlsEnableStatelessSessionResume);
    }
    /**
     * EAP TLS L-Bit
     * 
     */
    @Export(name="eapTlsLBit", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> eapTlsLBit;

    /**
     * @return EAP TLS L-Bit
     * 
     */
    public Output<Boolean> eapTlsLBit() {
        return this.eapTlsLBit;
    }
    /**
     * Session ticket percentage. Is required only if `eap_tls_enable_stateless_session_resume` is `true`. - Range: `1`-`100`
     * 
     */
    @Export(name="eapTlsSessionTicketPercentage", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eapTlsSessionTicketPercentage;

    /**
     * @return Session ticket percentage. Is required only if `eap_tls_enable_stateless_session_resume` is `true`. - Range: `1`-`100`
     * 
     */
    public Output<Optional<Integer>> eapTlsSessionTicketPercentage() {
        return Codegen.optional(this.eapTlsSessionTicketPercentage);
    }
    /**
     * Session ticket TTL. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
     * 
     */
    @Export(name="eapTlsSessionTicketTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eapTlsSessionTicketTtl;

    /**
     * @return Session ticket TTL. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
     * 
     */
    public Output<Optional<Integer>> eapTlsSessionTicketTtl() {
        return Codegen.optional(this.eapTlsSessionTicketTtl);
    }
    /**
     * Session ticket TTL unit. Is required only if `eap_tls_enable_stateless_session_resume` is `true`. - Choices: `SECONDS`,
     * `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    @Export(name="eapTlsSessionTicketTtlUnit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> eapTlsSessionTicketTtlUnit;

    /**
     * @return Session ticket TTL unit. Is required only if `eap_tls_enable_stateless_session_resume` is `true`. - Choices: `SECONDS`,
     * `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    public Output<Optional<String>> eapTlsSessionTicketTtlUnit() {
        return Codegen.optional(this.eapTlsSessionTicketTtlUnit);
    }
    /**
     * Allow CHAP
     * 
     */
    @Export(name="eapTtlsChap", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapTtlsChap;

    /**
     * @return Allow CHAP
     * 
     */
    public Output<Optional<Boolean>> eapTtlsChap() {
        return Codegen.optional(this.eapTtlsChap);
    }
    /**
     * Allow EAP MD5
     * 
     */
    @Export(name="eapTtlsEapMd5", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapTtlsEapMd5;

    /**
     * @return Allow EAP MD5
     * 
     */
    public Output<Optional<Boolean>> eapTtlsEapMd5() {
        return Codegen.optional(this.eapTtlsEapMd5);
    }
    /**
     * Allow EAP MS CHAP v2
     * 
     */
    @Export(name="eapTtlsEapMsChapV2", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapTtlsEapMsChapV2;

    /**
     * @return Allow EAP MS CHAP v2
     * 
     */
    public Output<Optional<Boolean>> eapTtlsEapMsChapV2() {
        return Codegen.optional(this.eapTtlsEapMsChapV2);
    }
    /**
     * Allow EAP MS CHAP v2 password change. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
     * 
     */
    @Export(name="eapTtlsEapMsChapV2PwdChange", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapTtlsEapMsChapV2PwdChange;

    /**
     * @return Allow EAP MS CHAP v2 password change. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
     * 
     */
    public Output<Optional<Boolean>> eapTtlsEapMsChapV2PwdChange() {
        return Codegen.optional(this.eapTtlsEapMsChapV2PwdChange);
    }
    /**
     * EAP MS CHAP v2 password change retries. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`. - Range: `0`-`3`
     * 
     */
    @Export(name="eapTtlsEapMsChapV2PwdChangeRetries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eapTtlsEapMsChapV2PwdChangeRetries;

    /**
     * @return EAP MS CHAP v2 password change retries. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`. - Range: `0`-`3`
     * 
     */
    public Output<Optional<Integer>> eapTtlsEapMsChapV2PwdChangeRetries() {
        return Codegen.optional(this.eapTtlsEapMsChapV2PwdChangeRetries);
    }
    /**
     * Allow MS CHAP v1
     * 
     */
    @Export(name="eapTtlsMsChapV1", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapTtlsMsChapV1;

    /**
     * @return Allow MS CHAP v1
     * 
     */
    public Output<Optional<Boolean>> eapTtlsMsChapV1() {
        return Codegen.optional(this.eapTtlsMsChapV1);
    }
    /**
     * Allow MS CHAP v2
     * 
     */
    @Export(name="eapTtlsMsChapV2", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapTtlsMsChapV2;

    /**
     * @return Allow MS CHAP v2
     * 
     */
    public Output<Optional<Boolean>> eapTtlsMsChapV2() {
        return Codegen.optional(this.eapTtlsMsChapV2);
    }
    /**
     * Allow PAP ASCII
     * 
     */
    @Export(name="eapTtlsPapAscii", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> eapTtlsPapAscii;

    /**
     * @return Allow PAP ASCII
     * 
     */
    public Output<Optional<Boolean>> eapTtlsPapAscii() {
        return Codegen.optional(this.eapTtlsPapAscii);
    }
    /**
     * The name of the allowed protocols
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the allowed protocols
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Allow PEAP EAP GTC
     * 
     */
    @Export(name="peapAllowPeapEapGtc", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> peapAllowPeapEapGtc;

    /**
     * @return Allow PEAP EAP GTC
     * 
     */
    public Output<Optional<Boolean>> peapAllowPeapEapGtc() {
        return Codegen.optional(this.peapAllowPeapEapGtc);
    }
    /**
     * Allow PEAP EAP GTC password change. Is required only if `allow_peap_eap_gtc` is `true`.
     * 
     */
    @Export(name="peapAllowPeapEapGtcPwdChange", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> peapAllowPeapEapGtcPwdChange;

    /**
     * @return Allow PEAP EAP GTC password change. Is required only if `allow_peap_eap_gtc` is `true`.
     * 
     */
    public Output<Optional<Boolean>> peapAllowPeapEapGtcPwdChange() {
        return Codegen.optional(this.peapAllowPeapEapGtcPwdChange);
    }
    /**
     * PEAP EAP GTC password change retries. Is required only if `allow_peap_eap_gtc` is `true`. - Range: `0`-`3`
     * 
     */
    @Export(name="peapAllowPeapEapGtcPwdChangeRetries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> peapAllowPeapEapGtcPwdChangeRetries;

    /**
     * @return PEAP EAP GTC password change retries. Is required only if `allow_peap_eap_gtc` is `true`. - Range: `0`-`3`
     * 
     */
    public Output<Optional<Integer>> peapAllowPeapEapGtcPwdChangeRetries() {
        return Codegen.optional(this.peapAllowPeapEapGtcPwdChangeRetries);
    }
    /**
     * Allow PEAP EAP MS CHAP v2
     * 
     */
    @Export(name="peapAllowPeapEapMsChapV2", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> peapAllowPeapEapMsChapV2;

    /**
     * @return Allow PEAP EAP MS CHAP v2
     * 
     */
    public Output<Optional<Boolean>> peapAllowPeapEapMsChapV2() {
        return Codegen.optional(this.peapAllowPeapEapMsChapV2);
    }
    /**
     * Allow PEAP EAP MS CHAP v2 password change. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
     * 
     */
    @Export(name="peapAllowPeapEapMsChapV2PwdChange", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> peapAllowPeapEapMsChapV2PwdChange;

    /**
     * @return Allow PEAP EAP MS CHAP v2 password change. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
     * 
     */
    public Output<Optional<Boolean>> peapAllowPeapEapMsChapV2PwdChange() {
        return Codegen.optional(this.peapAllowPeapEapMsChapV2PwdChange);
    }
    /**
     * Allow PEAP EAP MS CHAP v2 password change retries. Is required only if `allow_peap_eap_ms_chap_v2` is `true`. - Range:
     * `0`-`3`
     * 
     */
    @Export(name="peapAllowPeapEapMsChapV2PwdChangeRetries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> peapAllowPeapEapMsChapV2PwdChangeRetries;

    /**
     * @return Allow PEAP EAP MS CHAP v2 password change retries. Is required only if `allow_peap_eap_ms_chap_v2` is `true`. - Range:
     * `0`-`3`
     * 
     */
    public Output<Optional<Integer>> peapAllowPeapEapMsChapV2PwdChangeRetries() {
        return Codegen.optional(this.peapAllowPeapEapMsChapV2PwdChangeRetries);
    }
    /**
     * Allow PEAP EAP TLS
     * 
     */
    @Export(name="peapAllowPeapEapTls", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> peapAllowPeapEapTls;

    /**
     * @return Allow PEAP EAP TLS
     * 
     */
    public Output<Optional<Boolean>> peapAllowPeapEapTls() {
        return Codegen.optional(this.peapAllowPeapEapTls);
    }
    /**
     * Allow PEAP EAP TLS authentication of expired certificates. Is required only if `peap_allow_peap_eap_tls` is `true`.
     * 
     */
    @Export(name="peapAllowPeapEapTlsAuthOfExpiredCerts", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> peapAllowPeapEapTlsAuthOfExpiredCerts;

    /**
     * @return Allow PEAP EAP TLS authentication of expired certificates. Is required only if `peap_allow_peap_eap_tls` is `true`.
     * 
     */
    public Output<Optional<Boolean>> peapAllowPeapEapTlsAuthOfExpiredCerts() {
        return Codegen.optional(this.peapAllowPeapEapTlsAuthOfExpiredCerts);
    }
    /**
     * Allow PEAP v0
     * 
     */
    @Export(name="peapPeapV0", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> peapPeapV0;

    /**
     * @return Allow PEAP v0
     * 
     */
    public Output<Optional<Boolean>> peapPeapV0() {
        return Codegen.optional(this.peapPeapV0);
    }
    /**
     * Preferred EAP protocol - Choices: `EAP_FAST`, `PEAP`, `LEAP`, `EAP_MD5`, `EAP_TLS`, `EAP_TTLS`, `TEAP`
     * 
     */
    @Export(name="preferredEapProtocol", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> preferredEapProtocol;

    /**
     * @return Preferred EAP protocol - Choices: `EAP_FAST`, `PEAP`, `LEAP`, `EAP_MD5`, `EAP_TLS`, `EAP_TTLS`, `TEAP`
     * 
     */
    public Output<Optional<String>> preferredEapProtocol() {
        return Codegen.optional(this.preferredEapProtocol);
    }
    /**
     * Process host lookup
     * 
     */
    @Export(name="processHostLookup", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> processHostLookup;

    /**
     * @return Process host lookup
     * 
     */
    public Output<Boolean> processHostLookup() {
        return this.processHostLookup;
    }
    /**
     * Require cryptobinding
     * 
     */
    @Export(name="requireCryptobinding", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> requireCryptobinding;

    /**
     * @return Require cryptobinding
     * 
     */
    public Output<Optional<Boolean>> requireCryptobinding() {
        return Codegen.optional(this.requireCryptobinding);
    }
    /**
     * Require message authentication
     * 
     */
    @Export(name="requireMessageAuth", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> requireMessageAuth;

    /**
     * @return Require message authentication
     * 
     */
    public Output<Boolean> requireMessageAuth() {
        return this.requireMessageAuth;
    }
    /**
     * Allow downgrade to MSK
     * 
     */
    @Export(name="teapDowngradeMsk", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> teapDowngradeMsk;

    /**
     * @return Allow downgrade to MSK
     * 
     */
    public Output<Optional<Boolean>> teapDowngradeMsk() {
        return Codegen.optional(this.teapDowngradeMsk);
    }
    /**
     * Accept client certificate during tunnel establishment
     * 
     */
    @Export(name="teapEapAcceptClientCertDuringTunnelEst", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> teapEapAcceptClientCertDuringTunnelEst;

    /**
     * @return Accept client certificate during tunnel establishment
     * 
     */
    public Output<Optional<Boolean>> teapEapAcceptClientCertDuringTunnelEst() {
        return Codegen.optional(this.teapEapAcceptClientCertDuringTunnelEst);
    }
    /**
     * Allow EAP chaining
     * 
     */
    @Export(name="teapEapChaining", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> teapEapChaining;

    /**
     * @return Allow EAP chaining
     * 
     */
    public Output<Optional<Boolean>> teapEapChaining() {
        return Codegen.optional(this.teapEapChaining);
    }
    /**
     * Allow EAP MS CHAP v2
     * 
     */
    @Export(name="teapEapMsChapV2", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> teapEapMsChapV2;

    /**
     * @return Allow EAP MS CHAP v2
     * 
     */
    public Output<Optional<Boolean>> teapEapMsChapV2() {
        return Codegen.optional(this.teapEapMsChapV2);
    }
    /**
     * Allow EAP MS CHAP v2 password change. Is required only if `teap_eap_ms_chap_v2` is `true`.
     * 
     */
    @Export(name="teapEapMsChapV2PwdChange", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> teapEapMsChapV2PwdChange;

    /**
     * @return Allow EAP MS CHAP v2 password change. Is required only if `teap_eap_ms_chap_v2` is `true`.
     * 
     */
    public Output<Optional<Boolean>> teapEapMsChapV2PwdChange() {
        return Codegen.optional(this.teapEapMsChapV2PwdChange);
    }
    /**
     * EAP MS CHAP v2 password change retries. Is required only if `teap_eap_ms_chap_v2` is `true`. - Range: `0`-`3`
     * 
     */
    @Export(name="teapEapMsChapV2PwdChangeRetries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> teapEapMsChapV2PwdChangeRetries;

    /**
     * @return EAP MS CHAP v2 password change retries. Is required only if `teap_eap_ms_chap_v2` is `true`. - Range: `0`-`3`
     * 
     */
    public Output<Optional<Integer>> teapEapMsChapV2PwdChangeRetries() {
        return Codegen.optional(this.teapEapMsChapV2PwdChangeRetries);
    }
    /**
     * Allow EAP TLS
     * 
     */
    @Export(name="teapEapTls", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> teapEapTls;

    /**
     * @return Allow EAP TLS
     * 
     */
    public Output<Optional<Boolean>> teapEapTls() {
        return Codegen.optional(this.teapEapTls);
    }
    /**
     * Allow EAP TLS authentication of expired certs. Is required only if `teap_eap_tls` is `true`.
     * 
     */
    @Export(name="teapEapTlsAuthOfExpiredCerts", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> teapEapTlsAuthOfExpiredCerts;

    /**
     * @return Allow EAP TLS authentication of expired certs. Is required only if `teap_eap_tls` is `true`.
     * 
     */
    public Output<Optional<Boolean>> teapEapTlsAuthOfExpiredCerts() {
        return Codegen.optional(this.teapEapTlsAuthOfExpiredCerts);
    }
    /**
     * Request basic password authentication
     * 
     */
    @Export(name="teapRequestBasicPwdAuth", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> teapRequestBasicPwdAuth;

    /**
     * @return Request basic password authentication
     * 
     */
    public Output<Optional<Boolean>> teapRequestBasicPwdAuth() {
        return Codegen.optional(this.teapRequestBasicPwdAuth);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AllowedProtocols(String name) {
        this(name, AllowedProtocolsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AllowedProtocols(String name, AllowedProtocolsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AllowedProtocols(String name, AllowedProtocolsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ise:network/allowedProtocols:AllowedProtocols", name, args == null ? AllowedProtocolsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AllowedProtocols(String name, Output<String> id, @Nullable AllowedProtocolsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ise:network/allowedProtocols:AllowedProtocols", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AllowedProtocols get(String name, Output<String> id, @Nullable AllowedProtocolsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AllowedProtocols(name, id, state, options);
    }
}
