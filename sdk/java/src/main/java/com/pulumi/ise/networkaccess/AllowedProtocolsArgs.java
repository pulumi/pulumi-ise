// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.networkaccess;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AllowedProtocolsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AllowedProtocolsArgs Empty = new AllowedProtocolsArgs();

    /**
     * Allow 5G. This field is only supported from ISE 3.2.
     * 
     */
    @Import(name="allow5g")
    private @Nullable Output<Boolean> allow5g;

    /**
     * @return Allow 5G. This field is only supported from ISE 3.2.
     * 
     */
    public Optional<Output<Boolean>> allow5g() {
        return Optional.ofNullable(this.allow5g);
    }

    /**
     * Allow CHAP
     * 
     */
    @Import(name="allowChap", required=true)
    private Output<Boolean> allowChap;

    /**
     * @return Allow CHAP
     * 
     */
    public Output<Boolean> allowChap() {
        return this.allowChap;
    }

    /**
     * Allow EAP Fast
     * 
     */
    @Import(name="allowEapFast", required=true)
    private Output<Boolean> allowEapFast;

    /**
     * @return Allow EAP Fast
     * 
     */
    public Output<Boolean> allowEapFast() {
        return this.allowEapFast;
    }

    /**
     * Allow EAP MD5
     * 
     */
    @Import(name="allowEapMd5", required=true)
    private Output<Boolean> allowEapMd5;

    /**
     * @return Allow EAP MD5
     * 
     */
    public Output<Boolean> allowEapMd5() {
        return this.allowEapMd5;
    }

    /**
     * Allow EAP TLS
     * 
     */
    @Import(name="allowEapTls", required=true)
    private Output<Boolean> allowEapTls;

    /**
     * @return Allow EAP TLS
     * 
     */
    public Output<Boolean> allowEapTls() {
        return this.allowEapTls;
    }

    /**
     * Allow EAP TTLS
     * 
     */
    @Import(name="allowEapTtls", required=true)
    private Output<Boolean> allowEapTtls;

    /**
     * @return Allow EAP TTLS
     * 
     */
    public Output<Boolean> allowEapTtls() {
        return this.allowEapTtls;
    }

    /**
     * Allow LEAP
     * 
     */
    @Import(name="allowLeap", required=true)
    private Output<Boolean> allowLeap;

    /**
     * @return Allow LEAP
     * 
     */
    public Output<Boolean> allowLeap() {
        return this.allowLeap;
    }

    /**
     * Allow MS CHAP v1
     * 
     */
    @Import(name="allowMsChapV1", required=true)
    private Output<Boolean> allowMsChapV1;

    /**
     * @return Allow MS CHAP v1
     * 
     */
    public Output<Boolean> allowMsChapV1() {
        return this.allowMsChapV1;
    }

    /**
     * Allow MS CHAP v2
     * 
     */
    @Import(name="allowMsChapV2", required=true)
    private Output<Boolean> allowMsChapV2;

    /**
     * @return Allow MS CHAP v2
     * 
     */
    public Output<Boolean> allowMsChapV2() {
        return this.allowMsChapV2;
    }

    /**
     * Allow PAP ASCII
     * 
     */
    @Import(name="allowPapAscii", required=true)
    private Output<Boolean> allowPapAscii;

    /**
     * @return Allow PAP ASCII
     * 
     */
    public Output<Boolean> allowPapAscii() {
        return this.allowPapAscii;
    }

    /**
     * Allow PEAP
     * 
     */
    @Import(name="allowPeap", required=true)
    private Output<Boolean> allowPeap;

    /**
     * @return Allow PEAP
     * 
     */
    public Output<Boolean> allowPeap() {
        return this.allowPeap;
    }

    /**
     * Allow preferred EAP protocol
     * 
     */
    @Import(name="allowPreferredEapProtocol", required=true)
    private Output<Boolean> allowPreferredEapProtocol;

    /**
     * @return Allow preferred EAP protocol
     * 
     */
    public Output<Boolean> allowPreferredEapProtocol() {
        return this.allowPreferredEapProtocol;
    }

    /**
     * Allow TEAP
     * 
     */
    @Import(name="allowTeap", required=true)
    private Output<Boolean> allowTeap;

    /**
     * @return Allow TEAP
     * 
     */
    public Output<Boolean> allowTeap() {
        return this.allowTeap;
    }

    /**
     * Allow weak ciphers for EAP
     * 
     */
    @Import(name="allowWeakCiphersForEap", required=true)
    private Output<Boolean> allowWeakCiphersForEap;

    /**
     * @return Allow weak ciphers for EAP
     * 
     */
    public Output<Boolean> allowWeakCiphersForEap() {
        return this.allowWeakCiphersForEap;
    }

    /**
     * Description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Accept client certificates. Is required only if `eap_fast_use_pacs` is `false`.
     * 
     */
    @Import(name="eapFastAcceptClientCert")
    private @Nullable Output<Boolean> eapFastAcceptClientCert;

    /**
     * @return Accept client certificates. Is required only if `eap_fast_use_pacs` is `false`.
     * 
     */
    public Optional<Output<Boolean>> eapFastAcceptClientCert() {
        return Optional.ofNullable(this.eapFastAcceptClientCert);
    }

    /**
     * Allow machine authentication. Is required only if `eap_fast_use_pacs` is `false`.
     * 
     */
    @Import(name="eapFastAllowMachineAuthentication")
    private @Nullable Output<Boolean> eapFastAllowMachineAuthentication;

    /**
     * @return Allow machine authentication. Is required only if `eap_fast_use_pacs` is `false`.
     * 
     */
    public Optional<Output<Boolean>> eapFastAllowMachineAuthentication() {
        return Optional.ofNullable(this.eapFastAllowMachineAuthentication);
    }

    /**
     * Allow EAP GTC
     * 
     */
    @Import(name="eapFastEapGtc")
    private @Nullable Output<Boolean> eapFastEapGtc;

    /**
     * @return Allow EAP GTC
     * 
     */
    public Optional<Output<Boolean>> eapFastEapGtc() {
        return Optional.ofNullable(this.eapFastEapGtc);
    }

    /**
     * Allow EAP GTC password change. Is required only if `eap_fast_eap_gtc` is `true`.
     * 
     */
    @Import(name="eapFastEapGtcPwdChange")
    private @Nullable Output<Boolean> eapFastEapGtcPwdChange;

    /**
     * @return Allow EAP GTC password change. Is required only if `eap_fast_eap_gtc` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapFastEapGtcPwdChange() {
        return Optional.ofNullable(this.eapFastEapGtcPwdChange);
    }

    /**
     * EAP GTC password change retries. Is required only if `eap_fast_eap_gtc` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    @Import(name="eapFastEapGtcPwdChangeRetries")
    private @Nullable Output<Integer> eapFastEapGtcPwdChangeRetries;

    /**
     * @return EAP GTC password change retries. Is required only if `eap_fast_eap_gtc` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    public Optional<Output<Integer>> eapFastEapGtcPwdChangeRetries() {
        return Optional.ofNullable(this.eapFastEapGtcPwdChangeRetries);
    }

    /**
     * Allow EAP MS CHAP v2
     * 
     */
    @Import(name="eapFastEapMsChapV2")
    private @Nullable Output<Boolean> eapFastEapMsChapV2;

    /**
     * @return Allow EAP MS CHAP v2
     * 
     */
    public Optional<Output<Boolean>> eapFastEapMsChapV2() {
        return Optional.ofNullable(this.eapFastEapMsChapV2);
    }

    /**
     * Allow EAP MS CHAP v2 password change. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
     * 
     */
    @Import(name="eapFastEapMsChapV2PwdChange")
    private @Nullable Output<Boolean> eapFastEapMsChapV2PwdChange;

    /**
     * @return Allow EAP MS CHAP v2 password change. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapFastEapMsChapV2PwdChange() {
        return Optional.ofNullable(this.eapFastEapMsChapV2PwdChange);
    }

    /**
     * EAP MS CHAP v2 password change retries. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    @Import(name="eapFastEapMsChapV2PwdChangeRetries")
    private @Nullable Output<Integer> eapFastEapMsChapV2PwdChangeRetries;

    /**
     * @return EAP MS CHAP v2 password change retries. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    public Optional<Output<Integer>> eapFastEapMsChapV2PwdChangeRetries() {
        return Optional.ofNullable(this.eapFastEapMsChapV2PwdChangeRetries);
    }

    /**
     * Allow EAP TLS
     * 
     */
    @Import(name="eapFastEapTls")
    private @Nullable Output<Boolean> eapFastEapTls;

    /**
     * @return Allow EAP TLS
     * 
     */
    public Optional<Output<Boolean>> eapFastEapTls() {
        return Optional.ofNullable(this.eapFastEapTls);
    }

    /**
     * Allow EAP TLS authentication of expired certificates. Is required only if `eap_fast_eap_tls` is `true`.
     * 
     */
    @Import(name="eapFastEapTlsAuthOfExpiredCerts")
    private @Nullable Output<Boolean> eapFastEapTlsAuthOfExpiredCerts;

    /**
     * @return Allow EAP TLS authentication of expired certificates. Is required only if `eap_fast_eap_tls` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapFastEapTlsAuthOfExpiredCerts() {
        return Optional.ofNullable(this.eapFastEapTlsAuthOfExpiredCerts);
    }

    /**
     * Enable EAP chaining
     * 
     */
    @Import(name="eapFastEnableEapChaining")
    private @Nullable Output<Boolean> eapFastEnableEapChaining;

    /**
     * @return Enable EAP chaining
     * 
     */
    public Optional<Output<Boolean>> eapFastEnableEapChaining() {
        return Optional.ofNullable(this.eapFastEnableEapChaining);
    }

    /**
     * Allow anonymous provisioning. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Import(name="eapFastPacsAllowAnonymousProvisioning")
    private @Nullable Output<Boolean> eapFastPacsAllowAnonymousProvisioning;

    /**
     * @return Allow anonymous provisioning. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapFastPacsAllowAnonymousProvisioning() {
        return Optional.ofNullable(this.eapFastPacsAllowAnonymousProvisioning);
    }

    /**
     * Allow authenticated provisioning. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Import(name="eapFastPacsAllowAuthenticatedProvisioning")
    private @Nullable Output<Boolean> eapFastPacsAllowAuthenticatedProvisioning;

    /**
     * @return Allow authenticated provisioning. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapFastPacsAllowAuthenticatedProvisioning() {
        return Optional.ofNullable(this.eapFastPacsAllowAuthenticatedProvisioning);
    }

    /**
     * Accept client certification for provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
     * 
     */
    @Import(name="eapFastPacsAllowClientCert")
    private @Nullable Output<Boolean> eapFastPacsAllowClientCert;

    /**
     * @return Accept client certification for provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapFastPacsAllowClientCert() {
        return Optional.ofNullable(this.eapFastPacsAllowClientCert);
    }

    /**
     * Allow machine authentication. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Import(name="eapFastPacsAllowMachineAuthentication")
    private @Nullable Output<Boolean> eapFastPacsAllowMachineAuthentication;

    /**
     * @return Allow machine authentication. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapFastPacsAllowMachineAuthentication() {
        return Optional.ofNullable(this.eapFastPacsAllowMachineAuthentication);
    }

    /**
     * Authorization PAC TTL. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
     * 
     */
    @Import(name="eapFastPacsAuthorizationPacTtl")
    private @Nullable Output<Integer> eapFastPacsAuthorizationPacTtl;

    /**
     * @return Authorization PAC TTL. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
     * 
     */
    public Optional<Output<Integer>> eapFastPacsAuthorizationPacTtl() {
        return Optional.ofNullable(this.eapFastPacsAuthorizationPacTtl);
    }

    /**
     * Authorization PAC TTL unit. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
     *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    @Import(name="eapFastPacsAuthorizationPacTtlUnit")
    private @Nullable Output<String> eapFastPacsAuthorizationPacTtlUnit;

    /**
     * @return Authorization PAC TTL unit. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
     *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    public Optional<Output<String>> eapFastPacsAuthorizationPacTtlUnit() {
        return Optional.ofNullable(this.eapFastPacsAuthorizationPacTtlUnit);
    }

    /**
     * Machine PAC TTL. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
     * 
     */
    @Import(name="eapFastPacsMachinePacTtl")
    private @Nullable Output<Integer> eapFastPacsMachinePacTtl;

    /**
     * @return Machine PAC TTL. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
     * 
     */
    public Optional<Output<Integer>> eapFastPacsMachinePacTtl() {
        return Optional.ofNullable(this.eapFastPacsMachinePacTtl);
    }

    /**
     * Machine PAC TTL unit. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
     *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    @Import(name="eapFastPacsMachinePacTtlUnit")
    private @Nullable Output<String> eapFastPacsMachinePacTtlUnit;

    /**
     * @return Machine PAC TTL unit. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
     *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    public Optional<Output<String>> eapFastPacsMachinePacTtlUnit() {
        return Optional.ofNullable(this.eapFastPacsMachinePacTtlUnit);
    }

    /**
     * Server returns access accept after authenticated provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
     * 
     */
    @Import(name="eapFastPacsServerReturns")
    private @Nullable Output<Boolean> eapFastPacsServerReturns;

    /**
     * @return Server returns access accept after authenticated provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapFastPacsServerReturns() {
        return Optional.ofNullable(this.eapFastPacsServerReturns);
    }

    /**
     * Stateless session resume. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Import(name="eapFastPacsStatelessSessionResume")
    private @Nullable Output<Boolean> eapFastPacsStatelessSessionResume;

    /**
     * @return Stateless session resume. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapFastPacsStatelessSessionResume() {
        return Optional.ofNullable(this.eapFastPacsStatelessSessionResume);
    }

    /**
     * PACs tunnel PAC time to live. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    @Import(name="eapFastPacsTunnelPacTtl")
    private @Nullable Output<Integer> eapFastPacsTunnelPacTtl;

    /**
     * @return PACs tunnel PAC time to live. Is required only if `eap_fast_use_pacs` is `true`.
     * 
     */
    public Optional<Output<Integer>> eapFastPacsTunnelPacTtl() {
        return Optional.ofNullable(this.eapFastPacsTunnelPacTtl);
    }

    /**
     * PACs tunnel PAC time to live unit. Is required only if `eap_fast_use_pacs` is `true`.
     *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    @Import(name="eapFastPacsTunnelPacTtlUnit")
    private @Nullable Output<String> eapFastPacsTunnelPacTtlUnit;

    /**
     * @return PACs tunnel PAC time to live unit. Is required only if `eap_fast_use_pacs` is `true`.
     *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    public Optional<Output<String>> eapFastPacsTunnelPacTtlUnit() {
        return Optional.ofNullable(this.eapFastPacsTunnelPacTtlUnit);
    }

    /**
     * Use proactive pac update percentage. Is required only if `eap_fast_use_pacs` is `true`.
     *   - Range: `1`-`100`
     * 
     */
    @Import(name="eapFastPacsUseProactivePacUpdatePercentage")
    private @Nullable Output<Integer> eapFastPacsUseProactivePacUpdatePercentage;

    /**
     * @return Use proactive pac update percentage. Is required only if `eap_fast_use_pacs` is `true`.
     *   - Range: `1`-`100`
     * 
     */
    public Optional<Output<Integer>> eapFastPacsUseProactivePacUpdatePercentage() {
        return Optional.ofNullable(this.eapFastPacsUseProactivePacUpdatePercentage);
    }

    /**
     * Use PACs
     * 
     */
    @Import(name="eapFastUsePacs")
    private @Nullable Output<Boolean> eapFastUsePacs;

    /**
     * @return Use PACs
     * 
     */
    public Optional<Output<Boolean>> eapFastUsePacs() {
        return Optional.ofNullable(this.eapFastUsePacs);
    }

    /**
     * Allow authentication of expired certificates
     * 
     */
    @Import(name="eapTlsAllowAuthOfExpiredCerts")
    private @Nullable Output<Boolean> eapTlsAllowAuthOfExpiredCerts;

    /**
     * @return Allow authentication of expired certificates
     * 
     */
    public Optional<Output<Boolean>> eapTlsAllowAuthOfExpiredCerts() {
        return Optional.ofNullable(this.eapTlsAllowAuthOfExpiredCerts);
    }

    /**
     * Enable stateless session resume
     * 
     */
    @Import(name="eapTlsEnableStatelessSessionResume")
    private @Nullable Output<Boolean> eapTlsEnableStatelessSessionResume;

    /**
     * @return Enable stateless session resume
     * 
     */
    public Optional<Output<Boolean>> eapTlsEnableStatelessSessionResume() {
        return Optional.ofNullable(this.eapTlsEnableStatelessSessionResume);
    }

    /**
     * EAP TLS L-Bit
     * 
     */
    @Import(name="eapTlsLBit", required=true)
    private Output<Boolean> eapTlsLBit;

    /**
     * @return EAP TLS L-Bit
     * 
     */
    public Output<Boolean> eapTlsLBit() {
        return this.eapTlsLBit;
    }

    /**
     * Session ticket percentage. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
     *   - Range: `1`-`100`
     * 
     */
    @Import(name="eapTlsSessionTicketPercentage")
    private @Nullable Output<Integer> eapTlsSessionTicketPercentage;

    /**
     * @return Session ticket percentage. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
     *   - Range: `1`-`100`
     * 
     */
    public Optional<Output<Integer>> eapTlsSessionTicketPercentage() {
        return Optional.ofNullable(this.eapTlsSessionTicketPercentage);
    }

    /**
     * Session ticket TTL. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
     * 
     */
    @Import(name="eapTlsSessionTicketTtl")
    private @Nullable Output<Integer> eapTlsSessionTicketTtl;

    /**
     * @return Session ticket TTL. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
     * 
     */
    public Optional<Output<Integer>> eapTlsSessionTicketTtl() {
        return Optional.ofNullable(this.eapTlsSessionTicketTtl);
    }

    /**
     * Session ticket TTL unit. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
     *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    @Import(name="eapTlsSessionTicketTtlUnit")
    private @Nullable Output<String> eapTlsSessionTicketTtlUnit;

    /**
     * @return Session ticket TTL unit. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
     *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
     * 
     */
    public Optional<Output<String>> eapTlsSessionTicketTtlUnit() {
        return Optional.ofNullable(this.eapTlsSessionTicketTtlUnit);
    }

    /**
     * Allow CHAP
     * 
     */
    @Import(name="eapTtlsChap")
    private @Nullable Output<Boolean> eapTtlsChap;

    /**
     * @return Allow CHAP
     * 
     */
    public Optional<Output<Boolean>> eapTtlsChap() {
        return Optional.ofNullable(this.eapTtlsChap);
    }

    /**
     * Allow EAP MD5
     * 
     */
    @Import(name="eapTtlsEapMd5")
    private @Nullable Output<Boolean> eapTtlsEapMd5;

    /**
     * @return Allow EAP MD5
     * 
     */
    public Optional<Output<Boolean>> eapTtlsEapMd5() {
        return Optional.ofNullable(this.eapTtlsEapMd5);
    }

    /**
     * Allow EAP MS CHAP v2
     * 
     */
    @Import(name="eapTtlsEapMsChapV2")
    private @Nullable Output<Boolean> eapTtlsEapMsChapV2;

    /**
     * @return Allow EAP MS CHAP v2
     * 
     */
    public Optional<Output<Boolean>> eapTtlsEapMsChapV2() {
        return Optional.ofNullable(this.eapTtlsEapMsChapV2);
    }

    /**
     * Allow EAP MS CHAP v2 password change. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
     * 
     */
    @Import(name="eapTtlsEapMsChapV2PwdChange")
    private @Nullable Output<Boolean> eapTtlsEapMsChapV2PwdChange;

    /**
     * @return Allow EAP MS CHAP v2 password change. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
     * 
     */
    public Optional<Output<Boolean>> eapTtlsEapMsChapV2PwdChange() {
        return Optional.ofNullable(this.eapTtlsEapMsChapV2PwdChange);
    }

    /**
     * EAP MS CHAP v2 password change retries. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    @Import(name="eapTtlsEapMsChapV2PwdChangeRetries")
    private @Nullable Output<Integer> eapTtlsEapMsChapV2PwdChangeRetries;

    /**
     * @return EAP MS CHAP v2 password change retries. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    public Optional<Output<Integer>> eapTtlsEapMsChapV2PwdChangeRetries() {
        return Optional.ofNullable(this.eapTtlsEapMsChapV2PwdChangeRetries);
    }

    /**
     * Allow MS CHAP v1
     * 
     */
    @Import(name="eapTtlsMsChapV1")
    private @Nullable Output<Boolean> eapTtlsMsChapV1;

    /**
     * @return Allow MS CHAP v1
     * 
     */
    public Optional<Output<Boolean>> eapTtlsMsChapV1() {
        return Optional.ofNullable(this.eapTtlsMsChapV1);
    }

    /**
     * Allow MS CHAP v2
     * 
     */
    @Import(name="eapTtlsMsChapV2")
    private @Nullable Output<Boolean> eapTtlsMsChapV2;

    /**
     * @return Allow MS CHAP v2
     * 
     */
    public Optional<Output<Boolean>> eapTtlsMsChapV2() {
        return Optional.ofNullable(this.eapTtlsMsChapV2);
    }

    /**
     * Allow PAP ASCII
     * 
     */
    @Import(name="eapTtlsPapAscii")
    private @Nullable Output<Boolean> eapTtlsPapAscii;

    /**
     * @return Allow PAP ASCII
     * 
     */
    public Optional<Output<Boolean>> eapTtlsPapAscii() {
        return Optional.ofNullable(this.eapTtlsPapAscii);
    }

    /**
     * The name of the allowed protocols
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the allowed protocols
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Allow PEAP EAP GTC
     * 
     */
    @Import(name="peapAllowPeapEapGtc")
    private @Nullable Output<Boolean> peapAllowPeapEapGtc;

    /**
     * @return Allow PEAP EAP GTC
     * 
     */
    public Optional<Output<Boolean>> peapAllowPeapEapGtc() {
        return Optional.ofNullable(this.peapAllowPeapEapGtc);
    }

    /**
     * Allow PEAP EAP GTC password change. Is required only if `allow_peap_eap_gtc` is `true`.
     * 
     */
    @Import(name="peapAllowPeapEapGtcPwdChange")
    private @Nullable Output<Boolean> peapAllowPeapEapGtcPwdChange;

    /**
     * @return Allow PEAP EAP GTC password change. Is required only if `allow_peap_eap_gtc` is `true`.
     * 
     */
    public Optional<Output<Boolean>> peapAllowPeapEapGtcPwdChange() {
        return Optional.ofNullable(this.peapAllowPeapEapGtcPwdChange);
    }

    /**
     * PEAP EAP GTC password change retries. Is required only if `allow_peap_eap_gtc` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    @Import(name="peapAllowPeapEapGtcPwdChangeRetries")
    private @Nullable Output<Integer> peapAllowPeapEapGtcPwdChangeRetries;

    /**
     * @return PEAP EAP GTC password change retries. Is required only if `allow_peap_eap_gtc` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    public Optional<Output<Integer>> peapAllowPeapEapGtcPwdChangeRetries() {
        return Optional.ofNullable(this.peapAllowPeapEapGtcPwdChangeRetries);
    }

    /**
     * Allow PEAP EAP MS CHAP v2
     * 
     */
    @Import(name="peapAllowPeapEapMsChapV2")
    private @Nullable Output<Boolean> peapAllowPeapEapMsChapV2;

    /**
     * @return Allow PEAP EAP MS CHAP v2
     * 
     */
    public Optional<Output<Boolean>> peapAllowPeapEapMsChapV2() {
        return Optional.ofNullable(this.peapAllowPeapEapMsChapV2);
    }

    /**
     * Allow PEAP EAP MS CHAP v2 password change. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
     * 
     */
    @Import(name="peapAllowPeapEapMsChapV2PwdChange")
    private @Nullable Output<Boolean> peapAllowPeapEapMsChapV2PwdChange;

    /**
     * @return Allow PEAP EAP MS CHAP v2 password change. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
     * 
     */
    public Optional<Output<Boolean>> peapAllowPeapEapMsChapV2PwdChange() {
        return Optional.ofNullable(this.peapAllowPeapEapMsChapV2PwdChange);
    }

    /**
     * Allow PEAP EAP MS CHAP v2 password change retries. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    @Import(name="peapAllowPeapEapMsChapV2PwdChangeRetries")
    private @Nullable Output<Integer> peapAllowPeapEapMsChapV2PwdChangeRetries;

    /**
     * @return Allow PEAP EAP MS CHAP v2 password change retries. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    public Optional<Output<Integer>> peapAllowPeapEapMsChapV2PwdChangeRetries() {
        return Optional.ofNullable(this.peapAllowPeapEapMsChapV2PwdChangeRetries);
    }

    /**
     * Allow PEAP EAP TLS
     * 
     */
    @Import(name="peapAllowPeapEapTls")
    private @Nullable Output<Boolean> peapAllowPeapEapTls;

    /**
     * @return Allow PEAP EAP TLS
     * 
     */
    public Optional<Output<Boolean>> peapAllowPeapEapTls() {
        return Optional.ofNullable(this.peapAllowPeapEapTls);
    }

    /**
     * Allow PEAP EAP TLS authentication of expired certificates. Is required only if `peap_allow_peap_eap_tls` is `true`.
     * 
     */
    @Import(name="peapAllowPeapEapTlsAuthOfExpiredCerts")
    private @Nullable Output<Boolean> peapAllowPeapEapTlsAuthOfExpiredCerts;

    /**
     * @return Allow PEAP EAP TLS authentication of expired certificates. Is required only if `peap_allow_peap_eap_tls` is `true`.
     * 
     */
    public Optional<Output<Boolean>> peapAllowPeapEapTlsAuthOfExpiredCerts() {
        return Optional.ofNullable(this.peapAllowPeapEapTlsAuthOfExpiredCerts);
    }

    /**
     * Allow PEAP v0
     * 
     */
    @Import(name="peapPeapV0")
    private @Nullable Output<Boolean> peapPeapV0;

    /**
     * @return Allow PEAP v0
     * 
     */
    public Optional<Output<Boolean>> peapPeapV0() {
        return Optional.ofNullable(this.peapPeapV0);
    }

    /**
     * Preferred EAP protocol
     *   - Choices: `EAP_FAST`, `PEAP`, `LEAP`, `EAP_MD5`, `EAP_TLS`, `EAP_TTLS`, `TEAP`
     * 
     */
    @Import(name="preferredEapProtocol")
    private @Nullable Output<String> preferredEapProtocol;

    /**
     * @return Preferred EAP protocol
     *   - Choices: `EAP_FAST`, `PEAP`, `LEAP`, `EAP_MD5`, `EAP_TLS`, `EAP_TTLS`, `TEAP`
     * 
     */
    public Optional<Output<String>> preferredEapProtocol() {
        return Optional.ofNullable(this.preferredEapProtocol);
    }

    /**
     * Process host lookup
     * 
     */
    @Import(name="processHostLookup", required=true)
    private Output<Boolean> processHostLookup;

    /**
     * @return Process host lookup
     * 
     */
    public Output<Boolean> processHostLookup() {
        return this.processHostLookup;
    }

    /**
     * Require cryptobinding
     * 
     */
    @Import(name="requireCryptobinding")
    private @Nullable Output<Boolean> requireCryptobinding;

    /**
     * @return Require cryptobinding
     * 
     */
    public Optional<Output<Boolean>> requireCryptobinding() {
        return Optional.ofNullable(this.requireCryptobinding);
    }

    /**
     * Require message authentication
     * 
     */
    @Import(name="requireMessageAuth", required=true)
    private Output<Boolean> requireMessageAuth;

    /**
     * @return Require message authentication
     * 
     */
    public Output<Boolean> requireMessageAuth() {
        return this.requireMessageAuth;
    }

    /**
     * Allow downgrade to MSK
     * 
     */
    @Import(name="teapDowngradeMsk")
    private @Nullable Output<Boolean> teapDowngradeMsk;

    /**
     * @return Allow downgrade to MSK
     * 
     */
    public Optional<Output<Boolean>> teapDowngradeMsk() {
        return Optional.ofNullable(this.teapDowngradeMsk);
    }

    /**
     * Accept client certificate during tunnel establishment
     * 
     */
    @Import(name="teapEapAcceptClientCertDuringTunnelEst")
    private @Nullable Output<Boolean> teapEapAcceptClientCertDuringTunnelEst;

    /**
     * @return Accept client certificate during tunnel establishment
     * 
     */
    public Optional<Output<Boolean>> teapEapAcceptClientCertDuringTunnelEst() {
        return Optional.ofNullable(this.teapEapAcceptClientCertDuringTunnelEst);
    }

    /**
     * Allow EAP chaining
     * 
     */
    @Import(name="teapEapChaining")
    private @Nullable Output<Boolean> teapEapChaining;

    /**
     * @return Allow EAP chaining
     * 
     */
    public Optional<Output<Boolean>> teapEapChaining() {
        return Optional.ofNullable(this.teapEapChaining);
    }

    /**
     * Allow EAP MS CHAP v2
     * 
     */
    @Import(name="teapEapMsChapV2")
    private @Nullable Output<Boolean> teapEapMsChapV2;

    /**
     * @return Allow EAP MS CHAP v2
     * 
     */
    public Optional<Output<Boolean>> teapEapMsChapV2() {
        return Optional.ofNullable(this.teapEapMsChapV2);
    }

    /**
     * Allow EAP MS CHAP v2 password change. Is required only if `teap_eap_ms_chap_v2` is `true`.
     * 
     */
    @Import(name="teapEapMsChapV2PwdChange")
    private @Nullable Output<Boolean> teapEapMsChapV2PwdChange;

    /**
     * @return Allow EAP MS CHAP v2 password change. Is required only if `teap_eap_ms_chap_v2` is `true`.
     * 
     */
    public Optional<Output<Boolean>> teapEapMsChapV2PwdChange() {
        return Optional.ofNullable(this.teapEapMsChapV2PwdChange);
    }

    /**
     * EAP MS CHAP v2 password change retries. Is required only if `teap_eap_ms_chap_v2` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    @Import(name="teapEapMsChapV2PwdChangeRetries")
    private @Nullable Output<Integer> teapEapMsChapV2PwdChangeRetries;

    /**
     * @return EAP MS CHAP v2 password change retries. Is required only if `teap_eap_ms_chap_v2` is `true`.
     *   - Range: `0`-`3`
     * 
     */
    public Optional<Output<Integer>> teapEapMsChapV2PwdChangeRetries() {
        return Optional.ofNullable(this.teapEapMsChapV2PwdChangeRetries);
    }

    /**
     * Allow EAP TLS
     * 
     */
    @Import(name="teapEapTls")
    private @Nullable Output<Boolean> teapEapTls;

    /**
     * @return Allow EAP TLS
     * 
     */
    public Optional<Output<Boolean>> teapEapTls() {
        return Optional.ofNullable(this.teapEapTls);
    }

    /**
     * Allow EAP TLS authentication of expired certs. Is required only if `teap_eap_tls` is `true`.
     * 
     */
    @Import(name="teapEapTlsAuthOfExpiredCerts")
    private @Nullable Output<Boolean> teapEapTlsAuthOfExpiredCerts;

    /**
     * @return Allow EAP TLS authentication of expired certs. Is required only if `teap_eap_tls` is `true`.
     * 
     */
    public Optional<Output<Boolean>> teapEapTlsAuthOfExpiredCerts() {
        return Optional.ofNullable(this.teapEapTlsAuthOfExpiredCerts);
    }

    /**
     * Request basic password authentication
     * 
     */
    @Import(name="teapRequestBasicPwdAuth")
    private @Nullable Output<Boolean> teapRequestBasicPwdAuth;

    /**
     * @return Request basic password authentication
     * 
     */
    public Optional<Output<Boolean>> teapRequestBasicPwdAuth() {
        return Optional.ofNullable(this.teapRequestBasicPwdAuth);
    }

    private AllowedProtocolsArgs() {}

    private AllowedProtocolsArgs(AllowedProtocolsArgs $) {
        this.allow5g = $.allow5g;
        this.allowChap = $.allowChap;
        this.allowEapFast = $.allowEapFast;
        this.allowEapMd5 = $.allowEapMd5;
        this.allowEapTls = $.allowEapTls;
        this.allowEapTtls = $.allowEapTtls;
        this.allowLeap = $.allowLeap;
        this.allowMsChapV1 = $.allowMsChapV1;
        this.allowMsChapV2 = $.allowMsChapV2;
        this.allowPapAscii = $.allowPapAscii;
        this.allowPeap = $.allowPeap;
        this.allowPreferredEapProtocol = $.allowPreferredEapProtocol;
        this.allowTeap = $.allowTeap;
        this.allowWeakCiphersForEap = $.allowWeakCiphersForEap;
        this.description = $.description;
        this.eapFastAcceptClientCert = $.eapFastAcceptClientCert;
        this.eapFastAllowMachineAuthentication = $.eapFastAllowMachineAuthentication;
        this.eapFastEapGtc = $.eapFastEapGtc;
        this.eapFastEapGtcPwdChange = $.eapFastEapGtcPwdChange;
        this.eapFastEapGtcPwdChangeRetries = $.eapFastEapGtcPwdChangeRetries;
        this.eapFastEapMsChapV2 = $.eapFastEapMsChapV2;
        this.eapFastEapMsChapV2PwdChange = $.eapFastEapMsChapV2PwdChange;
        this.eapFastEapMsChapV2PwdChangeRetries = $.eapFastEapMsChapV2PwdChangeRetries;
        this.eapFastEapTls = $.eapFastEapTls;
        this.eapFastEapTlsAuthOfExpiredCerts = $.eapFastEapTlsAuthOfExpiredCerts;
        this.eapFastEnableEapChaining = $.eapFastEnableEapChaining;
        this.eapFastPacsAllowAnonymousProvisioning = $.eapFastPacsAllowAnonymousProvisioning;
        this.eapFastPacsAllowAuthenticatedProvisioning = $.eapFastPacsAllowAuthenticatedProvisioning;
        this.eapFastPacsAllowClientCert = $.eapFastPacsAllowClientCert;
        this.eapFastPacsAllowMachineAuthentication = $.eapFastPacsAllowMachineAuthentication;
        this.eapFastPacsAuthorizationPacTtl = $.eapFastPacsAuthorizationPacTtl;
        this.eapFastPacsAuthorizationPacTtlUnit = $.eapFastPacsAuthorizationPacTtlUnit;
        this.eapFastPacsMachinePacTtl = $.eapFastPacsMachinePacTtl;
        this.eapFastPacsMachinePacTtlUnit = $.eapFastPacsMachinePacTtlUnit;
        this.eapFastPacsServerReturns = $.eapFastPacsServerReturns;
        this.eapFastPacsStatelessSessionResume = $.eapFastPacsStatelessSessionResume;
        this.eapFastPacsTunnelPacTtl = $.eapFastPacsTunnelPacTtl;
        this.eapFastPacsTunnelPacTtlUnit = $.eapFastPacsTunnelPacTtlUnit;
        this.eapFastPacsUseProactivePacUpdatePercentage = $.eapFastPacsUseProactivePacUpdatePercentage;
        this.eapFastUsePacs = $.eapFastUsePacs;
        this.eapTlsAllowAuthOfExpiredCerts = $.eapTlsAllowAuthOfExpiredCerts;
        this.eapTlsEnableStatelessSessionResume = $.eapTlsEnableStatelessSessionResume;
        this.eapTlsLBit = $.eapTlsLBit;
        this.eapTlsSessionTicketPercentage = $.eapTlsSessionTicketPercentage;
        this.eapTlsSessionTicketTtl = $.eapTlsSessionTicketTtl;
        this.eapTlsSessionTicketTtlUnit = $.eapTlsSessionTicketTtlUnit;
        this.eapTtlsChap = $.eapTtlsChap;
        this.eapTtlsEapMd5 = $.eapTtlsEapMd5;
        this.eapTtlsEapMsChapV2 = $.eapTtlsEapMsChapV2;
        this.eapTtlsEapMsChapV2PwdChange = $.eapTtlsEapMsChapV2PwdChange;
        this.eapTtlsEapMsChapV2PwdChangeRetries = $.eapTtlsEapMsChapV2PwdChangeRetries;
        this.eapTtlsMsChapV1 = $.eapTtlsMsChapV1;
        this.eapTtlsMsChapV2 = $.eapTtlsMsChapV2;
        this.eapTtlsPapAscii = $.eapTtlsPapAscii;
        this.name = $.name;
        this.peapAllowPeapEapGtc = $.peapAllowPeapEapGtc;
        this.peapAllowPeapEapGtcPwdChange = $.peapAllowPeapEapGtcPwdChange;
        this.peapAllowPeapEapGtcPwdChangeRetries = $.peapAllowPeapEapGtcPwdChangeRetries;
        this.peapAllowPeapEapMsChapV2 = $.peapAllowPeapEapMsChapV2;
        this.peapAllowPeapEapMsChapV2PwdChange = $.peapAllowPeapEapMsChapV2PwdChange;
        this.peapAllowPeapEapMsChapV2PwdChangeRetries = $.peapAllowPeapEapMsChapV2PwdChangeRetries;
        this.peapAllowPeapEapTls = $.peapAllowPeapEapTls;
        this.peapAllowPeapEapTlsAuthOfExpiredCerts = $.peapAllowPeapEapTlsAuthOfExpiredCerts;
        this.peapPeapV0 = $.peapPeapV0;
        this.preferredEapProtocol = $.preferredEapProtocol;
        this.processHostLookup = $.processHostLookup;
        this.requireCryptobinding = $.requireCryptobinding;
        this.requireMessageAuth = $.requireMessageAuth;
        this.teapDowngradeMsk = $.teapDowngradeMsk;
        this.teapEapAcceptClientCertDuringTunnelEst = $.teapEapAcceptClientCertDuringTunnelEst;
        this.teapEapChaining = $.teapEapChaining;
        this.teapEapMsChapV2 = $.teapEapMsChapV2;
        this.teapEapMsChapV2PwdChange = $.teapEapMsChapV2PwdChange;
        this.teapEapMsChapV2PwdChangeRetries = $.teapEapMsChapV2PwdChangeRetries;
        this.teapEapTls = $.teapEapTls;
        this.teapEapTlsAuthOfExpiredCerts = $.teapEapTlsAuthOfExpiredCerts;
        this.teapRequestBasicPwdAuth = $.teapRequestBasicPwdAuth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AllowedProtocolsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AllowedProtocolsArgs $;

        public Builder() {
            $ = new AllowedProtocolsArgs();
        }

        public Builder(AllowedProtocolsArgs defaults) {
            $ = new AllowedProtocolsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allow5g Allow 5G. This field is only supported from ISE 3.2.
         * 
         * @return builder
         * 
         */
        public Builder allow5g(@Nullable Output<Boolean> allow5g) {
            $.allow5g = allow5g;
            return this;
        }

        /**
         * @param allow5g Allow 5G. This field is only supported from ISE 3.2.
         * 
         * @return builder
         * 
         */
        public Builder allow5g(Boolean allow5g) {
            return allow5g(Output.of(allow5g));
        }

        /**
         * @param allowChap Allow CHAP
         * 
         * @return builder
         * 
         */
        public Builder allowChap(Output<Boolean> allowChap) {
            $.allowChap = allowChap;
            return this;
        }

        /**
         * @param allowChap Allow CHAP
         * 
         * @return builder
         * 
         */
        public Builder allowChap(Boolean allowChap) {
            return allowChap(Output.of(allowChap));
        }

        /**
         * @param allowEapFast Allow EAP Fast
         * 
         * @return builder
         * 
         */
        public Builder allowEapFast(Output<Boolean> allowEapFast) {
            $.allowEapFast = allowEapFast;
            return this;
        }

        /**
         * @param allowEapFast Allow EAP Fast
         * 
         * @return builder
         * 
         */
        public Builder allowEapFast(Boolean allowEapFast) {
            return allowEapFast(Output.of(allowEapFast));
        }

        /**
         * @param allowEapMd5 Allow EAP MD5
         * 
         * @return builder
         * 
         */
        public Builder allowEapMd5(Output<Boolean> allowEapMd5) {
            $.allowEapMd5 = allowEapMd5;
            return this;
        }

        /**
         * @param allowEapMd5 Allow EAP MD5
         * 
         * @return builder
         * 
         */
        public Builder allowEapMd5(Boolean allowEapMd5) {
            return allowEapMd5(Output.of(allowEapMd5));
        }

        /**
         * @param allowEapTls Allow EAP TLS
         * 
         * @return builder
         * 
         */
        public Builder allowEapTls(Output<Boolean> allowEapTls) {
            $.allowEapTls = allowEapTls;
            return this;
        }

        /**
         * @param allowEapTls Allow EAP TLS
         * 
         * @return builder
         * 
         */
        public Builder allowEapTls(Boolean allowEapTls) {
            return allowEapTls(Output.of(allowEapTls));
        }

        /**
         * @param allowEapTtls Allow EAP TTLS
         * 
         * @return builder
         * 
         */
        public Builder allowEapTtls(Output<Boolean> allowEapTtls) {
            $.allowEapTtls = allowEapTtls;
            return this;
        }

        /**
         * @param allowEapTtls Allow EAP TTLS
         * 
         * @return builder
         * 
         */
        public Builder allowEapTtls(Boolean allowEapTtls) {
            return allowEapTtls(Output.of(allowEapTtls));
        }

        /**
         * @param allowLeap Allow LEAP
         * 
         * @return builder
         * 
         */
        public Builder allowLeap(Output<Boolean> allowLeap) {
            $.allowLeap = allowLeap;
            return this;
        }

        /**
         * @param allowLeap Allow LEAP
         * 
         * @return builder
         * 
         */
        public Builder allowLeap(Boolean allowLeap) {
            return allowLeap(Output.of(allowLeap));
        }

        /**
         * @param allowMsChapV1 Allow MS CHAP v1
         * 
         * @return builder
         * 
         */
        public Builder allowMsChapV1(Output<Boolean> allowMsChapV1) {
            $.allowMsChapV1 = allowMsChapV1;
            return this;
        }

        /**
         * @param allowMsChapV1 Allow MS CHAP v1
         * 
         * @return builder
         * 
         */
        public Builder allowMsChapV1(Boolean allowMsChapV1) {
            return allowMsChapV1(Output.of(allowMsChapV1));
        }

        /**
         * @param allowMsChapV2 Allow MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder allowMsChapV2(Output<Boolean> allowMsChapV2) {
            $.allowMsChapV2 = allowMsChapV2;
            return this;
        }

        /**
         * @param allowMsChapV2 Allow MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder allowMsChapV2(Boolean allowMsChapV2) {
            return allowMsChapV2(Output.of(allowMsChapV2));
        }

        /**
         * @param allowPapAscii Allow PAP ASCII
         * 
         * @return builder
         * 
         */
        public Builder allowPapAscii(Output<Boolean> allowPapAscii) {
            $.allowPapAscii = allowPapAscii;
            return this;
        }

        /**
         * @param allowPapAscii Allow PAP ASCII
         * 
         * @return builder
         * 
         */
        public Builder allowPapAscii(Boolean allowPapAscii) {
            return allowPapAscii(Output.of(allowPapAscii));
        }

        /**
         * @param allowPeap Allow PEAP
         * 
         * @return builder
         * 
         */
        public Builder allowPeap(Output<Boolean> allowPeap) {
            $.allowPeap = allowPeap;
            return this;
        }

        /**
         * @param allowPeap Allow PEAP
         * 
         * @return builder
         * 
         */
        public Builder allowPeap(Boolean allowPeap) {
            return allowPeap(Output.of(allowPeap));
        }

        /**
         * @param allowPreferredEapProtocol Allow preferred EAP protocol
         * 
         * @return builder
         * 
         */
        public Builder allowPreferredEapProtocol(Output<Boolean> allowPreferredEapProtocol) {
            $.allowPreferredEapProtocol = allowPreferredEapProtocol;
            return this;
        }

        /**
         * @param allowPreferredEapProtocol Allow preferred EAP protocol
         * 
         * @return builder
         * 
         */
        public Builder allowPreferredEapProtocol(Boolean allowPreferredEapProtocol) {
            return allowPreferredEapProtocol(Output.of(allowPreferredEapProtocol));
        }

        /**
         * @param allowTeap Allow TEAP
         * 
         * @return builder
         * 
         */
        public Builder allowTeap(Output<Boolean> allowTeap) {
            $.allowTeap = allowTeap;
            return this;
        }

        /**
         * @param allowTeap Allow TEAP
         * 
         * @return builder
         * 
         */
        public Builder allowTeap(Boolean allowTeap) {
            return allowTeap(Output.of(allowTeap));
        }

        /**
         * @param allowWeakCiphersForEap Allow weak ciphers for EAP
         * 
         * @return builder
         * 
         */
        public Builder allowWeakCiphersForEap(Output<Boolean> allowWeakCiphersForEap) {
            $.allowWeakCiphersForEap = allowWeakCiphersForEap;
            return this;
        }

        /**
         * @param allowWeakCiphersForEap Allow weak ciphers for EAP
         * 
         * @return builder
         * 
         */
        public Builder allowWeakCiphersForEap(Boolean allowWeakCiphersForEap) {
            return allowWeakCiphersForEap(Output.of(allowWeakCiphersForEap));
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param eapFastAcceptClientCert Accept client certificates. Is required only if `eap_fast_use_pacs` is `false`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastAcceptClientCert(@Nullable Output<Boolean> eapFastAcceptClientCert) {
            $.eapFastAcceptClientCert = eapFastAcceptClientCert;
            return this;
        }

        /**
         * @param eapFastAcceptClientCert Accept client certificates. Is required only if `eap_fast_use_pacs` is `false`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastAcceptClientCert(Boolean eapFastAcceptClientCert) {
            return eapFastAcceptClientCert(Output.of(eapFastAcceptClientCert));
        }

        /**
         * @param eapFastAllowMachineAuthentication Allow machine authentication. Is required only if `eap_fast_use_pacs` is `false`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastAllowMachineAuthentication(@Nullable Output<Boolean> eapFastAllowMachineAuthentication) {
            $.eapFastAllowMachineAuthentication = eapFastAllowMachineAuthentication;
            return this;
        }

        /**
         * @param eapFastAllowMachineAuthentication Allow machine authentication. Is required only if `eap_fast_use_pacs` is `false`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastAllowMachineAuthentication(Boolean eapFastAllowMachineAuthentication) {
            return eapFastAllowMachineAuthentication(Output.of(eapFastAllowMachineAuthentication));
        }

        /**
         * @param eapFastEapGtc Allow EAP GTC
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapGtc(@Nullable Output<Boolean> eapFastEapGtc) {
            $.eapFastEapGtc = eapFastEapGtc;
            return this;
        }

        /**
         * @param eapFastEapGtc Allow EAP GTC
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapGtc(Boolean eapFastEapGtc) {
            return eapFastEapGtc(Output.of(eapFastEapGtc));
        }

        /**
         * @param eapFastEapGtcPwdChange Allow EAP GTC password change. Is required only if `eap_fast_eap_gtc` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapGtcPwdChange(@Nullable Output<Boolean> eapFastEapGtcPwdChange) {
            $.eapFastEapGtcPwdChange = eapFastEapGtcPwdChange;
            return this;
        }

        /**
         * @param eapFastEapGtcPwdChange Allow EAP GTC password change. Is required only if `eap_fast_eap_gtc` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapGtcPwdChange(Boolean eapFastEapGtcPwdChange) {
            return eapFastEapGtcPwdChange(Output.of(eapFastEapGtcPwdChange));
        }

        /**
         * @param eapFastEapGtcPwdChangeRetries EAP GTC password change retries. Is required only if `eap_fast_eap_gtc` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapGtcPwdChangeRetries(@Nullable Output<Integer> eapFastEapGtcPwdChangeRetries) {
            $.eapFastEapGtcPwdChangeRetries = eapFastEapGtcPwdChangeRetries;
            return this;
        }

        /**
         * @param eapFastEapGtcPwdChangeRetries EAP GTC password change retries. Is required only if `eap_fast_eap_gtc` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapGtcPwdChangeRetries(Integer eapFastEapGtcPwdChangeRetries) {
            return eapFastEapGtcPwdChangeRetries(Output.of(eapFastEapGtcPwdChangeRetries));
        }

        /**
         * @param eapFastEapMsChapV2 Allow EAP MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapMsChapV2(@Nullable Output<Boolean> eapFastEapMsChapV2) {
            $.eapFastEapMsChapV2 = eapFastEapMsChapV2;
            return this;
        }

        /**
         * @param eapFastEapMsChapV2 Allow EAP MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapMsChapV2(Boolean eapFastEapMsChapV2) {
            return eapFastEapMsChapV2(Output.of(eapFastEapMsChapV2));
        }

        /**
         * @param eapFastEapMsChapV2PwdChange Allow EAP MS CHAP v2 password change. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapMsChapV2PwdChange(@Nullable Output<Boolean> eapFastEapMsChapV2PwdChange) {
            $.eapFastEapMsChapV2PwdChange = eapFastEapMsChapV2PwdChange;
            return this;
        }

        /**
         * @param eapFastEapMsChapV2PwdChange Allow EAP MS CHAP v2 password change. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapMsChapV2PwdChange(Boolean eapFastEapMsChapV2PwdChange) {
            return eapFastEapMsChapV2PwdChange(Output.of(eapFastEapMsChapV2PwdChange));
        }

        /**
         * @param eapFastEapMsChapV2PwdChangeRetries EAP MS CHAP v2 password change retries. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapMsChapV2PwdChangeRetries(@Nullable Output<Integer> eapFastEapMsChapV2PwdChangeRetries) {
            $.eapFastEapMsChapV2PwdChangeRetries = eapFastEapMsChapV2PwdChangeRetries;
            return this;
        }

        /**
         * @param eapFastEapMsChapV2PwdChangeRetries EAP MS CHAP v2 password change retries. Is required only if `eap_fast_eap_ms_chap_v2` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapMsChapV2PwdChangeRetries(Integer eapFastEapMsChapV2PwdChangeRetries) {
            return eapFastEapMsChapV2PwdChangeRetries(Output.of(eapFastEapMsChapV2PwdChangeRetries));
        }

        /**
         * @param eapFastEapTls Allow EAP TLS
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapTls(@Nullable Output<Boolean> eapFastEapTls) {
            $.eapFastEapTls = eapFastEapTls;
            return this;
        }

        /**
         * @param eapFastEapTls Allow EAP TLS
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapTls(Boolean eapFastEapTls) {
            return eapFastEapTls(Output.of(eapFastEapTls));
        }

        /**
         * @param eapFastEapTlsAuthOfExpiredCerts Allow EAP TLS authentication of expired certificates. Is required only if `eap_fast_eap_tls` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapTlsAuthOfExpiredCerts(@Nullable Output<Boolean> eapFastEapTlsAuthOfExpiredCerts) {
            $.eapFastEapTlsAuthOfExpiredCerts = eapFastEapTlsAuthOfExpiredCerts;
            return this;
        }

        /**
         * @param eapFastEapTlsAuthOfExpiredCerts Allow EAP TLS authentication of expired certificates. Is required only if `eap_fast_eap_tls` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastEapTlsAuthOfExpiredCerts(Boolean eapFastEapTlsAuthOfExpiredCerts) {
            return eapFastEapTlsAuthOfExpiredCerts(Output.of(eapFastEapTlsAuthOfExpiredCerts));
        }

        /**
         * @param eapFastEnableEapChaining Enable EAP chaining
         * 
         * @return builder
         * 
         */
        public Builder eapFastEnableEapChaining(@Nullable Output<Boolean> eapFastEnableEapChaining) {
            $.eapFastEnableEapChaining = eapFastEnableEapChaining;
            return this;
        }

        /**
         * @param eapFastEnableEapChaining Enable EAP chaining
         * 
         * @return builder
         * 
         */
        public Builder eapFastEnableEapChaining(Boolean eapFastEnableEapChaining) {
            return eapFastEnableEapChaining(Output.of(eapFastEnableEapChaining));
        }

        /**
         * @param eapFastPacsAllowAnonymousProvisioning Allow anonymous provisioning. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAllowAnonymousProvisioning(@Nullable Output<Boolean> eapFastPacsAllowAnonymousProvisioning) {
            $.eapFastPacsAllowAnonymousProvisioning = eapFastPacsAllowAnonymousProvisioning;
            return this;
        }

        /**
         * @param eapFastPacsAllowAnonymousProvisioning Allow anonymous provisioning. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAllowAnonymousProvisioning(Boolean eapFastPacsAllowAnonymousProvisioning) {
            return eapFastPacsAllowAnonymousProvisioning(Output.of(eapFastPacsAllowAnonymousProvisioning));
        }

        /**
         * @param eapFastPacsAllowAuthenticatedProvisioning Allow authenticated provisioning. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAllowAuthenticatedProvisioning(@Nullable Output<Boolean> eapFastPacsAllowAuthenticatedProvisioning) {
            $.eapFastPacsAllowAuthenticatedProvisioning = eapFastPacsAllowAuthenticatedProvisioning;
            return this;
        }

        /**
         * @param eapFastPacsAllowAuthenticatedProvisioning Allow authenticated provisioning. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAllowAuthenticatedProvisioning(Boolean eapFastPacsAllowAuthenticatedProvisioning) {
            return eapFastPacsAllowAuthenticatedProvisioning(Output.of(eapFastPacsAllowAuthenticatedProvisioning));
        }

        /**
         * @param eapFastPacsAllowClientCert Accept client certification for provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAllowClientCert(@Nullable Output<Boolean> eapFastPacsAllowClientCert) {
            $.eapFastPacsAllowClientCert = eapFastPacsAllowClientCert;
            return this;
        }

        /**
         * @param eapFastPacsAllowClientCert Accept client certification for provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAllowClientCert(Boolean eapFastPacsAllowClientCert) {
            return eapFastPacsAllowClientCert(Output.of(eapFastPacsAllowClientCert));
        }

        /**
         * @param eapFastPacsAllowMachineAuthentication Allow machine authentication. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAllowMachineAuthentication(@Nullable Output<Boolean> eapFastPacsAllowMachineAuthentication) {
            $.eapFastPacsAllowMachineAuthentication = eapFastPacsAllowMachineAuthentication;
            return this;
        }

        /**
         * @param eapFastPacsAllowMachineAuthentication Allow machine authentication. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAllowMachineAuthentication(Boolean eapFastPacsAllowMachineAuthentication) {
            return eapFastPacsAllowMachineAuthentication(Output.of(eapFastPacsAllowMachineAuthentication));
        }

        /**
         * @param eapFastPacsAuthorizationPacTtl Authorization PAC TTL. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAuthorizationPacTtl(@Nullable Output<Integer> eapFastPacsAuthorizationPacTtl) {
            $.eapFastPacsAuthorizationPacTtl = eapFastPacsAuthorizationPacTtl;
            return this;
        }

        /**
         * @param eapFastPacsAuthorizationPacTtl Authorization PAC TTL. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAuthorizationPacTtl(Integer eapFastPacsAuthorizationPacTtl) {
            return eapFastPacsAuthorizationPacTtl(Output.of(eapFastPacsAuthorizationPacTtl));
        }

        /**
         * @param eapFastPacsAuthorizationPacTtlUnit Authorization PAC TTL unit. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
         *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAuthorizationPacTtlUnit(@Nullable Output<String> eapFastPacsAuthorizationPacTtlUnit) {
            $.eapFastPacsAuthorizationPacTtlUnit = eapFastPacsAuthorizationPacTtlUnit;
            return this;
        }

        /**
         * @param eapFastPacsAuthorizationPacTtlUnit Authorization PAC TTL unit. Is required only if `eap_fast_pacs_stateless_session_resume` is `true`.
         *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsAuthorizationPacTtlUnit(String eapFastPacsAuthorizationPacTtlUnit) {
            return eapFastPacsAuthorizationPacTtlUnit(Output.of(eapFastPacsAuthorizationPacTtlUnit));
        }

        /**
         * @param eapFastPacsMachinePacTtl Machine PAC TTL. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsMachinePacTtl(@Nullable Output<Integer> eapFastPacsMachinePacTtl) {
            $.eapFastPacsMachinePacTtl = eapFastPacsMachinePacTtl;
            return this;
        }

        /**
         * @param eapFastPacsMachinePacTtl Machine PAC TTL. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsMachinePacTtl(Integer eapFastPacsMachinePacTtl) {
            return eapFastPacsMachinePacTtl(Output.of(eapFastPacsMachinePacTtl));
        }

        /**
         * @param eapFastPacsMachinePacTtlUnit Machine PAC TTL unit. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
         *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsMachinePacTtlUnit(@Nullable Output<String> eapFastPacsMachinePacTtlUnit) {
            $.eapFastPacsMachinePacTtlUnit = eapFastPacsMachinePacTtlUnit;
            return this;
        }

        /**
         * @param eapFastPacsMachinePacTtlUnit Machine PAC TTL unit. Is required only if `eap_fast_pacs_allow_machine_authentication` is `true`.
         *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsMachinePacTtlUnit(String eapFastPacsMachinePacTtlUnit) {
            return eapFastPacsMachinePacTtlUnit(Output.of(eapFastPacsMachinePacTtlUnit));
        }

        /**
         * @param eapFastPacsServerReturns Server returns access accept after authenticated provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsServerReturns(@Nullable Output<Boolean> eapFastPacsServerReturns) {
            $.eapFastPacsServerReturns = eapFastPacsServerReturns;
            return this;
        }

        /**
         * @param eapFastPacsServerReturns Server returns access accept after authenticated provisioning. Is required only if `eap_fast_pacs_allow_authenticated_provisioning` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsServerReturns(Boolean eapFastPacsServerReturns) {
            return eapFastPacsServerReturns(Output.of(eapFastPacsServerReturns));
        }

        /**
         * @param eapFastPacsStatelessSessionResume Stateless session resume. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsStatelessSessionResume(@Nullable Output<Boolean> eapFastPacsStatelessSessionResume) {
            $.eapFastPacsStatelessSessionResume = eapFastPacsStatelessSessionResume;
            return this;
        }

        /**
         * @param eapFastPacsStatelessSessionResume Stateless session resume. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsStatelessSessionResume(Boolean eapFastPacsStatelessSessionResume) {
            return eapFastPacsStatelessSessionResume(Output.of(eapFastPacsStatelessSessionResume));
        }

        /**
         * @param eapFastPacsTunnelPacTtl PACs tunnel PAC time to live. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsTunnelPacTtl(@Nullable Output<Integer> eapFastPacsTunnelPacTtl) {
            $.eapFastPacsTunnelPacTtl = eapFastPacsTunnelPacTtl;
            return this;
        }

        /**
         * @param eapFastPacsTunnelPacTtl PACs tunnel PAC time to live. Is required only if `eap_fast_use_pacs` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsTunnelPacTtl(Integer eapFastPacsTunnelPacTtl) {
            return eapFastPacsTunnelPacTtl(Output.of(eapFastPacsTunnelPacTtl));
        }

        /**
         * @param eapFastPacsTunnelPacTtlUnit PACs tunnel PAC time to live unit. Is required only if `eap_fast_use_pacs` is `true`.
         *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsTunnelPacTtlUnit(@Nullable Output<String> eapFastPacsTunnelPacTtlUnit) {
            $.eapFastPacsTunnelPacTtlUnit = eapFastPacsTunnelPacTtlUnit;
            return this;
        }

        /**
         * @param eapFastPacsTunnelPacTtlUnit PACs tunnel PAC time to live unit. Is required only if `eap_fast_use_pacs` is `true`.
         *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsTunnelPacTtlUnit(String eapFastPacsTunnelPacTtlUnit) {
            return eapFastPacsTunnelPacTtlUnit(Output.of(eapFastPacsTunnelPacTtlUnit));
        }

        /**
         * @param eapFastPacsUseProactivePacUpdatePercentage Use proactive pac update percentage. Is required only if `eap_fast_use_pacs` is `true`.
         *   - Range: `1`-`100`
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsUseProactivePacUpdatePercentage(@Nullable Output<Integer> eapFastPacsUseProactivePacUpdatePercentage) {
            $.eapFastPacsUseProactivePacUpdatePercentage = eapFastPacsUseProactivePacUpdatePercentage;
            return this;
        }

        /**
         * @param eapFastPacsUseProactivePacUpdatePercentage Use proactive pac update percentage. Is required only if `eap_fast_use_pacs` is `true`.
         *   - Range: `1`-`100`
         * 
         * @return builder
         * 
         */
        public Builder eapFastPacsUseProactivePacUpdatePercentage(Integer eapFastPacsUseProactivePacUpdatePercentage) {
            return eapFastPacsUseProactivePacUpdatePercentage(Output.of(eapFastPacsUseProactivePacUpdatePercentage));
        }

        /**
         * @param eapFastUsePacs Use PACs
         * 
         * @return builder
         * 
         */
        public Builder eapFastUsePacs(@Nullable Output<Boolean> eapFastUsePacs) {
            $.eapFastUsePacs = eapFastUsePacs;
            return this;
        }

        /**
         * @param eapFastUsePacs Use PACs
         * 
         * @return builder
         * 
         */
        public Builder eapFastUsePacs(Boolean eapFastUsePacs) {
            return eapFastUsePacs(Output.of(eapFastUsePacs));
        }

        /**
         * @param eapTlsAllowAuthOfExpiredCerts Allow authentication of expired certificates
         * 
         * @return builder
         * 
         */
        public Builder eapTlsAllowAuthOfExpiredCerts(@Nullable Output<Boolean> eapTlsAllowAuthOfExpiredCerts) {
            $.eapTlsAllowAuthOfExpiredCerts = eapTlsAllowAuthOfExpiredCerts;
            return this;
        }

        /**
         * @param eapTlsAllowAuthOfExpiredCerts Allow authentication of expired certificates
         * 
         * @return builder
         * 
         */
        public Builder eapTlsAllowAuthOfExpiredCerts(Boolean eapTlsAllowAuthOfExpiredCerts) {
            return eapTlsAllowAuthOfExpiredCerts(Output.of(eapTlsAllowAuthOfExpiredCerts));
        }

        /**
         * @param eapTlsEnableStatelessSessionResume Enable stateless session resume
         * 
         * @return builder
         * 
         */
        public Builder eapTlsEnableStatelessSessionResume(@Nullable Output<Boolean> eapTlsEnableStatelessSessionResume) {
            $.eapTlsEnableStatelessSessionResume = eapTlsEnableStatelessSessionResume;
            return this;
        }

        /**
         * @param eapTlsEnableStatelessSessionResume Enable stateless session resume
         * 
         * @return builder
         * 
         */
        public Builder eapTlsEnableStatelessSessionResume(Boolean eapTlsEnableStatelessSessionResume) {
            return eapTlsEnableStatelessSessionResume(Output.of(eapTlsEnableStatelessSessionResume));
        }

        /**
         * @param eapTlsLBit EAP TLS L-Bit
         * 
         * @return builder
         * 
         */
        public Builder eapTlsLBit(Output<Boolean> eapTlsLBit) {
            $.eapTlsLBit = eapTlsLBit;
            return this;
        }

        /**
         * @param eapTlsLBit EAP TLS L-Bit
         * 
         * @return builder
         * 
         */
        public Builder eapTlsLBit(Boolean eapTlsLBit) {
            return eapTlsLBit(Output.of(eapTlsLBit));
        }

        /**
         * @param eapTlsSessionTicketPercentage Session ticket percentage. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
         *   - Range: `1`-`100`
         * 
         * @return builder
         * 
         */
        public Builder eapTlsSessionTicketPercentage(@Nullable Output<Integer> eapTlsSessionTicketPercentage) {
            $.eapTlsSessionTicketPercentage = eapTlsSessionTicketPercentage;
            return this;
        }

        /**
         * @param eapTlsSessionTicketPercentage Session ticket percentage. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
         *   - Range: `1`-`100`
         * 
         * @return builder
         * 
         */
        public Builder eapTlsSessionTicketPercentage(Integer eapTlsSessionTicketPercentage) {
            return eapTlsSessionTicketPercentage(Output.of(eapTlsSessionTicketPercentage));
        }

        /**
         * @param eapTlsSessionTicketTtl Session ticket TTL. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapTlsSessionTicketTtl(@Nullable Output<Integer> eapTlsSessionTicketTtl) {
            $.eapTlsSessionTicketTtl = eapTlsSessionTicketTtl;
            return this;
        }

        /**
         * @param eapTlsSessionTicketTtl Session ticket TTL. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapTlsSessionTicketTtl(Integer eapTlsSessionTicketTtl) {
            return eapTlsSessionTicketTtl(Output.of(eapTlsSessionTicketTtl));
        }

        /**
         * @param eapTlsSessionTicketTtlUnit Session ticket TTL unit. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
         *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
         * 
         * @return builder
         * 
         */
        public Builder eapTlsSessionTicketTtlUnit(@Nullable Output<String> eapTlsSessionTicketTtlUnit) {
            $.eapTlsSessionTicketTtlUnit = eapTlsSessionTicketTtlUnit;
            return this;
        }

        /**
         * @param eapTlsSessionTicketTtlUnit Session ticket TTL unit. Is required only if `eap_tls_enable_stateless_session_resume` is `true`.
         *   - Choices: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `WEEKS`
         * 
         * @return builder
         * 
         */
        public Builder eapTlsSessionTicketTtlUnit(String eapTlsSessionTicketTtlUnit) {
            return eapTlsSessionTicketTtlUnit(Output.of(eapTlsSessionTicketTtlUnit));
        }

        /**
         * @param eapTtlsChap Allow CHAP
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsChap(@Nullable Output<Boolean> eapTtlsChap) {
            $.eapTtlsChap = eapTtlsChap;
            return this;
        }

        /**
         * @param eapTtlsChap Allow CHAP
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsChap(Boolean eapTtlsChap) {
            return eapTtlsChap(Output.of(eapTtlsChap));
        }

        /**
         * @param eapTtlsEapMd5 Allow EAP MD5
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsEapMd5(@Nullable Output<Boolean> eapTtlsEapMd5) {
            $.eapTtlsEapMd5 = eapTtlsEapMd5;
            return this;
        }

        /**
         * @param eapTtlsEapMd5 Allow EAP MD5
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsEapMd5(Boolean eapTtlsEapMd5) {
            return eapTtlsEapMd5(Output.of(eapTtlsEapMd5));
        }

        /**
         * @param eapTtlsEapMsChapV2 Allow EAP MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsEapMsChapV2(@Nullable Output<Boolean> eapTtlsEapMsChapV2) {
            $.eapTtlsEapMsChapV2 = eapTtlsEapMsChapV2;
            return this;
        }

        /**
         * @param eapTtlsEapMsChapV2 Allow EAP MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsEapMsChapV2(Boolean eapTtlsEapMsChapV2) {
            return eapTtlsEapMsChapV2(Output.of(eapTtlsEapMsChapV2));
        }

        /**
         * @param eapTtlsEapMsChapV2PwdChange Allow EAP MS CHAP v2 password change. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsEapMsChapV2PwdChange(@Nullable Output<Boolean> eapTtlsEapMsChapV2PwdChange) {
            $.eapTtlsEapMsChapV2PwdChange = eapTtlsEapMsChapV2PwdChange;
            return this;
        }

        /**
         * @param eapTtlsEapMsChapV2PwdChange Allow EAP MS CHAP v2 password change. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsEapMsChapV2PwdChange(Boolean eapTtlsEapMsChapV2PwdChange) {
            return eapTtlsEapMsChapV2PwdChange(Output.of(eapTtlsEapMsChapV2PwdChange));
        }

        /**
         * @param eapTtlsEapMsChapV2PwdChangeRetries EAP MS CHAP v2 password change retries. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsEapMsChapV2PwdChangeRetries(@Nullable Output<Integer> eapTtlsEapMsChapV2PwdChangeRetries) {
            $.eapTtlsEapMsChapV2PwdChangeRetries = eapTtlsEapMsChapV2PwdChangeRetries;
            return this;
        }

        /**
         * @param eapTtlsEapMsChapV2PwdChangeRetries EAP MS CHAP v2 password change retries. Is required only if `eap_ttls_eap_ms_chap_v2` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsEapMsChapV2PwdChangeRetries(Integer eapTtlsEapMsChapV2PwdChangeRetries) {
            return eapTtlsEapMsChapV2PwdChangeRetries(Output.of(eapTtlsEapMsChapV2PwdChangeRetries));
        }

        /**
         * @param eapTtlsMsChapV1 Allow MS CHAP v1
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsMsChapV1(@Nullable Output<Boolean> eapTtlsMsChapV1) {
            $.eapTtlsMsChapV1 = eapTtlsMsChapV1;
            return this;
        }

        /**
         * @param eapTtlsMsChapV1 Allow MS CHAP v1
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsMsChapV1(Boolean eapTtlsMsChapV1) {
            return eapTtlsMsChapV1(Output.of(eapTtlsMsChapV1));
        }

        /**
         * @param eapTtlsMsChapV2 Allow MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsMsChapV2(@Nullable Output<Boolean> eapTtlsMsChapV2) {
            $.eapTtlsMsChapV2 = eapTtlsMsChapV2;
            return this;
        }

        /**
         * @param eapTtlsMsChapV2 Allow MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsMsChapV2(Boolean eapTtlsMsChapV2) {
            return eapTtlsMsChapV2(Output.of(eapTtlsMsChapV2));
        }

        /**
         * @param eapTtlsPapAscii Allow PAP ASCII
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsPapAscii(@Nullable Output<Boolean> eapTtlsPapAscii) {
            $.eapTtlsPapAscii = eapTtlsPapAscii;
            return this;
        }

        /**
         * @param eapTtlsPapAscii Allow PAP ASCII
         * 
         * @return builder
         * 
         */
        public Builder eapTtlsPapAscii(Boolean eapTtlsPapAscii) {
            return eapTtlsPapAscii(Output.of(eapTtlsPapAscii));
        }

        /**
         * @param name The name of the allowed protocols
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the allowed protocols
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param peapAllowPeapEapGtc Allow PEAP EAP GTC
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapGtc(@Nullable Output<Boolean> peapAllowPeapEapGtc) {
            $.peapAllowPeapEapGtc = peapAllowPeapEapGtc;
            return this;
        }

        /**
         * @param peapAllowPeapEapGtc Allow PEAP EAP GTC
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapGtc(Boolean peapAllowPeapEapGtc) {
            return peapAllowPeapEapGtc(Output.of(peapAllowPeapEapGtc));
        }

        /**
         * @param peapAllowPeapEapGtcPwdChange Allow PEAP EAP GTC password change. Is required only if `allow_peap_eap_gtc` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapGtcPwdChange(@Nullable Output<Boolean> peapAllowPeapEapGtcPwdChange) {
            $.peapAllowPeapEapGtcPwdChange = peapAllowPeapEapGtcPwdChange;
            return this;
        }

        /**
         * @param peapAllowPeapEapGtcPwdChange Allow PEAP EAP GTC password change. Is required only if `allow_peap_eap_gtc` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapGtcPwdChange(Boolean peapAllowPeapEapGtcPwdChange) {
            return peapAllowPeapEapGtcPwdChange(Output.of(peapAllowPeapEapGtcPwdChange));
        }

        /**
         * @param peapAllowPeapEapGtcPwdChangeRetries PEAP EAP GTC password change retries. Is required only if `allow_peap_eap_gtc` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapGtcPwdChangeRetries(@Nullable Output<Integer> peapAllowPeapEapGtcPwdChangeRetries) {
            $.peapAllowPeapEapGtcPwdChangeRetries = peapAllowPeapEapGtcPwdChangeRetries;
            return this;
        }

        /**
         * @param peapAllowPeapEapGtcPwdChangeRetries PEAP EAP GTC password change retries. Is required only if `allow_peap_eap_gtc` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapGtcPwdChangeRetries(Integer peapAllowPeapEapGtcPwdChangeRetries) {
            return peapAllowPeapEapGtcPwdChangeRetries(Output.of(peapAllowPeapEapGtcPwdChangeRetries));
        }

        /**
         * @param peapAllowPeapEapMsChapV2 Allow PEAP EAP MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapMsChapV2(@Nullable Output<Boolean> peapAllowPeapEapMsChapV2) {
            $.peapAllowPeapEapMsChapV2 = peapAllowPeapEapMsChapV2;
            return this;
        }

        /**
         * @param peapAllowPeapEapMsChapV2 Allow PEAP EAP MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapMsChapV2(Boolean peapAllowPeapEapMsChapV2) {
            return peapAllowPeapEapMsChapV2(Output.of(peapAllowPeapEapMsChapV2));
        }

        /**
         * @param peapAllowPeapEapMsChapV2PwdChange Allow PEAP EAP MS CHAP v2 password change. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapMsChapV2PwdChange(@Nullable Output<Boolean> peapAllowPeapEapMsChapV2PwdChange) {
            $.peapAllowPeapEapMsChapV2PwdChange = peapAllowPeapEapMsChapV2PwdChange;
            return this;
        }

        /**
         * @param peapAllowPeapEapMsChapV2PwdChange Allow PEAP EAP MS CHAP v2 password change. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapMsChapV2PwdChange(Boolean peapAllowPeapEapMsChapV2PwdChange) {
            return peapAllowPeapEapMsChapV2PwdChange(Output.of(peapAllowPeapEapMsChapV2PwdChange));
        }

        /**
         * @param peapAllowPeapEapMsChapV2PwdChangeRetries Allow PEAP EAP MS CHAP v2 password change retries. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapMsChapV2PwdChangeRetries(@Nullable Output<Integer> peapAllowPeapEapMsChapV2PwdChangeRetries) {
            $.peapAllowPeapEapMsChapV2PwdChangeRetries = peapAllowPeapEapMsChapV2PwdChangeRetries;
            return this;
        }

        /**
         * @param peapAllowPeapEapMsChapV2PwdChangeRetries Allow PEAP EAP MS CHAP v2 password change retries. Is required only if `allow_peap_eap_ms_chap_v2` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapMsChapV2PwdChangeRetries(Integer peapAllowPeapEapMsChapV2PwdChangeRetries) {
            return peapAllowPeapEapMsChapV2PwdChangeRetries(Output.of(peapAllowPeapEapMsChapV2PwdChangeRetries));
        }

        /**
         * @param peapAllowPeapEapTls Allow PEAP EAP TLS
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapTls(@Nullable Output<Boolean> peapAllowPeapEapTls) {
            $.peapAllowPeapEapTls = peapAllowPeapEapTls;
            return this;
        }

        /**
         * @param peapAllowPeapEapTls Allow PEAP EAP TLS
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapTls(Boolean peapAllowPeapEapTls) {
            return peapAllowPeapEapTls(Output.of(peapAllowPeapEapTls));
        }

        /**
         * @param peapAllowPeapEapTlsAuthOfExpiredCerts Allow PEAP EAP TLS authentication of expired certificates. Is required only if `peap_allow_peap_eap_tls` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapTlsAuthOfExpiredCerts(@Nullable Output<Boolean> peapAllowPeapEapTlsAuthOfExpiredCerts) {
            $.peapAllowPeapEapTlsAuthOfExpiredCerts = peapAllowPeapEapTlsAuthOfExpiredCerts;
            return this;
        }

        /**
         * @param peapAllowPeapEapTlsAuthOfExpiredCerts Allow PEAP EAP TLS authentication of expired certificates. Is required only if `peap_allow_peap_eap_tls` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder peapAllowPeapEapTlsAuthOfExpiredCerts(Boolean peapAllowPeapEapTlsAuthOfExpiredCerts) {
            return peapAllowPeapEapTlsAuthOfExpiredCerts(Output.of(peapAllowPeapEapTlsAuthOfExpiredCerts));
        }

        /**
         * @param peapPeapV0 Allow PEAP v0
         * 
         * @return builder
         * 
         */
        public Builder peapPeapV0(@Nullable Output<Boolean> peapPeapV0) {
            $.peapPeapV0 = peapPeapV0;
            return this;
        }

        /**
         * @param peapPeapV0 Allow PEAP v0
         * 
         * @return builder
         * 
         */
        public Builder peapPeapV0(Boolean peapPeapV0) {
            return peapPeapV0(Output.of(peapPeapV0));
        }

        /**
         * @param preferredEapProtocol Preferred EAP protocol
         *   - Choices: `EAP_FAST`, `PEAP`, `LEAP`, `EAP_MD5`, `EAP_TLS`, `EAP_TTLS`, `TEAP`
         * 
         * @return builder
         * 
         */
        public Builder preferredEapProtocol(@Nullable Output<String> preferredEapProtocol) {
            $.preferredEapProtocol = preferredEapProtocol;
            return this;
        }

        /**
         * @param preferredEapProtocol Preferred EAP protocol
         *   - Choices: `EAP_FAST`, `PEAP`, `LEAP`, `EAP_MD5`, `EAP_TLS`, `EAP_TTLS`, `TEAP`
         * 
         * @return builder
         * 
         */
        public Builder preferredEapProtocol(String preferredEapProtocol) {
            return preferredEapProtocol(Output.of(preferredEapProtocol));
        }

        /**
         * @param processHostLookup Process host lookup
         * 
         * @return builder
         * 
         */
        public Builder processHostLookup(Output<Boolean> processHostLookup) {
            $.processHostLookup = processHostLookup;
            return this;
        }

        /**
         * @param processHostLookup Process host lookup
         * 
         * @return builder
         * 
         */
        public Builder processHostLookup(Boolean processHostLookup) {
            return processHostLookup(Output.of(processHostLookup));
        }

        /**
         * @param requireCryptobinding Require cryptobinding
         * 
         * @return builder
         * 
         */
        public Builder requireCryptobinding(@Nullable Output<Boolean> requireCryptobinding) {
            $.requireCryptobinding = requireCryptobinding;
            return this;
        }

        /**
         * @param requireCryptobinding Require cryptobinding
         * 
         * @return builder
         * 
         */
        public Builder requireCryptobinding(Boolean requireCryptobinding) {
            return requireCryptobinding(Output.of(requireCryptobinding));
        }

        /**
         * @param requireMessageAuth Require message authentication
         * 
         * @return builder
         * 
         */
        public Builder requireMessageAuth(Output<Boolean> requireMessageAuth) {
            $.requireMessageAuth = requireMessageAuth;
            return this;
        }

        /**
         * @param requireMessageAuth Require message authentication
         * 
         * @return builder
         * 
         */
        public Builder requireMessageAuth(Boolean requireMessageAuth) {
            return requireMessageAuth(Output.of(requireMessageAuth));
        }

        /**
         * @param teapDowngradeMsk Allow downgrade to MSK
         * 
         * @return builder
         * 
         */
        public Builder teapDowngradeMsk(@Nullable Output<Boolean> teapDowngradeMsk) {
            $.teapDowngradeMsk = teapDowngradeMsk;
            return this;
        }

        /**
         * @param teapDowngradeMsk Allow downgrade to MSK
         * 
         * @return builder
         * 
         */
        public Builder teapDowngradeMsk(Boolean teapDowngradeMsk) {
            return teapDowngradeMsk(Output.of(teapDowngradeMsk));
        }

        /**
         * @param teapEapAcceptClientCertDuringTunnelEst Accept client certificate during tunnel establishment
         * 
         * @return builder
         * 
         */
        public Builder teapEapAcceptClientCertDuringTunnelEst(@Nullable Output<Boolean> teapEapAcceptClientCertDuringTunnelEst) {
            $.teapEapAcceptClientCertDuringTunnelEst = teapEapAcceptClientCertDuringTunnelEst;
            return this;
        }

        /**
         * @param teapEapAcceptClientCertDuringTunnelEst Accept client certificate during tunnel establishment
         * 
         * @return builder
         * 
         */
        public Builder teapEapAcceptClientCertDuringTunnelEst(Boolean teapEapAcceptClientCertDuringTunnelEst) {
            return teapEapAcceptClientCertDuringTunnelEst(Output.of(teapEapAcceptClientCertDuringTunnelEst));
        }

        /**
         * @param teapEapChaining Allow EAP chaining
         * 
         * @return builder
         * 
         */
        public Builder teapEapChaining(@Nullable Output<Boolean> teapEapChaining) {
            $.teapEapChaining = teapEapChaining;
            return this;
        }

        /**
         * @param teapEapChaining Allow EAP chaining
         * 
         * @return builder
         * 
         */
        public Builder teapEapChaining(Boolean teapEapChaining) {
            return teapEapChaining(Output.of(teapEapChaining));
        }

        /**
         * @param teapEapMsChapV2 Allow EAP MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder teapEapMsChapV2(@Nullable Output<Boolean> teapEapMsChapV2) {
            $.teapEapMsChapV2 = teapEapMsChapV2;
            return this;
        }

        /**
         * @param teapEapMsChapV2 Allow EAP MS CHAP v2
         * 
         * @return builder
         * 
         */
        public Builder teapEapMsChapV2(Boolean teapEapMsChapV2) {
            return teapEapMsChapV2(Output.of(teapEapMsChapV2));
        }

        /**
         * @param teapEapMsChapV2PwdChange Allow EAP MS CHAP v2 password change. Is required only if `teap_eap_ms_chap_v2` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder teapEapMsChapV2PwdChange(@Nullable Output<Boolean> teapEapMsChapV2PwdChange) {
            $.teapEapMsChapV2PwdChange = teapEapMsChapV2PwdChange;
            return this;
        }

        /**
         * @param teapEapMsChapV2PwdChange Allow EAP MS CHAP v2 password change. Is required only if `teap_eap_ms_chap_v2` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder teapEapMsChapV2PwdChange(Boolean teapEapMsChapV2PwdChange) {
            return teapEapMsChapV2PwdChange(Output.of(teapEapMsChapV2PwdChange));
        }

        /**
         * @param teapEapMsChapV2PwdChangeRetries EAP MS CHAP v2 password change retries. Is required only if `teap_eap_ms_chap_v2` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder teapEapMsChapV2PwdChangeRetries(@Nullable Output<Integer> teapEapMsChapV2PwdChangeRetries) {
            $.teapEapMsChapV2PwdChangeRetries = teapEapMsChapV2PwdChangeRetries;
            return this;
        }

        /**
         * @param teapEapMsChapV2PwdChangeRetries EAP MS CHAP v2 password change retries. Is required only if `teap_eap_ms_chap_v2` is `true`.
         *   - Range: `0`-`3`
         * 
         * @return builder
         * 
         */
        public Builder teapEapMsChapV2PwdChangeRetries(Integer teapEapMsChapV2PwdChangeRetries) {
            return teapEapMsChapV2PwdChangeRetries(Output.of(teapEapMsChapV2PwdChangeRetries));
        }

        /**
         * @param teapEapTls Allow EAP TLS
         * 
         * @return builder
         * 
         */
        public Builder teapEapTls(@Nullable Output<Boolean> teapEapTls) {
            $.teapEapTls = teapEapTls;
            return this;
        }

        /**
         * @param teapEapTls Allow EAP TLS
         * 
         * @return builder
         * 
         */
        public Builder teapEapTls(Boolean teapEapTls) {
            return teapEapTls(Output.of(teapEapTls));
        }

        /**
         * @param teapEapTlsAuthOfExpiredCerts Allow EAP TLS authentication of expired certs. Is required only if `teap_eap_tls` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder teapEapTlsAuthOfExpiredCerts(@Nullable Output<Boolean> teapEapTlsAuthOfExpiredCerts) {
            $.teapEapTlsAuthOfExpiredCerts = teapEapTlsAuthOfExpiredCerts;
            return this;
        }

        /**
         * @param teapEapTlsAuthOfExpiredCerts Allow EAP TLS authentication of expired certs. Is required only if `teap_eap_tls` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder teapEapTlsAuthOfExpiredCerts(Boolean teapEapTlsAuthOfExpiredCerts) {
            return teapEapTlsAuthOfExpiredCerts(Output.of(teapEapTlsAuthOfExpiredCerts));
        }

        /**
         * @param teapRequestBasicPwdAuth Request basic password authentication
         * 
         * @return builder
         * 
         */
        public Builder teapRequestBasicPwdAuth(@Nullable Output<Boolean> teapRequestBasicPwdAuth) {
            $.teapRequestBasicPwdAuth = teapRequestBasicPwdAuth;
            return this;
        }

        /**
         * @param teapRequestBasicPwdAuth Request basic password authentication
         * 
         * @return builder
         * 
         */
        public Builder teapRequestBasicPwdAuth(Boolean teapRequestBasicPwdAuth) {
            return teapRequestBasicPwdAuth(Output.of(teapRequestBasicPwdAuth));
        }

        public AllowedProtocolsArgs build() {
            if ($.allowChap == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowChap");
            }
            if ($.allowEapFast == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowEapFast");
            }
            if ($.allowEapMd5 == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowEapMd5");
            }
            if ($.allowEapTls == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowEapTls");
            }
            if ($.allowEapTtls == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowEapTtls");
            }
            if ($.allowLeap == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowLeap");
            }
            if ($.allowMsChapV1 == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowMsChapV1");
            }
            if ($.allowMsChapV2 == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowMsChapV2");
            }
            if ($.allowPapAscii == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowPapAscii");
            }
            if ($.allowPeap == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowPeap");
            }
            if ($.allowPreferredEapProtocol == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowPreferredEapProtocol");
            }
            if ($.allowTeap == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowTeap");
            }
            if ($.allowWeakCiphersForEap == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "allowWeakCiphersForEap");
            }
            if ($.eapTlsLBit == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "eapTlsLBit");
            }
            if ($.processHostLookup == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "processHostLookup");
            }
            if ($.requireMessageAuth == null) {
                throw new MissingRequiredPropertyException("AllowedProtocolsArgs", "requireMessageAuth");
            }
            return $;
        }
    }

}
