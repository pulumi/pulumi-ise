// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.networkaccess.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthorizationProfileAdvancedAttributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthorizationProfileAdvancedAttributeArgs Empty = new AuthorizationProfileAdvancedAttributeArgs();

    /**
     * Dictionary name
     * 
     */
    @Import(name="attributeLeftDictionaryName")
    private @Nullable Output<String> attributeLeftDictionaryName;

    /**
     * @return Dictionary name
     * 
     */
    public Optional<Output<String>> attributeLeftDictionaryName() {
        return Optional.ofNullable(this.attributeLeftDictionaryName);
    }

    /**
     * Attribute name
     * 
     */
    @Import(name="attributeLeftName")
    private @Nullable Output<String> attributeLeftName;

    /**
     * @return Attribute name
     * 
     */
    public Optional<Output<String>> attributeLeftName() {
        return Optional.ofNullable(this.attributeLeftName);
    }

    /**
     * Dictionary name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
     * 
     */
    @Import(name="attributeRightDictionaryName")
    private @Nullable Output<String> attributeRightDictionaryName;

    /**
     * @return Dictionary name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
     * 
     */
    public Optional<Output<String>> attributeRightDictionaryName() {
        return Optional.ofNullable(this.attributeRightDictionaryName);
    }

    /**
     * Attribute name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
     * 
     */
    @Import(name="attributeRightName")
    private @Nullable Output<String> attributeRightName;

    /**
     * @return Attribute name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
     * 
     */
    public Optional<Output<String>> attributeRightName() {
        return Optional.ofNullable(this.attributeRightName);
    }

    /**
     * Attribute value, only required when `attribute_right_value_type` is `AttributeValue`
     * 
     */
    @Import(name="attributeRightValue")
    private @Nullable Output<String> attributeRightValue;

    /**
     * @return Attribute value, only required when `attribute_right_value_type` is `AttributeValue`
     * 
     */
    public Optional<Output<String>> attributeRightValue() {
        return Optional.ofNullable(this.attributeRightValue);
    }

    /**
     * Advanced attribute value type
     *   - Choices: `AdvancedDictionaryAttribute`, `AttributeValue`
     * 
     */
    @Import(name="attributeRightValueType")
    private @Nullable Output<String> attributeRightValueType;

    /**
     * @return Advanced attribute value type
     *   - Choices: `AdvancedDictionaryAttribute`, `AttributeValue`
     * 
     */
    public Optional<Output<String>> attributeRightValueType() {
        return Optional.ofNullable(this.attributeRightValueType);
    }

    private AuthorizationProfileAdvancedAttributeArgs() {}

    private AuthorizationProfileAdvancedAttributeArgs(AuthorizationProfileAdvancedAttributeArgs $) {
        this.attributeLeftDictionaryName = $.attributeLeftDictionaryName;
        this.attributeLeftName = $.attributeLeftName;
        this.attributeRightDictionaryName = $.attributeRightDictionaryName;
        this.attributeRightName = $.attributeRightName;
        this.attributeRightValue = $.attributeRightValue;
        this.attributeRightValueType = $.attributeRightValueType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthorizationProfileAdvancedAttributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorizationProfileAdvancedAttributeArgs $;

        public Builder() {
            $ = new AuthorizationProfileAdvancedAttributeArgs();
        }

        public Builder(AuthorizationProfileAdvancedAttributeArgs defaults) {
            $ = new AuthorizationProfileAdvancedAttributeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributeLeftDictionaryName Dictionary name
         * 
         * @return builder
         * 
         */
        public Builder attributeLeftDictionaryName(@Nullable Output<String> attributeLeftDictionaryName) {
            $.attributeLeftDictionaryName = attributeLeftDictionaryName;
            return this;
        }

        /**
         * @param attributeLeftDictionaryName Dictionary name
         * 
         * @return builder
         * 
         */
        public Builder attributeLeftDictionaryName(String attributeLeftDictionaryName) {
            return attributeLeftDictionaryName(Output.of(attributeLeftDictionaryName));
        }

        /**
         * @param attributeLeftName Attribute name
         * 
         * @return builder
         * 
         */
        public Builder attributeLeftName(@Nullable Output<String> attributeLeftName) {
            $.attributeLeftName = attributeLeftName;
            return this;
        }

        /**
         * @param attributeLeftName Attribute name
         * 
         * @return builder
         * 
         */
        public Builder attributeLeftName(String attributeLeftName) {
            return attributeLeftName(Output.of(attributeLeftName));
        }

        /**
         * @param attributeRightDictionaryName Dictionary name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
         * 
         * @return builder
         * 
         */
        public Builder attributeRightDictionaryName(@Nullable Output<String> attributeRightDictionaryName) {
            $.attributeRightDictionaryName = attributeRightDictionaryName;
            return this;
        }

        /**
         * @param attributeRightDictionaryName Dictionary name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
         * 
         * @return builder
         * 
         */
        public Builder attributeRightDictionaryName(String attributeRightDictionaryName) {
            return attributeRightDictionaryName(Output.of(attributeRightDictionaryName));
        }

        /**
         * @param attributeRightName Attribute name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
         * 
         * @return builder
         * 
         */
        public Builder attributeRightName(@Nullable Output<String> attributeRightName) {
            $.attributeRightName = attributeRightName;
            return this;
        }

        /**
         * @param attributeRightName Attribute name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
         * 
         * @return builder
         * 
         */
        public Builder attributeRightName(String attributeRightName) {
            return attributeRightName(Output.of(attributeRightName));
        }

        /**
         * @param attributeRightValue Attribute value, only required when `attribute_right_value_type` is `AttributeValue`
         * 
         * @return builder
         * 
         */
        public Builder attributeRightValue(@Nullable Output<String> attributeRightValue) {
            $.attributeRightValue = attributeRightValue;
            return this;
        }

        /**
         * @param attributeRightValue Attribute value, only required when `attribute_right_value_type` is `AttributeValue`
         * 
         * @return builder
         * 
         */
        public Builder attributeRightValue(String attributeRightValue) {
            return attributeRightValue(Output.of(attributeRightValue));
        }

        /**
         * @param attributeRightValueType Advanced attribute value type
         *   - Choices: `AdvancedDictionaryAttribute`, `AttributeValue`
         * 
         * @return builder
         * 
         */
        public Builder attributeRightValueType(@Nullable Output<String> attributeRightValueType) {
            $.attributeRightValueType = attributeRightValueType;
            return this;
        }

        /**
         * @param attributeRightValueType Advanced attribute value type
         *   - Choices: `AdvancedDictionaryAttribute`, `AttributeValue`
         * 
         * @return builder
         * 
         */
        public Builder attributeRightValueType(String attributeRightValueType) {
            return attributeRightValueType(Output.of(attributeRightValueType));
        }

        public AuthorizationProfileAdvancedAttributeArgs build() {
            return $;
        }
    }

}
