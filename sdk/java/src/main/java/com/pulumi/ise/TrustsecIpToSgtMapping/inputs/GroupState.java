// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.TrustsecIpToSgtMapping.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupState extends com.pulumi.resources.ResourceArgs {

    public static final GroupState Empty = new GroupState();

    /**
     * Mandatory unless `deploy_type` is `ALL`
     * 
     */
    @Import(name="deployTo")
    private @Nullable Output<String> deployTo;

    /**
     * @return Mandatory unless `deploy_type` is `ALL`
     * 
     */
    public Optional<Output<String>> deployTo() {
        return Optional.ofNullable(this.deployTo);
    }

    /**
     * Deploy Type - Choices: `ALL`, `ND`, `NDG`
     * 
     */
    @Import(name="deployType")
    private @Nullable Output<String> deployType;

    /**
     * @return Deploy Type - Choices: `ALL`, `ND`, `NDG`
     * 
     */
    public Optional<Output<String>> deployType() {
        return Optional.ofNullable(this.deployType);
    }

    /**
     * Description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the IP to SGT mapping Group
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the IP to SGT mapping Group
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Trustsec Security Group ID
     * 
     */
    @Import(name="sgt")
    private @Nullable Output<String> sgt;

    /**
     * @return Trustsec Security Group ID
     * 
     */
    public Optional<Output<String>> sgt() {
        return Optional.ofNullable(this.sgt);
    }

    private GroupState() {}

    private GroupState(GroupState $) {
        this.deployTo = $.deployTo;
        this.deployType = $.deployType;
        this.description = $.description;
        this.name = $.name;
        this.sgt = $.sgt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupState $;

        public Builder() {
            $ = new GroupState();
        }

        public Builder(GroupState defaults) {
            $ = new GroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param deployTo Mandatory unless `deploy_type` is `ALL`
         * 
         * @return builder
         * 
         */
        public Builder deployTo(@Nullable Output<String> deployTo) {
            $.deployTo = deployTo;
            return this;
        }

        /**
         * @param deployTo Mandatory unless `deploy_type` is `ALL`
         * 
         * @return builder
         * 
         */
        public Builder deployTo(String deployTo) {
            return deployTo(Output.of(deployTo));
        }

        /**
         * @param deployType Deploy Type - Choices: `ALL`, `ND`, `NDG`
         * 
         * @return builder
         * 
         */
        public Builder deployType(@Nullable Output<String> deployType) {
            $.deployType = deployType;
            return this;
        }

        /**
         * @param deployType Deploy Type - Choices: `ALL`, `ND`, `NDG`
         * 
         * @return builder
         * 
         */
        public Builder deployType(String deployType) {
            return deployType(Output.of(deployType));
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the IP to SGT mapping Group
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the IP to SGT mapping Group
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sgt Trustsec Security Group ID
         * 
         * @return builder
         * 
         */
        public Builder sgt(@Nullable Output<String> sgt) {
            $.sgt = sgt;
            return this;
        }

        /**
         * @param sgt Trustsec Security Group ID
         * 
         * @return builder
         * 
         */
        public Builder sgt(String sgt) {
            return sgt(Output.of(sgt));
        }

        public GroupState build() {
            return $;
        }
    }

}
