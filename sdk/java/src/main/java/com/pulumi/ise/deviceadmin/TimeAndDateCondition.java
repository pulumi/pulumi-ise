// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.deviceadmin;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ise.Utilities;
import com.pulumi.ise.deviceadmin.TimeAndDateConditionArgs;
import com.pulumi.ise.deviceadmin.inputs.TimeAndDateConditionState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Device Admin Time And Date Condition.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ise.deviceadmin.TimeAndDateCondition;
 * import com.pulumi.ise.deviceadmin.TimeAndDateConditionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TimeAndDateCondition(&#34;example&#34;, TimeAndDateConditionArgs.builder()        
 *             .name(&#34;Cond1&#34;)
 *             .description(&#34;My description&#34;)
 *             .isNegate(false)
 *             .weekDays(&#34;Monday&#34;)
 *             .weekDaysExceptions(&#34;Tuesday&#34;)
 *             .startDate(&#34;2022-05-06&#34;)
 *             .endDate(&#34;2022-05-10&#34;)
 *             .exceptionStartDate(&#34;2022-06-06&#34;)
 *             .exceptionEndDate(&#34;2022-06-10&#34;)
 *             .startTime(&#34;08:00&#34;)
 *             .endTime(&#34;15:00&#34;)
 *             .exceptionStartTime(&#34;20:00&#34;)
 *             .exceptionEndTime(&#34;22:00&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import ise:deviceadmin/timeAndDateCondition:TimeAndDateCondition example &#34;76d24097-41c4-4558-a4d0-a8c07ac08470&#34;
 * ```
 * 
 */
@ResourceType(type="ise:deviceadmin/timeAndDateCondition:TimeAndDateCondition")
public class TimeAndDateCondition extends com.pulumi.resources.CustomResource {
    /**
     * Condition description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Condition description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * End date
     * 
     */
    @Export(name="endDate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> endDate;

    /**
     * @return End date
     * 
     */
    public Output<Optional<String>> endDate() {
        return Codegen.optional(this.endDate);
    }
    /**
     * End time
     * 
     */
    @Export(name="endTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> endTime;

    /**
     * @return End time
     * 
     */
    public Output<Optional<String>> endTime() {
        return Codegen.optional(this.endTime);
    }
    /**
     * Exception end date
     * 
     */
    @Export(name="exceptionEndDate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> exceptionEndDate;

    /**
     * @return Exception end date
     * 
     */
    public Output<Optional<String>> exceptionEndDate() {
        return Codegen.optional(this.exceptionEndDate);
    }
    /**
     * Exception end time
     * 
     */
    @Export(name="exceptionEndTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> exceptionEndTime;

    /**
     * @return Exception end time
     * 
     */
    public Output<Optional<String>> exceptionEndTime() {
        return Codegen.optional(this.exceptionEndTime);
    }
    /**
     * Exception start date
     * 
     */
    @Export(name="exceptionStartDate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> exceptionStartDate;

    /**
     * @return Exception start date
     * 
     */
    public Output<Optional<String>> exceptionStartDate() {
        return Codegen.optional(this.exceptionStartDate);
    }
    /**
     * Exception start time
     * 
     */
    @Export(name="exceptionStartTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> exceptionStartTime;

    /**
     * @return Exception start time
     * 
     */
    public Output<Optional<String>> exceptionStartTime() {
        return Codegen.optional(this.exceptionStartTime);
    }
    /**
     * Indicates whereas this condition is in negate mode
     * 
     */
    @Export(name="isNegate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isNegate;

    /**
     * @return Indicates whereas this condition is in negate mode
     * 
     */
    public Output<Optional<Boolean>> isNegate() {
        return Codegen.optional(this.isNegate);
    }
    /**
     * Condition name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Condition name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Start date
     * 
     */
    @Export(name="startDate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> startDate;

    /**
     * @return Start date
     * 
     */
    public Output<Optional<String>> startDate() {
        return Codegen.optional(this.startDate);
    }
    /**
     * Start time
     * 
     */
    @Export(name="startTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> startTime;

    /**
     * @return Start time
     * 
     */
    public Output<Optional<String>> startTime() {
        return Codegen.optional(this.startTime);
    }
    /**
     * Defines for which days this condition will be matched. List of weekdays - `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. Default - List of all week days.
     * 
     */
    @Export(name="weekDays", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> weekDays;

    /**
     * @return Defines for which days this condition will be matched. List of weekdays - `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. Default - List of all week days.
     * 
     */
    public Output<Optional<List<String>>> weekDays() {
        return Codegen.optional(this.weekDays);
    }
    /**
     * Defines for which days this condition will NOT be matched. List of weekdays - `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
     * 
     */
    @Export(name="weekDaysExceptions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> weekDaysExceptions;

    /**
     * @return Defines for which days this condition will NOT be matched. List of weekdays - `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
     * 
     */
    public Output<Optional<List<String>>> weekDaysExceptions() {
        return Codegen.optional(this.weekDaysExceptions);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TimeAndDateCondition(String name) {
        this(name, TimeAndDateConditionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TimeAndDateCondition(String name, @Nullable TimeAndDateConditionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TimeAndDateCondition(String name, @Nullable TimeAndDateConditionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ise:deviceadmin/timeAndDateCondition:TimeAndDateCondition", name, args == null ? TimeAndDateConditionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TimeAndDateCondition(String name, Output<String> id, @Nullable TimeAndDateConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ise:deviceadmin/timeAndDateCondition:TimeAndDateCondition", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TimeAndDateCondition get(String name, Output<String> id, @Nullable TimeAndDateConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TimeAndDateCondition(name, id, state, options);
    }
}
