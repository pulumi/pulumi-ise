// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.identitymanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEndpointResult {
    /**
     * @return Custom Attributes
     * 
     */
    private Map<String,String> customAttributes;
    /**
     * @return Description
     * 
     */
    private String description;
    /**
     * @return Identity Group ID
     * 
     */
    private String groupId;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return Identity Store
     * 
     */
    private String identityStore;
    /**
     * @return Identity Store Id
     * 
     */
    private String identityStoreId;
    /**
     * @return MAC address of the endpoint
     * 
     */
    private String mac;
    /**
     * @return Mdm Compliance Status
     * 
     */
    private Boolean mdmComplianceStatus;
    /**
     * @return Mdm Encrypted
     * 
     */
    private Boolean mdmEncrypted;
    /**
     * @return Mdm Enrolled
     * 
     */
    private Boolean mdmEnrolled;
    /**
     * @return Mdm IMEI
     * 
     */
    private String mdmImei;
    /**
     * @return Mdm JailBroken
     * 
     */
    private Boolean mdmJailBroken;
    /**
     * @return Mdm Manufacturer
     * 
     */
    private String mdmManufacturer;
    /**
     * @return Mdm Model
     * 
     */
    private String mdmModel;
    /**
     * @return Mdm OS
     * 
     */
    private String mdmOs;
    /**
     * @return Mdm PhoneNumber
     * 
     */
    private String mdmPhoneNumber;
    /**
     * @return Mdm Pinlock
     * 
     */
    private Boolean mdmPinlock;
    /**
     * @return Mdm Reachable
     * 
     */
    private Boolean mdmReachable;
    /**
     * @return Mdm Serial
     * 
     */
    private String mdmSerial;
    /**
     * @return Mdm Server Name
     * 
     */
    private String mdmServerName;
    /**
     * @return The name of the endpoint
     * 
     */
    private String name;
    /**
     * @return Portal User
     * 
     */
    private String portalUser;
    /**
     * @return Profile ID
     * 
     */
    private String profileId;
    /**
     * @return Static Group Assignment
     * 
     */
    private Boolean staticGroupAssignment;
    /**
     * @return staticGroupAssignmentDefined
     * 
     */
    private Boolean staticGroupAssignmentDefined;
    /**
     * @return Static Profile Assignment
     * 
     */
    private Boolean staticProfileAssignment;
    /**
     * @return Static Profile Assignment Defined
     * 
     */
    private Boolean staticProfileAssignmentDefined;

    private GetEndpointResult() {}
    /**
     * @return Custom Attributes
     * 
     */
    public Map<String,String> customAttributes() {
        return this.customAttributes;
    }
    /**
     * @return Description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Identity Group ID
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Identity Store
     * 
     */
    public String identityStore() {
        return this.identityStore;
    }
    /**
     * @return Identity Store Id
     * 
     */
    public String identityStoreId() {
        return this.identityStoreId;
    }
    /**
     * @return MAC address of the endpoint
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return Mdm Compliance Status
     * 
     */
    public Boolean mdmComplianceStatus() {
        return this.mdmComplianceStatus;
    }
    /**
     * @return Mdm Encrypted
     * 
     */
    public Boolean mdmEncrypted() {
        return this.mdmEncrypted;
    }
    /**
     * @return Mdm Enrolled
     * 
     */
    public Boolean mdmEnrolled() {
        return this.mdmEnrolled;
    }
    /**
     * @return Mdm IMEI
     * 
     */
    public String mdmImei() {
        return this.mdmImei;
    }
    /**
     * @return Mdm JailBroken
     * 
     */
    public Boolean mdmJailBroken() {
        return this.mdmJailBroken;
    }
    /**
     * @return Mdm Manufacturer
     * 
     */
    public String mdmManufacturer() {
        return this.mdmManufacturer;
    }
    /**
     * @return Mdm Model
     * 
     */
    public String mdmModel() {
        return this.mdmModel;
    }
    /**
     * @return Mdm OS
     * 
     */
    public String mdmOs() {
        return this.mdmOs;
    }
    /**
     * @return Mdm PhoneNumber
     * 
     */
    public String mdmPhoneNumber() {
        return this.mdmPhoneNumber;
    }
    /**
     * @return Mdm Pinlock
     * 
     */
    public Boolean mdmPinlock() {
        return this.mdmPinlock;
    }
    /**
     * @return Mdm Reachable
     * 
     */
    public Boolean mdmReachable() {
        return this.mdmReachable;
    }
    /**
     * @return Mdm Serial
     * 
     */
    public String mdmSerial() {
        return this.mdmSerial;
    }
    /**
     * @return Mdm Server Name
     * 
     */
    public String mdmServerName() {
        return this.mdmServerName;
    }
    /**
     * @return The name of the endpoint
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Portal User
     * 
     */
    public String portalUser() {
        return this.portalUser;
    }
    /**
     * @return Profile ID
     * 
     */
    public String profileId() {
        return this.profileId;
    }
    /**
     * @return Static Group Assignment
     * 
     */
    public Boolean staticGroupAssignment() {
        return this.staticGroupAssignment;
    }
    /**
     * @return staticGroupAssignmentDefined
     * 
     */
    public Boolean staticGroupAssignmentDefined() {
        return this.staticGroupAssignmentDefined;
    }
    /**
     * @return Static Profile Assignment
     * 
     */
    public Boolean staticProfileAssignment() {
        return this.staticProfileAssignment;
    }
    /**
     * @return Static Profile Assignment Defined
     * 
     */
    public Boolean staticProfileAssignmentDefined() {
        return this.staticProfileAssignmentDefined;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndpointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> customAttributes;
        private String description;
        private String groupId;
        private String id;
        private String identityStore;
        private String identityStoreId;
        private String mac;
        private Boolean mdmComplianceStatus;
        private Boolean mdmEncrypted;
        private Boolean mdmEnrolled;
        private String mdmImei;
        private Boolean mdmJailBroken;
        private String mdmManufacturer;
        private String mdmModel;
        private String mdmOs;
        private String mdmPhoneNumber;
        private Boolean mdmPinlock;
        private Boolean mdmReachable;
        private String mdmSerial;
        private String mdmServerName;
        private String name;
        private String portalUser;
        private String profileId;
        private Boolean staticGroupAssignment;
        private Boolean staticGroupAssignmentDefined;
        private Boolean staticProfileAssignment;
        private Boolean staticProfileAssignmentDefined;
        public Builder() {}
        public Builder(GetEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customAttributes = defaults.customAttributes;
    	      this.description = defaults.description;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.identityStore = defaults.identityStore;
    	      this.identityStoreId = defaults.identityStoreId;
    	      this.mac = defaults.mac;
    	      this.mdmComplianceStatus = defaults.mdmComplianceStatus;
    	      this.mdmEncrypted = defaults.mdmEncrypted;
    	      this.mdmEnrolled = defaults.mdmEnrolled;
    	      this.mdmImei = defaults.mdmImei;
    	      this.mdmJailBroken = defaults.mdmJailBroken;
    	      this.mdmManufacturer = defaults.mdmManufacturer;
    	      this.mdmModel = defaults.mdmModel;
    	      this.mdmOs = defaults.mdmOs;
    	      this.mdmPhoneNumber = defaults.mdmPhoneNumber;
    	      this.mdmPinlock = defaults.mdmPinlock;
    	      this.mdmReachable = defaults.mdmReachable;
    	      this.mdmSerial = defaults.mdmSerial;
    	      this.mdmServerName = defaults.mdmServerName;
    	      this.name = defaults.name;
    	      this.portalUser = defaults.portalUser;
    	      this.profileId = defaults.profileId;
    	      this.staticGroupAssignment = defaults.staticGroupAssignment;
    	      this.staticGroupAssignmentDefined = defaults.staticGroupAssignmentDefined;
    	      this.staticProfileAssignment = defaults.staticProfileAssignment;
    	      this.staticProfileAssignmentDefined = defaults.staticProfileAssignmentDefined;
        }

        @CustomType.Setter
        public Builder customAttributes(Map<String,String> customAttributes) {
            if (customAttributes == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "customAttributes");
            }
            this.customAttributes = customAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identityStore(String identityStore) {
            if (identityStore == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "identityStore");
            }
            this.identityStore = identityStore;
            return this;
        }
        @CustomType.Setter
        public Builder identityStoreId(String identityStoreId) {
            if (identityStoreId == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "identityStoreId");
            }
            this.identityStoreId = identityStoreId;
            return this;
        }
        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder mdmComplianceStatus(Boolean mdmComplianceStatus) {
            if (mdmComplianceStatus == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmComplianceStatus");
            }
            this.mdmComplianceStatus = mdmComplianceStatus;
            return this;
        }
        @CustomType.Setter
        public Builder mdmEncrypted(Boolean mdmEncrypted) {
            if (mdmEncrypted == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmEncrypted");
            }
            this.mdmEncrypted = mdmEncrypted;
            return this;
        }
        @CustomType.Setter
        public Builder mdmEnrolled(Boolean mdmEnrolled) {
            if (mdmEnrolled == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmEnrolled");
            }
            this.mdmEnrolled = mdmEnrolled;
            return this;
        }
        @CustomType.Setter
        public Builder mdmImei(String mdmImei) {
            if (mdmImei == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmImei");
            }
            this.mdmImei = mdmImei;
            return this;
        }
        @CustomType.Setter
        public Builder mdmJailBroken(Boolean mdmJailBroken) {
            if (mdmJailBroken == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmJailBroken");
            }
            this.mdmJailBroken = mdmJailBroken;
            return this;
        }
        @CustomType.Setter
        public Builder mdmManufacturer(String mdmManufacturer) {
            if (mdmManufacturer == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmManufacturer");
            }
            this.mdmManufacturer = mdmManufacturer;
            return this;
        }
        @CustomType.Setter
        public Builder mdmModel(String mdmModel) {
            if (mdmModel == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmModel");
            }
            this.mdmModel = mdmModel;
            return this;
        }
        @CustomType.Setter
        public Builder mdmOs(String mdmOs) {
            if (mdmOs == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmOs");
            }
            this.mdmOs = mdmOs;
            return this;
        }
        @CustomType.Setter
        public Builder mdmPhoneNumber(String mdmPhoneNumber) {
            if (mdmPhoneNumber == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmPhoneNumber");
            }
            this.mdmPhoneNumber = mdmPhoneNumber;
            return this;
        }
        @CustomType.Setter
        public Builder mdmPinlock(Boolean mdmPinlock) {
            if (mdmPinlock == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmPinlock");
            }
            this.mdmPinlock = mdmPinlock;
            return this;
        }
        @CustomType.Setter
        public Builder mdmReachable(Boolean mdmReachable) {
            if (mdmReachable == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmReachable");
            }
            this.mdmReachable = mdmReachable;
            return this;
        }
        @CustomType.Setter
        public Builder mdmSerial(String mdmSerial) {
            if (mdmSerial == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmSerial");
            }
            this.mdmSerial = mdmSerial;
            return this;
        }
        @CustomType.Setter
        public Builder mdmServerName(String mdmServerName) {
            if (mdmServerName == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "mdmServerName");
            }
            this.mdmServerName = mdmServerName;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder portalUser(String portalUser) {
            if (portalUser == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "portalUser");
            }
            this.portalUser = portalUser;
            return this;
        }
        @CustomType.Setter
        public Builder profileId(String profileId) {
            if (profileId == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "profileId");
            }
            this.profileId = profileId;
            return this;
        }
        @CustomType.Setter
        public Builder staticGroupAssignment(Boolean staticGroupAssignment) {
            if (staticGroupAssignment == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "staticGroupAssignment");
            }
            this.staticGroupAssignment = staticGroupAssignment;
            return this;
        }
        @CustomType.Setter
        public Builder staticGroupAssignmentDefined(Boolean staticGroupAssignmentDefined) {
            if (staticGroupAssignmentDefined == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "staticGroupAssignmentDefined");
            }
            this.staticGroupAssignmentDefined = staticGroupAssignmentDefined;
            return this;
        }
        @CustomType.Setter
        public Builder staticProfileAssignment(Boolean staticProfileAssignment) {
            if (staticProfileAssignment == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "staticProfileAssignment");
            }
            this.staticProfileAssignment = staticProfileAssignment;
            return this;
        }
        @CustomType.Setter
        public Builder staticProfileAssignmentDefined(Boolean staticProfileAssignmentDefined) {
            if (staticProfileAssignmentDefined == null) {
              throw new MissingRequiredPropertyException("GetEndpointResult", "staticProfileAssignmentDefined");
            }
            this.staticProfileAssignmentDefined = staticProfileAssignmentDefined;
            return this;
        }
        public GetEndpointResult build() {
            final var _resultValue = new GetEndpointResult();
            _resultValue.customAttributes = customAttributes;
            _resultValue.description = description;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.identityStore = identityStore;
            _resultValue.identityStoreId = identityStoreId;
            _resultValue.mac = mac;
            _resultValue.mdmComplianceStatus = mdmComplianceStatus;
            _resultValue.mdmEncrypted = mdmEncrypted;
            _resultValue.mdmEnrolled = mdmEnrolled;
            _resultValue.mdmImei = mdmImei;
            _resultValue.mdmJailBroken = mdmJailBroken;
            _resultValue.mdmManufacturer = mdmManufacturer;
            _resultValue.mdmModel = mdmModel;
            _resultValue.mdmOs = mdmOs;
            _resultValue.mdmPhoneNumber = mdmPhoneNumber;
            _resultValue.mdmPinlock = mdmPinlock;
            _resultValue.mdmReachable = mdmReachable;
            _resultValue.mdmSerial = mdmSerial;
            _resultValue.mdmServerName = mdmServerName;
            _resultValue.name = name;
            _resultValue.portalUser = portalUser;
            _resultValue.profileId = profileId;
            _resultValue.staticGroupAssignment = staticGroupAssignment;
            _resultValue.staticGroupAssignmentDefined = staticGroupAssignmentDefined;
            _resultValue.staticProfileAssignment = staticProfileAssignment;
            _resultValue.staticProfileAssignmentDefined = staticProfileAssignmentDefined;
            return _resultValue;
        }
    }
}
