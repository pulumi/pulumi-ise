// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.CertificateAuthentication;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ise.CertificateAuthentication.ProfileArgs;
import com.pulumi.ise.CertificateAuthentication.inputs.ProfileState;
import com.pulumi.ise.Utilities;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Certificate Authentication Profile.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ise.CertificateAuthentication.Profile;
 * import com.pulumi.ise.CertificateAuthentication.ProfileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Profile(&#34;example&#34;, ProfileArgs.builder()        
 *             .name(&#34;CertProf1&#34;)
 *             .description(&#34;My cert profile&#34;)
 *             .allowedAsUserName(false)
 *             .externalIdentityStoreName(&#34;[not applicable]&#34;)
 *             .certificateAttributeName(&#34;SUBJECT_COMMON_NAME&#34;)
 *             .matchMode(&#34;NEVER&#34;)
 *             .usernameFrom(&#34;CERTIFICATE&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import ise:CertificateAuthentication/profile:Profile example &#34;76d24097-41c4-4558-a4d0-a8c07ac08470&#34;
 * ```
 * 
 */
@ResourceType(type="ise:CertificateAuthentication/profile:Profile")
public class Profile extends com.pulumi.resources.CustomResource {
    /**
     * Allow as username - Default value: `false`
     * 
     */
    @Export(name="allowedAsUserName", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowedAsUserName;

    /**
     * @return Allow as username - Default value: `false`
     * 
     */
    public Output<Boolean> allowedAsUserName() {
        return this.allowedAsUserName;
    }
    /**
     * Attribute name of the Certificate Profile - used only when CERTIFICATE is chosen in `username_from`. - Choices:
     * `SUBJECT_COMMON_NAME`, `SUBJECT_ALTERNATIVE_NAME`, `SUBJECT_SERIAL_NUMBER`, `SUBJECT`,
     * `SUBJECT_ALTERNATIVE_NAME_OTHER_NAME`, `SUBJECT_ALTERNATIVE_NAME_EMAIL`, `SUBJECT_ALTERNATIVE_NAME_DNS` - Default value:
     * `SUBJECT_COMMON_NAME`
     * 
     */
    @Export(name="certificateAttributeName", refs={String.class}, tree="[0]")
    private Output<String> certificateAttributeName;

    /**
     * @return Attribute name of the Certificate Profile - used only when CERTIFICATE is chosen in `username_from`. - Choices:
     * `SUBJECT_COMMON_NAME`, `SUBJECT_ALTERNATIVE_NAME`, `SUBJECT_SERIAL_NUMBER`, `SUBJECT`,
     * `SUBJECT_ALTERNATIVE_NAME_OTHER_NAME`, `SUBJECT_ALTERNATIVE_NAME_EMAIL`, `SUBJECT_ALTERNATIVE_NAME_DNS` - Default value:
     * `SUBJECT_COMMON_NAME`
     * 
     */
    public Output<String> certificateAttributeName() {
        return this.certificateAttributeName;
    }
    /**
     * Description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Referred IDStore name for the Certificate Profile or `[not applicable]` in case no identity store is chosen - Default
     * value: `[not applicable]`
     * 
     */
    @Export(name="externalIdentityStoreName", refs={String.class}, tree="[0]")
    private Output<String> externalIdentityStoreName;

    /**
     * @return Referred IDStore name for the Certificate Profile or `[not applicable]` in case no identity store is chosen - Default
     * value: `[not applicable]`
     * 
     */
    public Output<String> externalIdentityStoreName() {
        return this.externalIdentityStoreName;
    }
    /**
     * Match mode of the Certificate Profile. Allowed values: NEVER, RESOLVE_IDENTITY_AMBIGUITY, BINARY_COMPARISON - Choices:
     * `NEVER`, `RESOLVE_IDENTITY_AMBIGUITY`, `BINARY_COMPARISON` - Default value: `NEVER`
     * 
     */
    @Export(name="matchMode", refs={String.class}, tree="[0]")
    private Output<String> matchMode;

    /**
     * @return Match mode of the Certificate Profile. Allowed values: NEVER, RESOLVE_IDENTITY_AMBIGUITY, BINARY_COMPARISON - Choices:
     * `NEVER`, `RESOLVE_IDENTITY_AMBIGUITY`, `BINARY_COMPARISON` - Default value: `NEVER`
     * 
     */
    public Output<String> matchMode() {
        return this.matchMode;
    }
    /**
     * The name of the certificate profile
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the certificate profile
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The attribute in the certificate where the user name should be taken from. Allowed values: `CERTIFICATE` (for a specific
     * attribute as defined in certificateAttributeName), `UPN` (for using any Subject or Alternative Name Attributes in the
     * Certificate - an option only in AD) - Choices: `CERTIFICATE`, `UPN` - Default value: `CERTIFICATE`
     * 
     */
    @Export(name="usernameFrom", refs={String.class}, tree="[0]")
    private Output<String> usernameFrom;

    /**
     * @return The attribute in the certificate where the user name should be taken from. Allowed values: `CERTIFICATE` (for a specific
     * attribute as defined in certificateAttributeName), `UPN` (for using any Subject or Alternative Name Attributes in the
     * Certificate - an option only in AD) - Choices: `CERTIFICATE`, `UPN` - Default value: `CERTIFICATE`
     * 
     */
    public Output<String> usernameFrom() {
        return this.usernameFrom;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Profile(String name) {
        this(name, ProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Profile(String name, @Nullable ProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Profile(String name, @Nullable ProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ise:CertificateAuthentication/profile:Profile", name, args == null ? ProfileArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Profile(String name, Output<String> id, @Nullable ProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ise:CertificateAuthentication/profile:Profile", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Profile get(String name, Output<String> id, @Nullable ProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Profile(name, id, state, options);
    }
}
