// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.networkaccess;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ise.Utilities;
import com.pulumi.ise.networkaccess.ConditionArgs;
import com.pulumi.ise.networkaccess.inputs.ConditionState;
import com.pulumi.ise.networkaccess.outputs.ConditionChildren;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Network Access Condition.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ise.networkaccess.Condition;
 * import com.pulumi.ise.networkaccess.ConditionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Condition("example", ConditionArgs.builder()
 *             .name("Cond1")
 *             .description("My description")
 *             .conditionType("LibraryConditionAttributes")
 *             .isNegate(false)
 *             .attributeName("EapAuthentication")
 *             .attributeValue("EAP-TLS")
 *             .dictionaryName("Network Access")
 *             .operator("equals")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * ```sh
 * $ pulumi import ise:networkaccess/condition:Condition example &#34;76d24097-41c4-4558-a4d0-a8c07ac08470&#34;
 * ```
 * 
 */
@ResourceType(type="ise:networkaccess/condition:Condition")
public class Condition extends com.pulumi.resources.CustomResource {
    /**
     * Dictionary attribute name
     * 
     */
    @Export(name="attributeName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> attributeName;

    /**
     * @return Dictionary attribute name
     * 
     */
    public Output<Optional<String>> attributeName() {
        return Codegen.optional(this.attributeName);
    }
    /**
     * Attribute value for condition. Value type is specified in dictionary object.
     * 
     */
    @Export(name="attributeValue", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> attributeValue;

    /**
     * @return Attribute value for condition. Value type is specified in dictionary object.
     * 
     */
    public Output<Optional<String>> attributeValue() {
        return Codegen.optional(this.attributeValue);
    }
    /**
     * List of child conditions. `condition_type` must be one of `LibraryConditionAndBlock` or `LibraryConditionOrBlock`.
     * 
     */
    @Export(name="childrens", refs={List.class,ConditionChildren.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConditionChildren>> childrens;

    /**
     * @return List of child conditions. `condition_type` must be one of `LibraryConditionAndBlock` or `LibraryConditionOrBlock`.
     * 
     */
    public Output<Optional<List<ConditionChildren>>> childrens() {
        return Codegen.optional(this.childrens);
    }
    /**
     * Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that additional conditions are present under the children attribute.
     *   - Choices: `LibraryConditionAndBlock`, `LibraryConditionAttributes`, `LibraryConditionOrBlock`
     * 
     */
    @Export(name="conditionType", refs={String.class}, tree="[0]")
    private Output<String> conditionType;

    /**
     * @return Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that additional conditions are present under the children attribute.
     *   - Choices: `LibraryConditionAndBlock`, `LibraryConditionAttributes`, `LibraryConditionOrBlock`
     * 
     */
    public Output<String> conditionType() {
        return this.conditionType;
    }
    /**
     * Condition description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Condition description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Dictionary name
     * 
     */
    @Export(name="dictionaryName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dictionaryName;

    /**
     * @return Dictionary name
     * 
     */
    public Output<Optional<String>> dictionaryName() {
        return Codegen.optional(this.dictionaryName);
    }
    /**
     * Dictionary value
     * 
     */
    @Export(name="dictionaryValue", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dictionaryValue;

    /**
     * @return Dictionary value
     * 
     */
    public Output<Optional<String>> dictionaryValue() {
        return Codegen.optional(this.dictionaryValue);
    }
    /**
     * Indicates whereas this condition is in negate mode
     * 
     */
    @Export(name="isNegate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isNegate;

    /**
     * @return Indicates whereas this condition is in negate mode
     * 
     */
    public Output<Optional<Boolean>> isNegate() {
        return Codegen.optional(this.isNegate);
    }
    /**
     * Condition name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Condition name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Equality operator
     *   - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`, `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`, `notEquals`, `notIn`, `notStartsWith`, `startsWith`
     * 
     */
    @Export(name="operator", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> operator;

    /**
     * @return Equality operator
     *   - Choices: `contains`, `endsWith`, `equals`, `greaterOrEquals`, `greaterThan`, `in`, `ipEquals`, `ipGreaterThan`, `ipLessThan`, `ipNotEquals`, `lessOrEquals`, `lessThan`, `matches`, `notContains`, `notEndsWith`, `notEquals`, `notIn`, `notStartsWith`, `startsWith`
     * 
     */
    public Output<Optional<String>> operator() {
        return Codegen.optional(this.operator);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Condition(java.lang.String name) {
        this(name, ConditionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Condition(java.lang.String name, ConditionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Condition(java.lang.String name, ConditionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ise:networkaccess/condition:Condition", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Condition(java.lang.String name, Output<java.lang.String> id, @Nullable ConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ise:networkaccess/condition:Condition", name, state, makeResourceOptions(options, id), false);
    }

    private static ConditionArgs makeArgs(ConditionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ConditionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Condition get(java.lang.String name, Output<java.lang.String> id, @Nullable ConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Condition(name, id, state, options);
    }
}
