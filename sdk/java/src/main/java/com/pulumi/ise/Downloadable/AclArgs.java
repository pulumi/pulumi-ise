// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.Downloadable;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclArgs Empty = new AclArgs();

    /**
     * The DACL content
     * 
     */
    @Import(name="dacl", required=true)
    private Output<String> dacl;

    /**
     * @return The DACL content
     * 
     */
    public Output<String> dacl() {
        return this.dacl;
    }

    /**
     * The type of ACL - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC` - Default value: `IPV4`
     * 
     */
    @Import(name="daclType")
    private @Nullable Output<String> daclType;

    /**
     * @return The type of ACL - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC` - Default value: `IPV4`
     * 
     */
    public Optional<Output<String>> daclType() {
        return Optional.ofNullable(this.daclType);
    }

    /**
     * Description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the downloadable ACL
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the downloadable ACL
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private AclArgs() {}

    private AclArgs(AclArgs $) {
        this.dacl = $.dacl;
        this.daclType = $.daclType;
        this.description = $.description;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclArgs $;

        public Builder() {
            $ = new AclArgs();
        }

        public Builder(AclArgs defaults) {
            $ = new AclArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dacl The DACL content
         * 
         * @return builder
         * 
         */
        public Builder dacl(Output<String> dacl) {
            $.dacl = dacl;
            return this;
        }

        /**
         * @param dacl The DACL content
         * 
         * @return builder
         * 
         */
        public Builder dacl(String dacl) {
            return dacl(Output.of(dacl));
        }

        /**
         * @param daclType The type of ACL - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC` - Default value: `IPV4`
         * 
         * @return builder
         * 
         */
        public Builder daclType(@Nullable Output<String> daclType) {
            $.daclType = daclType;
            return this;
        }

        /**
         * @param daclType The type of ACL - Choices: `IPV4`, `IPV6`, `IP_AGNOSTIC` - Default value: `IPV4`
         * 
         * @return builder
         * 
         */
        public Builder daclType(String daclType) {
            return daclType(Output.of(daclType));
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the downloadable ACL
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the downloadable ACL
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AclArgs build() {
            if ($.dacl == null) {
                throw new MissingRequiredPropertyException("AclArgs", "dacl");
            }
            return $;
        }
    }

}
