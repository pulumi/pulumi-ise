// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ise.activeDirectory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ise.activeDirectory.inputs.JoinDomainWithAllNodesAdditionalDataArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JoinDomainWithAllNodesState extends com.pulumi.resources.ResourceArgs {

    public static final JoinDomainWithAllNodesState Empty = new JoinDomainWithAllNodesState();

    @Import(name="additionalDatas")
    private @Nullable Output<List<JoinDomainWithAllNodesAdditionalDataArgs>> additionalDatas;

    public Optional<Output<List<JoinDomainWithAllNodesAdditionalDataArgs>>> additionalDatas() {
        return Optional.ofNullable(this.additionalDatas);
    }

    /**
     * Active Directory Join Point ID
     * 
     */
    @Import(name="joinPointId")
    private @Nullable Output<String> joinPointId;

    /**
     * @return Active Directory Join Point ID
     * 
     */
    public Optional<Output<String>> joinPointId() {
        return Optional.ofNullable(this.joinPointId);
    }

    private JoinDomainWithAllNodesState() {}

    private JoinDomainWithAllNodesState(JoinDomainWithAllNodesState $) {
        this.additionalDatas = $.additionalDatas;
        this.joinPointId = $.joinPointId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JoinDomainWithAllNodesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JoinDomainWithAllNodesState $;

        public Builder() {
            $ = new JoinDomainWithAllNodesState();
        }

        public Builder(JoinDomainWithAllNodesState defaults) {
            $ = new JoinDomainWithAllNodesState(Objects.requireNonNull(defaults));
        }

        public Builder additionalDatas(@Nullable Output<List<JoinDomainWithAllNodesAdditionalDataArgs>> additionalDatas) {
            $.additionalDatas = additionalDatas;
            return this;
        }

        public Builder additionalDatas(List<JoinDomainWithAllNodesAdditionalDataArgs> additionalDatas) {
            return additionalDatas(Output.of(additionalDatas));
        }

        public Builder additionalDatas(JoinDomainWithAllNodesAdditionalDataArgs... additionalDatas) {
            return additionalDatas(List.of(additionalDatas));
        }

        /**
         * @param joinPointId Active Directory Join Point ID
         * 
         * @return builder
         * 
         */
        public Builder joinPointId(@Nullable Output<String> joinPointId) {
            $.joinPointId = joinPointId;
            return this;
        }

        /**
         * @param joinPointId Active Directory Join Point ID
         * 
         * @return builder
         * 
         */
        public Builder joinPointId(String joinPointId) {
            return joinPointId(Output.of(joinPointId));
        }

        public JoinDomainWithAllNodesState build() {
            return $;
        }
    }

}
