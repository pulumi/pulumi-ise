# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .endpoint import *
from .get_endpoint import *
from .get_repository import *
from .provider import *
from .repository import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi-ise.activedirectoryadd as __activedirectoryadd
    activedirectoryadd = __activedirectoryadd
    import pulumi-ise.activedirectorygroupsby as __activedirectorygroupsby
    activedirectorygroupsby = __activedirectorygroupsby
    import pulumi-ise.activedirectoryjoin as __activedirectoryjoin
    activedirectoryjoin = __activedirectoryjoin
    import pulumi-ise.activedirectoryjoindomainwithall as __activedirectoryjoindomainwithall
    activedirectoryjoindomainwithall = __activedirectoryjoindomainwithall
    import pulumi-ise.allowed as __allowed
    allowed = __allowed
    import pulumi-ise.allowedprotocols as __allowedprotocols
    allowedprotocols = __allowedprotocols
    import pulumi-ise.authorization as __authorization
    authorization = __authorization
    import pulumi-ise.certificateauthentication as __certificateauthentication
    certificateauthentication = __certificateauthentication
    import pulumi-ise.config as __config
    config = __config
    import pulumi-ise.deviceadmin as __deviceadmin
    deviceadmin = __deviceadmin
    import pulumi-ise.deviceadminauthentication as __deviceadminauthentication
    deviceadminauthentication = __deviceadminauthentication
    import pulumi-ise.deviceadminauthorization as __deviceadminauthorization
    deviceadminauthorization = __deviceadminauthorization
    import pulumi-ise.deviceadminauthorizationexception as __deviceadminauthorizationexception
    deviceadminauthorizationexception = __deviceadminauthorizationexception
    import pulumi-ise.deviceadminauthorizationglobalexception as __deviceadminauthorizationglobalexception
    deviceadminauthorizationglobalexception = __deviceadminauthorizationglobalexception
    import pulumi-ise.deviceadminpolicy as __deviceadminpolicy
    deviceadminpolicy = __deviceadminpolicy
    import pulumi-ise.deviceadmintimeanddate as __deviceadmintimeanddate
    deviceadmintimeanddate = __deviceadmintimeanddate
    import pulumi-ise.downloadable as __downloadable
    downloadable = __downloadable
    import pulumi-ise.endpointidentity as __endpointidentity
    endpointidentity = __endpointidentity
    import pulumi-ise.identitysource as __identitysource
    identitysource = __identitysource
    import pulumi-ise.internal as __internal
    internal = __internal
    import pulumi-ise.licensetier as __licensetier
    licensetier = __licensetier
    import pulumi-ise.network as __network
    network = __network
    import pulumi-ise.networkaccess as __networkaccess
    networkaccess = __networkaccess
    import pulumi-ise.networkaccessauthentication as __networkaccessauthentication
    networkaccessauthentication = __networkaccessauthentication
    import pulumi-ise.networkaccessauthorization as __networkaccessauthorization
    networkaccessauthorization = __networkaccessauthorization
    import pulumi-ise.networkaccessauthorizationexception as __networkaccessauthorizationexception
    networkaccessauthorizationexception = __networkaccessauthorizationexception
    import pulumi-ise.networkaccessauthorizationglobalexception as __networkaccessauthorizationglobalexception
    networkaccessauthorizationglobalexception = __networkaccessauthorizationglobalexception
    import pulumi-ise.networkaccesspolicy as __networkaccesspolicy
    networkaccesspolicy = __networkaccesspolicy
    import pulumi-ise.networkaccesstimeanddate as __networkaccesstimeanddate
    networkaccesstimeanddate = __networkaccesstimeanddate
    import pulumi-ise.networkdevice as __networkdevice
    networkdevice = __networkdevice
    import pulumi-ise.tacacs as __tacacs
    tacacs = __tacacs
    import pulumi-ise.tacacscommand as __tacacscommand
    tacacscommand = __tacacscommand
    import pulumi-ise.trustsecegressmatrix as __trustsecegressmatrix
    trustsecegressmatrix = __trustsecegressmatrix
    import pulumi-ise.trustseciptosgt as __trustseciptosgt
    trustseciptosgt = __trustseciptosgt
    import pulumi-ise.trustseciptosgtmapping as __trustseciptosgtmapping
    trustseciptosgtmapping = __trustseciptosgtmapping
    import pulumi-ise.trustsecsecurity as __trustsecsecurity
    trustsecsecurity = __trustsecsecurity
    import pulumi-ise.trustsecsecuritygroup as __trustsecsecuritygroup
    trustsecsecuritygroup = __trustsecsecuritygroup
    import pulumi-ise.useridentity as __useridentity
    useridentity = __useridentity
else:
    activedirectoryadd = _utilities.lazy_import('pulumi-ise.activedirectoryadd')
    activedirectorygroupsby = _utilities.lazy_import('pulumi-ise.activedirectorygroupsby')
    activedirectoryjoin = _utilities.lazy_import('pulumi-ise.activedirectoryjoin')
    activedirectoryjoindomainwithall = _utilities.lazy_import('pulumi-ise.activedirectoryjoindomainwithall')
    allowed = _utilities.lazy_import('pulumi-ise.allowed')
    allowedprotocols = _utilities.lazy_import('pulumi-ise.allowedprotocols')
    authorization = _utilities.lazy_import('pulumi-ise.authorization')
    certificateauthentication = _utilities.lazy_import('pulumi-ise.certificateauthentication')
    config = _utilities.lazy_import('pulumi-ise.config')
    deviceadmin = _utilities.lazy_import('pulumi-ise.deviceadmin')
    deviceadminauthentication = _utilities.lazy_import('pulumi-ise.deviceadminauthentication')
    deviceadminauthorization = _utilities.lazy_import('pulumi-ise.deviceadminauthorization')
    deviceadminauthorizationexception = _utilities.lazy_import('pulumi-ise.deviceadminauthorizationexception')
    deviceadminauthorizationglobalexception = _utilities.lazy_import('pulumi-ise.deviceadminauthorizationglobalexception')
    deviceadminpolicy = _utilities.lazy_import('pulumi-ise.deviceadminpolicy')
    deviceadmintimeanddate = _utilities.lazy_import('pulumi-ise.deviceadmintimeanddate')
    downloadable = _utilities.lazy_import('pulumi-ise.downloadable')
    endpointidentity = _utilities.lazy_import('pulumi-ise.endpointidentity')
    identitysource = _utilities.lazy_import('pulumi-ise.identitysource')
    internal = _utilities.lazy_import('pulumi-ise.internal')
    licensetier = _utilities.lazy_import('pulumi-ise.licensetier')
    network = _utilities.lazy_import('pulumi-ise.network')
    networkaccess = _utilities.lazy_import('pulumi-ise.networkaccess')
    networkaccessauthentication = _utilities.lazy_import('pulumi-ise.networkaccessauthentication')
    networkaccessauthorization = _utilities.lazy_import('pulumi-ise.networkaccessauthorization')
    networkaccessauthorizationexception = _utilities.lazy_import('pulumi-ise.networkaccessauthorizationexception')
    networkaccessauthorizationglobalexception = _utilities.lazy_import('pulumi-ise.networkaccessauthorizationglobalexception')
    networkaccesspolicy = _utilities.lazy_import('pulumi-ise.networkaccesspolicy')
    networkaccesstimeanddate = _utilities.lazy_import('pulumi-ise.networkaccesstimeanddate')
    networkdevice = _utilities.lazy_import('pulumi-ise.networkdevice')
    tacacs = _utilities.lazy_import('pulumi-ise.tacacs')
    tacacscommand = _utilities.lazy_import('pulumi-ise.tacacscommand')
    trustsecegressmatrix = _utilities.lazy_import('pulumi-ise.trustsecegressmatrix')
    trustseciptosgt = _utilities.lazy_import('pulumi-ise.trustseciptosgt')
    trustseciptosgtmapping = _utilities.lazy_import('pulumi-ise.trustseciptosgtmapping')
    trustsecsecurity = _utilities.lazy_import('pulumi-ise.trustsecsecurity')
    trustsecsecuritygroup = _utilities.lazy_import('pulumi-ise.trustsecsecuritygroup')
    useridentity = _utilities.lazy_import('pulumi-ise.useridentity')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "ise",
  "mod": "ActiveDirectoryAdd/groups",
  "fqn": "pulumi-ise.activedirectoryadd",
  "classes": {
   "ise:ActiveDirectoryAdd/groups:Groups": "Groups"
  }
 },
 {
  "pkg": "ise",
  "mod": "ActiveDirectoryJoin/point",
  "fqn": "pulumi-ise.activedirectoryjoin",
  "classes": {
   "ise:ActiveDirectoryJoin/point:Point": "Point"
  }
 },
 {
  "pkg": "ise",
  "mod": "ActiveDirectoryJoinDomainWithAll/nodes",
  "fqn": "pulumi-ise.activedirectoryjoindomainwithall",
  "classes": {
   "ise:ActiveDirectoryJoinDomainWithAll/nodes:Nodes": "Nodes"
  }
 },
 {
  "pkg": "ise",
  "mod": "Allowed/protocols",
  "fqn": "pulumi-ise.allowed",
  "classes": {
   "ise:Allowed/protocols:Protocols": "Protocols"
  }
 },
 {
  "pkg": "ise",
  "mod": "AllowedProtocols/tacacs",
  "fqn": "pulumi-ise.allowedprotocols",
  "classes": {
   "ise:AllowedProtocols/tacacs:Tacacs": "Tacacs"
  }
 },
 {
  "pkg": "ise",
  "mod": "Authorization/profile",
  "fqn": "pulumi-ise.authorization",
  "classes": {
   "ise:Authorization/profile:Profile": "Profile"
  }
 },
 {
  "pkg": "ise",
  "mod": "CertificateAuthentication/profile",
  "fqn": "pulumi-ise.certificateauthentication",
  "classes": {
   "ise:CertificateAuthentication/profile:Profile": "Profile"
  }
 },
 {
  "pkg": "ise",
  "mod": "DeviceAdmin/condition",
  "fqn": "pulumi-ise.deviceadmin",
  "classes": {
   "ise:DeviceAdmin/condition:Condition": "Condition"
  }
 },
 {
  "pkg": "ise",
  "mod": "DeviceAdminAuthentication/rule",
  "fqn": "pulumi-ise.deviceadminauthentication",
  "classes": {
   "ise:DeviceAdminAuthentication/rule:Rule": "Rule"
  }
 },
 {
  "pkg": "ise",
  "mod": "DeviceAdminAuthorization/rule",
  "fqn": "pulumi-ise.deviceadminauthorization",
  "classes": {
   "ise:DeviceAdminAuthorization/rule:Rule": "Rule"
  }
 },
 {
  "pkg": "ise",
  "mod": "DeviceAdminAuthorizationException/rule",
  "fqn": "pulumi-ise.deviceadminauthorizationexception",
  "classes": {
   "ise:DeviceAdminAuthorizationException/rule:Rule": "Rule"
  }
 },
 {
  "pkg": "ise",
  "mod": "DeviceAdminAuthorizationGlobalException/rule",
  "fqn": "pulumi-ise.deviceadminauthorizationglobalexception",
  "classes": {
   "ise:DeviceAdminAuthorizationGlobalException/rule:Rule": "Rule"
  }
 },
 {
  "pkg": "ise",
  "mod": "DeviceAdminPolicy/set",
  "fqn": "pulumi-ise.deviceadminpolicy",
  "classes": {
   "ise:DeviceAdminPolicy/set:Set": "Set"
  }
 },
 {
  "pkg": "ise",
  "mod": "DeviceAdminTimeAndDate/condition",
  "fqn": "pulumi-ise.deviceadmintimeanddate",
  "classes": {
   "ise:DeviceAdminTimeAndDate/condition:Condition": "Condition"
  }
 },
 {
  "pkg": "ise",
  "mod": "Downloadable/acl",
  "fqn": "pulumi-ise.downloadable",
  "classes": {
   "ise:Downloadable/acl:Acl": "Acl"
  }
 },
 {
  "pkg": "ise",
  "mod": "EndpointIdentity/group",
  "fqn": "pulumi-ise.endpointidentity",
  "classes": {
   "ise:EndpointIdentity/group:Group": "Group"
  }
 },
 {
  "pkg": "ise",
  "mod": "IdentitySource/sequence",
  "fqn": "pulumi-ise.identitysource",
  "classes": {
   "ise:IdentitySource/sequence:Sequence": "Sequence"
  }
 },
 {
  "pkg": "ise",
  "mod": "Internal/user",
  "fqn": "pulumi-ise.internal",
  "classes": {
   "ise:Internal/user:User": "User"
  }
 },
 {
  "pkg": "ise",
  "mod": "LicenseTier/state",
  "fqn": "pulumi-ise.licensetier",
  "classes": {
   "ise:LicenseTier/state:State": "State"
  }
 },
 {
  "pkg": "ise",
  "mod": "Network/device",
  "fqn": "pulumi-ise.network",
  "classes": {
   "ise:Network/device:Device": "Device"
  }
 },
 {
  "pkg": "ise",
  "mod": "NetworkAccess/condition",
  "fqn": "pulumi-ise.networkaccess",
  "classes": {
   "ise:NetworkAccess/condition:Condition": "Condition"
  }
 },
 {
  "pkg": "ise",
  "mod": "NetworkAccess/dictionary",
  "fqn": "pulumi-ise.networkaccess",
  "classes": {
   "ise:NetworkAccess/dictionary:Dictionary": "Dictionary"
  }
 },
 {
  "pkg": "ise",
  "mod": "NetworkAccessAuthentication/rule",
  "fqn": "pulumi-ise.networkaccessauthentication",
  "classes": {
   "ise:NetworkAccessAuthentication/rule:Rule": "Rule"
  }
 },
 {
  "pkg": "ise",
  "mod": "NetworkAccessAuthorization/rule",
  "fqn": "pulumi-ise.networkaccessauthorization",
  "classes": {
   "ise:NetworkAccessAuthorization/rule:Rule": "Rule"
  }
 },
 {
  "pkg": "ise",
  "mod": "NetworkAccessAuthorizationException/rule",
  "fqn": "pulumi-ise.networkaccessauthorizationexception",
  "classes": {
   "ise:NetworkAccessAuthorizationException/rule:Rule": "Rule"
  }
 },
 {
  "pkg": "ise",
  "mod": "NetworkAccessAuthorizationGlobalException/rule",
  "fqn": "pulumi-ise.networkaccessauthorizationglobalexception",
  "classes": {
   "ise:NetworkAccessAuthorizationGlobalException/rule:Rule": "Rule"
  }
 },
 {
  "pkg": "ise",
  "mod": "NetworkAccessPolicy/set",
  "fqn": "pulumi-ise.networkaccesspolicy",
  "classes": {
   "ise:NetworkAccessPolicy/set:Set": "Set"
  }
 },
 {
  "pkg": "ise",
  "mod": "NetworkAccessTimeAndDate/condition",
  "fqn": "pulumi-ise.networkaccesstimeanddate",
  "classes": {
   "ise:NetworkAccessTimeAndDate/condition:Condition": "Condition"
  }
 },
 {
  "pkg": "ise",
  "mod": "NetworkDevice/group",
  "fqn": "pulumi-ise.networkdevice",
  "classes": {
   "ise:NetworkDevice/group:Group": "Group"
  }
 },
 {
  "pkg": "ise",
  "mod": "Tacacs/profile",
  "fqn": "pulumi-ise.tacacs",
  "classes": {
   "ise:Tacacs/profile:Profile": "Profile"
  }
 },
 {
  "pkg": "ise",
  "mod": "TacacsCommand/set",
  "fqn": "pulumi-ise.tacacscommand",
  "classes": {
   "ise:TacacsCommand/set:Set": "Set"
  }
 },
 {
  "pkg": "ise",
  "mod": "TrustsecEgressMatrix/cell",
  "fqn": "pulumi-ise.trustsecegressmatrix",
  "classes": {
   "ise:TrustsecEgressMatrix/cell:Cell": "Cell"
  }
 },
 {
  "pkg": "ise",
  "mod": "TrustsecIpToSgt/mapping",
  "fqn": "pulumi-ise.trustseciptosgt",
  "classes": {
   "ise:TrustsecIpToSgt/mapping:Mapping": "Mapping"
  }
 },
 {
  "pkg": "ise",
  "mod": "TrustsecIpToSgtMapping/group",
  "fqn": "pulumi-ise.trustseciptosgtmapping",
  "classes": {
   "ise:TrustsecIpToSgtMapping/group:Group": "Group"
  }
 },
 {
  "pkg": "ise",
  "mod": "TrustsecSecurity/group",
  "fqn": "pulumi-ise.trustsecsecurity",
  "classes": {
   "ise:TrustsecSecurity/group:Group": "Group"
  }
 },
 {
  "pkg": "ise",
  "mod": "TrustsecSecurityGroup/acl",
  "fqn": "pulumi-ise.trustsecsecuritygroup",
  "classes": {
   "ise:TrustsecSecurityGroup/acl:Acl": "Acl"
  }
 },
 {
  "pkg": "ise",
  "mod": "UserIdentity/group",
  "fqn": "pulumi-ise.useridentity",
  "classes": {
   "ise:UserIdentity/group:Group": "Group"
  }
 },
 {
  "pkg": "ise",
  "mod": "index/endpoint",
  "fqn": "pulumi-ise",
  "classes": {
   "ise:index/endpoint:Endpoint": "Endpoint"
  }
 },
 {
  "pkg": "ise",
  "mod": "index/repository",
  "fqn": "pulumi-ise",
  "classes": {
   "ise:index/repository:Repository": "Repository"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "ise",
  "token": "pulumi:providers:ise",
  "fqn": "pulumi-ise",
  "class": "Provider"
 }
]
"""
)
